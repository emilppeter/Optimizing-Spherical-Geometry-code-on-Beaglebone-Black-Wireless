 Percent |	Source code & Disassembly of sg for cycles:ppp (44249 samples)
------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00010c0c <Find_Nearest_Waypoint_Pass_1>:
         :	Find_Nearest_Waypoint_Pass_1():
         :	  // return information to calling function about closest waypoint 
         :	  *distance = d;
         :	  *bearing = b;
         :	  *name = (char * ) (waypoints[closest_i].Name);
         :	}
         :	int Find_Nearest_Waypoint_Pass_1(PT_T *ref,float *c, float *max_c){
    0.00 :	  10c0c:       stmdb   sp!, {r4, r5, r6, r7, r8, lr}
    0.02 :	  10c10:       vpush   {d8}
    0.05 :	  10c14:       push    {lr}
    0.00 :	  10c16:       bl      31520 <__gnu_mcount_nc>
    0.04 :	  10c1a:       ldr     r3, [pc, #128]  ; (10c9c <Find_Nearest_Waypoint_Pass_1+0x90>)
    0.00 :	  10c1c:       mov     r8, r2
    0.00 :	  10c1e:       ldr     r2, [pc, #128]  ; (10ca0 <Find_Nearest_Waypoint_Pass_1+0x94>)
    0.00 :	  10c20:       add     r3, pc
         :	  // bearing is in degrees
         :
         :	  int i=0;
         :	  struct timespec prestart, start, end1, end2;
         :	  unsigned to;
         :	  *max_c=0;
    0.00 :	  10c22:       movs    r4, #0
    0.00 :	  10c24:       str.w   r4, [r8]
         :	int Find_Nearest_Waypoint_Pass_1(PT_T *ref,float *c, float *max_c){
    0.00 :	  10c28:       mov     r5, r0
    0.02 :	  10c2a:       ldr     r4, [r3, r2]
    0.00 :	  10c2c:       mov     r7, r1
         :	  int i=0;
    0.00 :	  10c2e:       movs    r6, #0
         :	while (strcmp(waypoints[i].Name, "END")) {
    0.02 :	  10c30:       ldrb    r3, [r4, #16]
    1.93 :	  10c32:       cmp     r3, #69 ; 0x45
    0.00 :	  10c34:       bne.n   10c50 <Find_Nearest_Waypoint_Pass_1+0x44>
    0.23 :	  10c36:       ldrb    r3, [r4, #17]
    0.11 :	  10c38:       cmp     r3, #78 ; 0x4e
    0.00 :	  10c3a:       bne.n   10c50 <Find_Nearest_Waypoint_Pass_1+0x44>
    0.07 :	  10c3c:       ldrb    r3, [r4, #18]
    0.01 :	  10c3e:       cmp     r3, #68 ; 0x44
    0.00 :	  10c40:       bne.n   10c50 <Find_Nearest_Waypoint_Pass_1+0x44>
    0.00 :	  10c42:       ldrb    r3, [r4, #19]
    0.01 :	  10c44:       cbnz    r3, 10c50 <Find_Nearest_Waypoint_Pass_1+0x44>
         :	      //*closest_i = i;
         :	    }
         :	    i++;
         :	  }
         :	  return i;
         :	}
    0.01 :	  10c46:       vpop    {d8}
    0.00 :	  10c4a:       mov     r0, r6
    0.01 :	  10c4c:       ldmia.w sp!, {r4, r5, r6, r7, r8, pc}
         :	Calc_Closeness_fastest():
         :	    cos_32(p2->Lon - p1->Lon);
    0.86 :	  10c50:       vldr    s0, [r4, #12]
         :	Find_Nearest_Waypoint_Pass_1():
         :	    i++;
    0.00 :	  10c54:       adds    r6, #1
    0.76 :	  10c56:       adds    r4, #48 ; 0x30
         :	Calc_Closeness_fastest():
         :	    cos_32(p2->Lon - p1->Lon);
    0.01 :	  10c58:       vldr    s13, [r5, #12]
         :	  return p1->SinLat * p2->SinLat +
    1.55 :	  10c5c:       vldr    s15, [r4, #-44] ; 0xffffffd4
         :	    p1->CosLat * p2->CosLat*
    0.81 :	  10c60:       vldr    s14, [r4, #-40] ; 0xffffffd8
         :	  return p1->SinLat * p2->SinLat +
    0.88 :	  10c64:       vldr    s16, [r5, #4]
         :	    p1->CosLat * p2->CosLat*
    0.75 :	  10c68:       vldr    s17, [r5, #8]
         :	    cos_32(p2->Lon - p1->Lon);
    0.00 :	  10c6c:       vsub.f32        s0, s0, s13
         :	    p1->CosLat * p2->CosLat*
    0.82 :	  10c70:       vmul.f32        s17, s17, s14
         :	  return p1->SinLat * p2->SinLat +
    0.00 :	  10c74:       vmul.f32        s16, s15, s16
         :	    cos_32(p2->Lon - p1->Lon);
    0.76 :	  10c78:       bl      10fc4 <cos_32>
         :	  return p1->SinLat * p2->SinLat +
   12.84 :	  10c7c:       vmov.f32        s15, s16
    0.83 :	  10c80:       vmla.f32        s15, s17, s0
         :	Find_Nearest_Waypoint_Pass_1():
         :	    c[i] = Calc_Closeness_fastest(ref, &(waypoints[i]) );
    0.77 :	  10c84:       vstmia  r7!, {s15}
         :	    if (c[i]>*max_c) {
    1.60 :	  10c88:       vldr    s14, [r8]
    0.00 :	  10c8c:       vcmpe.f32       s14, s15
    0.80 :	  10c90:       vmrs    APSR_nzcv, fpscr
         :	      *max_c = c[i];
   72.64 :	  10c94:       it      mi
    0.00 :	  10c96:       vstrmi  s15, [r8]
    0.79 :	  10c9a:       b.n     10c30 <Find_Nearest_Waypoint_Pass_1+0x24>
    0.00 :	  10c9c:       .word   0x0008c3dc
    0.00 :	  10ca0:       .word   0x00000050
 Percent |	Source code & Disassembly of sg for cycles:ppp (36057 samples)
------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00049fe4 <__mcount_internal>:
         :	__mcount_internal():
    1.31 :	  49fe4:       stmdb   sp!, {r4, r5, r6, r7, r8, lr}
    0.00 :	  49fe8:       sub     sp, #8
    4.89 :	  49fea:       movw    r3, #55688      ; 0xd988
    0.00 :	  49fee:       add     r7, sp, #0
    1.12 :	  49ff0:       movt    r3, #9
    0.00 :	  49ff4:       movs    r4, #1
    1.19 :	  49ff6:       movs    r2, #0
    0.00 :	  49ff8:       str     r2, [r7, #4]
    1.25 :	  49ffa:       ldrex   r2, [r3]
    2.39 :	  49ffe:       cmp     r2, #0
    0.01 :	  4a000:       bne.n   4a00e <__mcount_internal+0x2a>
    1.23 :	  4a002:       strex   r5, r4, [r3]
    2.39 :	  4a006:       cmp     r5, #0
    0.00 :	  4a008:       bne.n   49ffa <__mcount_internal+0x16>
    1.14 :	  4a00a:       dmb     ish
   47.94 :	  4a00e:       bne.n   4a082 <__mcount_internal+0x9e>
    1.33 :	  4a010:       ldr     r5, [r3, #32]
    1.05 :	  4a012:       ldr     r2, [r3, #40]   ; 0x28
    1.51 :	  4a014:       subs    r0, r0, r5
    1.00 :	  4a016:       cmp     r0, r2
    0.00 :	  4a018:       bhi.n   4a07e <__mcount_internal+0x9a>
    1.34 :	  4a01a:       ldr     r6, [r3, #48]   ; 0x30
    1.02 :	  4a01c:       ldr.w   ip, [r3, #12]
    2.28 :	  4a020:       lsr.w   r6, r0, r6
    1.36 :	  4a024:       ldr.w   r2, [ip, r6, lsl #2]
    2.48 :	  4a028:       cbz     r2, 4a08a <__mcount_internal+0xa6>
    0.00 :	  4a02a:       mov.w   r8, #12
    2.32 :	  4a02e:       ldr     r4, [r3, #20]
    0.94 :	  4a030:       mul.w   r2, r8, r2
    5.80 :	  4a034:       add.w   lr, r4, r2
    0.94 :	  4a038:       ldr     r2, [r4, r2]
    2.46 :	  4a03a:       cmp     r1, r2
    0.00 :	  4a03c:       bne.n   4a04a <__mcount_internal+0x66>
    1.29 :	  4a03e:       b.n     4a0dc <__mcount_internal+0xf8>
    0.00 :	  4a040:       adds    r5, r4, r0
    0.00 :	  4a042:       ldr     r0, [r4, r0]
    0.00 :	  4a044:       cmp     r1, r0
    0.00 :	  4a046:       beq.n   4a0c0 <__mcount_internal+0xdc>
    0.00 :	  4a048:       mov     lr, r5
    0.00 :	  4a04a:       ldr.w   r2, [lr, #8]
    0.00 :	  4a04e:       mul.w   r0, r8, r2
    0.00 :	  4a052:       cmp     r2, #0
    0.00 :	  4a054:       bne.n   4a040 <__mcount_internal+0x5c>
    0.00 :	  4a056:       ldr     r2, [r4, #8]
    0.00 :	  4a058:       ldr     r0, [r3, #28]
    0.00 :	  4a05a:       adds    r2, #1
    0.00 :	  4a05c:       str     r2, [r4, #8]
    0.00 :	  4a05e:       cmp     r2, r0
    0.00 :	  4a060:       bcs.n   4a09a <__mcount_internal+0xb6>
    0.00 :	  4a062:       movs    r0, #12
    0.00 :	  4a064:       mov.w   lr, #1
    0.00 :	  4a068:       mul.w   r0, r0, r2
    0.00 :	  4a06c:       adds    r5, r4, r0
    0.00 :	  4a06e:       str     r1, [r4, r0]
    0.00 :	  4a070:       str.w   lr, [r5, #4]
    0.00 :	  4a074:       ldr.w   r1, [ip, r6, lsl #2]
    0.00 :	  4a078:       str     r1, [r5, #8]
    0.00 :	  4a07a:       str.w   r2, [ip, r6, lsl #2]
    0.07 :	  4a07e:       movs    r2, #0
    1.35 :	  4a080:       str     r2, [r3, #0]
    0.00 :	  4a082:       adds    r7, #8
    2.35 :	  4a084:       mov     sp, r7
    1.04 :	  4a086:       ldmia.w sp!, {r4, r5, r6, r7, r8, pc}
    0.00 :	  4a08a:       ldr     r5, [r3, #20]
    0.00 :	  4a08c:       ldr.w   lr, [r3, #28]
    0.00 :	  4a090:       ldr     r0, [r5, #8]
    0.00 :	  4a092:       add     r0, r4
    0.00 :	  4a094:       str     r0, [r5, #8]
    0.00 :	  4a096:       cmp     r0, lr
    0.00 :	  4a098:       bcc.n   4a0a6 <__mcount_internal+0xc2>
    0.00 :	  4a09a:       movs    r2, #2
    0.00 :	  4a09c:       adds    r7, #8
    0.00 :	  4a09e:       str     r2, [r3, #0]
    0.00 :	  4a0a0:       mov     sp, r7
    0.00 :	  4a0a2:       ldmia.w sp!, {r4, r5, r6, r7, r8, pc}
    0.00 :	  4a0a6:       mov.w   lr, #12
    0.00 :	  4a0aa:       str.w   r0, [ip, r6, lsl #2]
    0.00 :	  4a0ae:       mul.w   r0, lr, r0
    0.00 :	  4a0b2:       adds    r6, r5, r0
    0.00 :	  4a0b4:       str     r1, [r5, r0]
    0.00 :	  4a0b6:       str     r2, [r6, #8]
    0.00 :	  4a0b8:       movs    r2, #0
    0.00 :	  4a0ba:       str     r4, [r6, #4]
    0.00 :	  4a0bc:       str     r2, [r3, #0]
    0.00 :	  4a0be:       b.n     4a082 <__mcount_internal+0x9e>
    0.00 :	  4a0c0:       ldr     r0, [r5, #8]
    0.00 :	  4a0c2:       ldr     r1, [r5, #4]
    0.00 :	  4a0c4:       adds    r1, #1
    0.00 :	  4a0c6:       str     r1, [r5, #4]
    0.00 :	  4a0c8:       str.w   r0, [lr, #8]
    0.00 :	  4a0cc:       ldr.w   r1, [ip, r6, lsl #2]
    0.00 :	  4a0d0:       str     r1, [r5, #8]
    0.00 :	  4a0d2:       str.w   r2, [ip, r6, lsl #2]
    0.00 :	  4a0d6:       movs    r2, #0
    0.00 :	  4a0d8:       str     r2, [r3, #0]
    0.00 :	  4a0da:       b.n     4a082 <__mcount_internal+0x9e>
    0.01 :	  4a0dc:       ldr.w   r2, [lr, #4]
    2.31 :	  4a0e0:       adds    r2, #1
    0.00 :	  4a0e2:       str.w   r2, [lr, #4]
    0.90 :	  4a0e6:       b.n     4a07e <__mcount_internal+0x9a>
 Percent |	Source code & Disassembly of sg for cycles:ppp (32512 samples)
------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00010ca4 <Find_Nearest_Waypoint_Pass_2>:
         :	Find_Nearest_Waypoint_Pass_2():
         :	    i++;
         :	  }
         :	  return i;
         :	}
         :	void Find_Nearest_Waypoint_Pass_2(PT_T *ref,float *c, float *max_c,int number_of_entries,float * distance, float * bearing, 
         :	         char  * * name){
    0.01 :	  10ca4:       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    0.03 :	  10ca8:       vpush   {d8-d10}
    0.00 :	  10cac:       sub     sp, #12
    0.03 :	  10cae:       push    {lr}
    0.00 :	  10cb0:       bl      31520 <__gnu_mcount_nc>
         :	        int i=0,closest_i2=0;
         :	        float d, b,max_c2=*max_c,closest_d=1E10;
    0.09 :	  10cb4:       vldr    s19, [r2]
         :	         char  * * name){
    0.00 :	  10cb8:       mov     r6, r2
         :	        struct timespec prestart,start, end1, end2;
         :	        unsigned to;
         :	        *distance = 0.0f;
    0.00 :	  10cba:       ldr     r2, [sp, #72]   ; 0x48
    0.01 :	  10cbc:       movs    r5, #0
         :	         char  * * name){
    0.00 :	  10cbe:       ldr.w   lr, [pc, #356]  ; 10e24 <Find_Nearest_Waypoint_Pass_2+0x180>
         :	        *bearing = 0;
         :	        *name = '\0';
         :	        float c2;
         :	        //while (strcmp(waypoints[i].Name, "END")) {
         :	        for (int i=0;i<number_of_entries;i++){
    0.00 :	  10cc2:       subs.w  sl, r3, #0
         :	        *name = '\0';
    0.01 :	  10cc6:       mov.w   r4, #0
         :	        *distance = 0.0f;
    0.00 :	  10cca:       str     r5, [r2, #0]
         :	         char  * * name){
    0.01 :	  10ccc:       add     lr, pc
         :	        *bearing = 0;
    0.00 :	  10cce:       ldr     r2, [sp, #76]   ; 0x4c
         :	         char  * * name){
    0.00 :	  10cd0:       mov     r7, r0
         :	        *bearing = 0;
    0.01 :	  10cd2:       str     r5, [r2, #0]
         :	        *name = '\0';
    0.01 :	  10cd4:       ldr     r2, [sp, #80]   ; 0x50
    0.02 :	  10cd6:       str     r4, [r2, #0]
         :	        for (int i=0;i<number_of_entries;i++){
    0.00 :	  10cd8:       ble.w   10e08 <Find_Nearest_Waypoint_Pass_2+0x164>
    0.01 :	  10cdc:       ldr     r0, [pc, #328]  ; (10e28 <Find_Nearest_Waypoint_Pass_2+0x184>)
    0.00 :	  10cde:       mov     r9, r1
         :	        if (c[i]>((*max_c)-Epsilon) && c[i]<((*max_c)+Epsilon))
    0.00 :	  10ce0:       vldr    s18, [pc, #304] ; 10e14 <Find_Nearest_Waypoint_Pass_2+0x170>
         :	        for (int i=0;i<number_of_entries;i++){
    0.00 :	  10ce4:       mov     r8, r4
    0.02 :	  10ce6:       ldr.w   fp, [lr, r0]
    0.02 :	  10cea:       mov     r5, fp
    0.00 :	  10cec:       b.n     10cf6 <Find_Nearest_Waypoint_Pass_2+0x52>
    0.74 :	  10cee:       adds    r4, #1
    0.90 :	  10cf0:       adds    r5, #48 ; 0x30
    0.00 :	  10cf2:       cmp     sl, r4
    0.80 :	  10cf4:       beq.n   10d72 <Find_Nearest_Waypoint_Pass_2+0xce>
         :	        if (c[i]>((*max_c)-Epsilon) && c[i]<((*max_c)+Epsilon))
    1.45 :	  10cf6:       vldr    s15, [r6]
    1.19 :	  10cfa:       vldmia  r9!, {s14}
    0.01 :	  10cfe:       vsub.f32        s13, s15, s18
    2.17 :	  10d02:       vcmpe.f32       s14, s13
    1.08 :	  10d06:       vmrs    APSR_nzcv, fpscr
   43.29 :	  10d0a:       ble.n   10cee <Find_Nearest_Waypoint_Pass_2+0x4a>
    2.47 :	  10d0c:       vadd.f32        s15, s15, s18
    0.29 :	  10d10:       vcmpe.f32       s14, s15
    0.20 :	  10d14:       vmrs    APSR_nzcv, fpscr
    5.52 :	  10d18:       bpl.n   10cee <Find_Nearest_Waypoint_Pass_2+0x4a>
         :	Calc_Closeness_accurate():
         :	    cos_73(p2->Lon - p1->Lon);
    0.00 :	  10d1a:       vldr    s0, [r5, #12]
    0.17 :	  10d1e:       adds    r5, #48 ; 0x30
    0.01 :	  10d20:       vldr    s15, [r7, #12]
         :	  return p1->SinLat * p2->SinLat +
    0.46 :	  10d24:       vldr    s13, [r5, #-44] ; 0xffffffd4
         :	    cos_73(p2->Lon - p1->Lon);
    0.00 :	  10d28:       vsub.f32        s0, s0, s15
         :	    p1->CosLat * p2->CosLat*
    0.19 :	  10d2c:       vldr    s14, [r5, #-40] ; 0xffffffd8
         :	  return p1->SinLat * p2->SinLat +
    0.16 :	  10d30:       vldr    s16, [r7, #4]
         :	    p1->CosLat * p2->CosLat*
    0.25 :	  10d34:       vldr    s20, [r7, #8]
         :	    cos_73(p2->Lon - p1->Lon);
    0.00 :	  10d38:       vcvt.f64.f32    d0, s0
         :	  return p1->SinLat * p2->SinLat +
    0.18 :	  10d3c:       vmul.f32        s16, s16, s13
         :	    p1->CosLat * p2->CosLat*
    0.00 :	  10d40:       vmul.f32        s20, s20, s14
         :	    cos_73(p2->Lon - p1->Lon);
    0.23 :	  10d44:       bl      11430 <cos_73>
         :	  return p1->SinLat * p2->SinLat +
    3.29 :	  10d48:       vcvt.f64.f32    d8, s16
         :	    p1->CosLat * p2->CosLat*
    0.00 :	  10d4c:       vcvt.f64.f32    d10, s20
         :	  return p1->SinLat * p2->SinLat +
    0.01 :	  10d50:       vmla.f64        d8, d10, d0
    0.00 :	  10d54:       vcvt.f32.f64    s16, d8
         :	Find_Nearest_Waypoint_Pass_2():
    0.41 :	  10d58:       vcmpe.f32       s19, s16
    0.00 :	  10d5c:       vmrs    APSR_nzcv, fpscr
   30.43 :	  10d60:       it      mi
    0.00 :	  10d62:       movmi   r8, r4
         :	        for (int i=0;i<number_of_entries;i++){
    0.14 :	  10d64:       add.w   r4, r4, #1
    0.00 :	  10d68:       it      mi
    0.22 :	  10d6a:       vmovmi.f32      s19, s16
    0.00 :	  10d6e:       cmp     sl, r4
    0.18 :	  10d70:       bne.n   10cf6 <Find_Nearest_Waypoint_Pass_2+0x52>
    0.10 :	  10d72:       movs    r3, #48 ; 0x30
    0.02 :	  10d74:       mul.w   r3, r3, r8
    0.03 :	  10d78:       add.w   r5, r3, #16
         :	                }
         :	                }
         :	                //i++;
         :	        }
         :	        // Finish calcuations for the closest point
         :	        d = acosf(max_c2)*6371; // finish distance calcuation
    0.00 :	  10d7c:       vmov.f32        s0, s19
         :	Calc_Bearing():
         :	  term1 = sinf(p1->Lon - p2->Lon)*p2->CosLat;
    0.01 :	  10d80:       movs    r4, #48 ; 0x30
         :	Find_Nearest_Waypoint_Pass_2():
         :	        d = acosf(max_c2)*6371; // finish distance calcuation
    0.00 :	  10d82:       bl      1a4b0 <__acosf_finite>
         :	Calc_Bearing():
         :	  term1 = sinf(p1->Lon - p2->Lon)*p2->CosLat;
    0.03 :	  10d86:       mla     r4, r4, r8, fp
    0.00 :	  10d8a:       vldr    s14, [r7, #12]
    0.02 :	  10d8e:       mov     r1, sp
    0.00 :	  10d90:       add     r0, sp, #4
         :	Find_Nearest_Waypoint_Pass_2():
         :	        b = Calc_Bearing(ref, &(waypoints[closest_i2]) );
         :	        *distance = d;
         :	        *bearing = b;
         :	        *name = (char * ) (waypoints[closest_i2].Name);
    0.01 :	  10d92:       add     r5, fp
         :	        d = acosf(max_c2)*6371; // finish distance calcuation
    0.00 :	  10d94:       vldr    s16, [pc, #128] ; 10e18 <Find_Nearest_Waypoint_Pass_2+0x174>
         :	Calc_Bearing():
         :	  term1 = sinf(p1->Lon - p2->Lon)*p2->CosLat;
    0.02 :	  10d98:       vldr    s15, [r4, #12]
         :	Find_Nearest_Waypoint_Pass_2():
         :	        d = acosf(max_c2)*6371; // finish distance calcuation
    0.00 :	  10d9c:       vmul.f32        s16, s0, s16
    0.01 :	  10da0:       vsub.f32        s0, s14, s15
    0.00 :	  10da4:       bl      1ab70 <__sincosf>
         :	Calc_Bearing():
         :	  term1 = sinf(p1->Lon - p2->Lon)*p2->CosLat;
    0.01 :	  10da8:       vldr    s15, [r4, #8]
    1.34 :	  10dac:       vldr    s1, [sp]
         :	    p1->SinLat*p2->CosLat*cosf(p1->Lon - p2->Lon);
    0.00 :	  10db0:       vldr    s12, [r7, #4]
    0.00 :	  10db4:       vmul.f32        s1, s1, s15
         :	  term2 = p1->CosLat*p2->SinLat -
    0.01 :	  10db8:       vldr    s13, [r7, #8]
    0.00 :	  10dbc:       vldr    s0, [sp, #4]
    0.02 :	  10dc0:       vldr    s14, [r4, #4]
         :	    p1->SinLat*p2->CosLat*cosf(p1->Lon - p2->Lon);
    0.00 :	  10dc4:       vmul.f32        s1, s1, s12
         :	  angle = atan2f(term1, term2) * (180/PI);
    0.00 :	  10dc8:       vmul.f32        s0, s0, s15
    0.00 :	  10dcc:       vnmls.f32       s1, s13, s14
    0.00 :	  10dd0:       bl      1a6f0 <__atan2f_finite>
    0.03 :	  10dd4:       vldr    s15, [pc, #68]  ; 10e1c <Find_Nearest_Waypoint_Pass_2+0x178>
         :	Find_Nearest_Waypoint_Pass_2():
         :	        *distance = d;
    0.00 :	  10dd8:       ldr     r3, [sp, #72]   ; 0x48
    0.02 :	  10dda:       vstr    s16, [r3]
         :	        *bearing = b;
    0.02 :	  10dde:       ldr     r3, [sp, #76]   ; 0x4c
         :	Calc_Bearing():
         :	  angle = atan2f(term1, term2) * (180/PI);
    0.00 :	  10de0:       vmul.f32        s0, s0, s15
         :	  if (angle < 0.0)
    0.00 :	  10de4:       vcmpe.f32       s0, #0.0
    0.01 :	  10de8:       vmrs    APSR_nzcv, fpscr
         :	    angle += 360;
    1.38 :	  10dec:       itt     mi
    0.00 :	  10dee:       vldrmi  s15, [pc, #48]  ; 10e20 <Find_Nearest_Waypoint_Pass_2+0x17c>
    0.01 :	  10df2:       vaddmi.f32      s0, s0, s15
         :	Find_Nearest_Waypoint_Pass_2():
         :	        *bearing = b;
    0.00 :	  10df6:       vstr    s0, [r3]
         :	        *name = (char * ) (waypoints[closest_i2].Name);
    0.00 :	  10dfa:       ldr     r3, [sp, #80]   ; 0x50
    0.02 :	  10dfc:       str     r5, [r3, #0]
         :	}
    0.00 :	  10dfe:       add     sp, #12
    0.17 :	  10e00:       vpop    {d8-d10}
    0.00 :	  10e04:       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    0.00 :	  10e08:       ldr     r3, [pc, #28]   ; (10e28 <Find_Nearest_Waypoint_Pass_2+0x184>)
         :	        int i=0,closest_i2=0;
    0.00 :	  10e0a:       mov     r8, r4
         :	        for (int i=0;i<number_of_entries;i++){
    0.00 :	  10e0c:       movs    r5, #16
    0.00 :	  10e0e:       ldr.w   fp, [lr, r3]
    0.00 :	  10e12:       b.n     10d7c <Find_Nearest_Waypoint_Pass_2+0xd8>
    0.00 :	  10e14:       .word   0x3c8201cd
    0.00 :	  10e18:       .word   0x45c71800
    0.00 :	  10e1c:       .word   0x42652ee0
    0.00 :	  10e20:       .word   0x43b40000
    0.00 :	  10e24:       .word   0x0008c330
    0.00 :	  10e28:       .word   0x00000050
 Percent |	Source code & Disassembly of sg for cycles:ppp (30979 samples)
------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00010fc4 <cos_32>:
         :	cos_32():
         :	//  This is the main cosine approximation "driver"
         :	// It reduces the input argument's range to [0, pi/2],
         :	// and then calls the approximator. 
         :	// See the notes for an explanation of the range reduction.
         :	//
         :	float cos_32(float x){
    1.09 :	  10fc4:       push    {r4, lr}
    2.26 :	  10fc6:       push    {lr}
    0.00 :	  10fc8:       bl      31520 <__gnu_mcount_nc>
    0.07 :	  10fcc:       vabs.f32        s15, s0
         :	        int quad;                                               // what quadrant are we in?
         :	        if(x<0)x=-x;                                    // cos(-x) = cos(x)
         :	        quad=(int) (x * two_over_pi);                   // Get quadrant # (0 to 3) we're in
    1.17 :	  10fd0:       vldr    d16, [pc, #172] ; 11080 <cos_32+0xbc>
    0.00 :	  10fd4:       vcvt.f64.f32    d0, s15
         :	        if (x>twopi)
    2.23 :	  10fd8:       vldr    s14, [pc, #180] ; 11090 <cos_32+0xcc>
         :	        quad=(int) (x * two_over_pi);                   // Get quadrant # (0 to 3) we're in
    0.00 :	  10fdc:       vmul.f64        d16, d0, d16
    1.10 :	  10fe0:       vcvt.s32.f64    s13, d16
         :	        if (x>twopi)
    0.00 :	  10fe4:       vcmpe.f32       s15, s14
         :	        quad=(int) (x * two_over_pi);                   // Get quadrant # (0 to 3) we're in
    1.09 :	  10fe8:       vmov    r4, s13
         :	        if (x>twopi)
    1.12 :	  10fec:       vmrs    APSR_nzcv, fpscr
   77.52 :	  10ff0:       ble.n   10ffe <cos_32+0x3a>
         :	        x=fmod(x, twopi);                               // Get rid of values > 2* pi
    0.00 :	  10ff2:       vldr    d1, [pc, #148]  ; 11088 <cos_32+0xc4>
    0.00 :	  10ff6:       bl      164e8 <__fmod_finite>
    0.00 :	  10ffa:       vcvt.f32.f64    s15, d0
         :	        
         :	        switch (quad){
    0.00 :	  10ffe:       cmp     r4, #3
    1.17 :	  11000:       bhi.n   11076 <cos_32+0xb2>
    1.16 :	  11002:       tbb     [pc, r4]
    0.00 :	  11006:       .short  0x242b
    0.00 :	  11008:       .short  0x0213
         :	        case 0: return  cos_32s(x);
         :	        case 1: return -cos_32s(DP_PI-x);
         :	        case 2: return -cos_32s(x-DP_PI);
         :	        case 3: return  cos_32s(twopi-x);
    0.12 :	  1100a:       vldr    s0, [pc, #132]  ; 11090 <cos_32+0xcc>
         :	cos_32s():
         :	return (c1 + x2*(c2 + c3 * x2));
    0.02 :	  1100e:       vldr    s13, [pc, #132] ; 11094 <cos_32+0xd0>
         :	cos_32():
         :	        case 3: return  cos_32s(twopi-x);
    0.00 :	  11012:       vsub.f32        s15, s0, s15
         :	cos_32s():
         :	return (c1 + x2*(c2 + c3 * x2));
    0.01 :	  11016:       vldr    s14, [pc, #128] ; 11098 <cos_32+0xd4>
    0.01 :	  1101a:       vldr    s0, [pc, #128]  ; 1109c <cos_32+0xd8>
         :	x2=(x) * (x);
    0.00 :	  1101e:       vmul.f32        s15, s15, s15
         :	return (c1 + x2*(c2 + c3 * x2));
    0.01 :	  11022:       vnmls.f32       s14, s15, s13
    0.00 :	  11026:       vmla.f32        s0, s14, s15
         :	cos_32():
         :	        case 3: return  cos_32s(twopi-x);
    0.00 :	  1102a:       pop     {r4, pc}
         :	        case 2: return -cos_32s(x-DP_PI);
    0.16 :	  1102c:       vldr    s0, [pc, #112]  ; 110a0 <cos_32+0xdc>
         :	cos_32s():
         :	return (c1 + x2*(c2 + c3 * x2));
    0.01 :	  11030:       vldr    s13, [pc, #96]  ; 11094 <cos_32+0xd0>
         :	cos_32():
         :	        case 2: return -cos_32s(x-DP_PI);
    0.00 :	  11034:       vsub.f32        s15, s15, s0
         :	cos_32s():
         :	return (c1 + x2*(c2 + c3 * x2));
    0.02 :	  11038:       vldr    s14, [pc, #92]  ; 11098 <cos_32+0xd4>
    0.02 :	  1103c:       vldr    s0, [pc, #92]   ; 1109c <cos_32+0xd8>
         :	x2=(x) * (x);
    0.00 :	  11040:       vmul.f32        s15, s15, s15
         :	return (c1 + x2*(c2 + c3 * x2));
    0.03 :	  11044:       vnmls.f32       s14, s15, s13
         :	cos_32():
         :	        case 2: return -cos_32s(x-DP_PI);
    0.00 :	  11048:       vnmla.f32       s0, s15, s14
    0.02 :	  1104c:       pop     {r4, pc}
         :	        case 1: return -cos_32s(DP_PI-x);
    0.14 :	  1104e:       vldr    s0, [pc, #80]   ; 110a0 <cos_32+0xdc>
         :	cos_32s():
         :	return (c1 + x2*(c2 + c3 * x2));
    0.00 :	  11052:       vldr    s13, [pc, #64]  ; 11094 <cos_32+0xd0>
         :	cos_32():
         :	        case 1: return -cos_32s(DP_PI-x);
    0.00 :	  11056:       vsub.f32        s15, s0, s15
    0.01 :	  1105a:       b.n     11038 <cos_32+0x74>
         :	cos_32s():
         :	x2=(x) * (x);
    0.45 :	  1105c:       vmul.f32        s15, s15, s15
         :	return (c1 + x2*(c2 + c3 * x2));
    4.50 :	  11060:       vldr    s13, [pc, #48]  ; 11094 <cos_32+0xd0>
    1.21 :	  11064:       vldr    s14, [pc, #48]  ; 11098 <cos_32+0xd4>
    1.09 :	  11068:       vldr    s0, [pc, #48]   ; 1109c <cos_32+0xd8>
    0.00 :	  1106c:       vnmls.f32       s14, s15, s13
    1.10 :	  11070:       vmla.f32        s0, s14, s15
         :	cos_32():
         :	        case 0: return  cos_32s(x);
    1.07 :	  11074:       pop     {r4, pc}
         :	        }
         :	  return 0.0;
    0.00 :	  11076:       vldr    s0, [pc, #44]   ; 110a4 <cos_32+0xe0>
         :	}
    0.00 :	  1107a:       pop     {r4, pc}
    0.00 :	  1107c:       nop.w
    0.00 :	  11080:       .word   0x60000000
    0.00 :	  11084:       .word   0x3fe45f30
    0.00 :	  11088:       .word   0x60000000
    0.00 :	  1108c:       .word   0x401921fb
    0.00 :	  11090:       .word   0x40c90fdb
    0.00 :	  11094:       .word   0x3d16b2df
    0.00 :	  11098:       .word   0x3efdbcc2
    0.00 :	  1109c:       .word   0x3f7fd8e1
    0.00 :	  110a0:       .word   0x40490fdb
    0.00 :	  110a4:       .word   0x00000000
 Percent |	Source code & Disassembly of sg for cycles:ppp (6977 samples)
-----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00031520 <__gnu_mcount_nc>:
         :	__gnu_mcount_nc():
   12.30 :	  31520:       push    {r0, r1, r2, r3, lr}
    0.00 :	  31522:       bic.w   r1, lr, #1
   18.17 :	  31526:       ldr     r0, [sp, #20]
    0.00 :	  31528:       bl      49fe4 <__mcount_internal>
   36.59 :	  3152c:       ldmia.w sp!, {r0, r1, r2, r3, ip, lr}
   32.94 :	  31530:       bx      ip
 Percent |	Source code & Disassembly of sg for cycles:ppp (5711 samples)
-----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00011430 <cos_73>:
         :	cos_73():
         :	//  This is the main cosine approximation "driver"
         :	// It reduces the input argument's range to [0, pi/2],
         :	// and then calls the approximator. 
         :	// See the notes for an explanation of the range reduction.
         :	//
         :	double cos_73(double x){
    1.09 :	  11430:       push    {r4, lr}
    1.98 :	  11432:       push    {lr}
    0.00 :	  11434:       bl      31520 <__gnu_mcount_nc>
    0.56 :	  11438:       vabs.f64        d0, d0
         :	        int quad;                                               // what quadrant are we in?
         :	        if(x<0)x=-x;                                    // cos(-x) = cos(x)
         :	        quad=(int)(x * two_over_pi);                    // Get quadrant # (0 to 3) we're in
    0.12 :	  1143c:       vldr    d16, [pc, #184] ; 114f8 <cos_73+0xc8>
         :	        if(x>twopi)
    2.31 :	  11440:       vldr    d1, [pc, #188]  ; 11500 <cos_73+0xd0>
         :	        quad=(int)(x * two_over_pi);                    // Get quadrant # (0 to 3) we're in
    0.00 :	  11444:       vmul.f64        d16, d0, d16
    2.21 :	  11448:       vcvt.s32.f64    s15, d16
         :	        if(x>twopi)
    0.00 :	  1144c:       vcmpe.f64       d0, d1
         :	        quad=(int)(x * two_over_pi);                    // Get quadrant # (0 to 3) we're in
    2.33 :	  11450:       vmov    r4, s15
         :	        if(x>twopi)
    0.07 :	  11454:       vmrs    APSR_nzcv, fpscr
   66.24 :	  11458:       ble.n   1145e <cos_73+0x2e>
         :	        x=fmod(x, twopi);                               // Get rid of values > 2* pi
    0.00 :	  1145a:       bl      164e8 <__fmod_finite>
         :	        switch (quad){
    0.00 :	  1145e:       cmp     r4, #3
    0.04 :	  11460:       bhi.n   114f2 <cos_73+0xc2>
    2.66 :	  11462:       tbb     [pc, r4]
    0.00 :	  11466:       .short  0x343b
    0.00 :	  11468:       .short  0x021b
         :	        case 0: return  cos_73s(x);
         :	        case 1: return -cos_73s(DP_PI-x);
         :	        case 2: return -cos_73s(x-DP_PI);
         :	        case 3: return  cos_73s(twopi-x);
    0.00 :	  1146a:       vldr    d16, [pc, #148] ; 11500 <cos_73+0xd0>
         :	cos_73s():
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  1146e:       vldr    d20, [pc, #152] ; 11508 <cos_73+0xd8>
         :	cos_73():
         :	        case 3: return  cos_73s(twopi-x);
    0.00 :	  11472:       vsub.f64        d16, d16, d0
         :	cos_73s():
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  11476:       vldr    d19, [pc, #152] ; 11510 <cos_73+0xe0>
    0.00 :	  1147a:       vldr    d18, [pc, #156] ; 11518 <cos_73+0xe8>
    0.00 :	  1147e:       vldr    d17, [pc, #160] ; 11520 <cos_73+0xf0>
         :	x2=x * x;
    0.00 :	  11482:       vmul.f64        d16, d16, d16
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    2.64 :	  11486:       vldr    d0, [pc, #160]  ; 11528 <cos_73+0xf8>
    0.00 :	  1148a:       vnmls.f64       d19, d16, d20
    2.70 :	  1148e:       vmla.f64        d18, d19, d16
    0.00 :	  11492:       vnmls.f64       d17, d18, d16
    0.02 :	  11496:       vmla.f64        d0, d17, d16
         :	cos_73():
         :	        case 3: return  cos_73s(twopi-x);
    2.29 :	  1149a:       pop     {r4, pc}
         :	        case 2: return -cos_73s(x-DP_PI);
    0.00 :	  1149c:       vldr    d16, [pc, #144] ; 11530 <cos_73+0x100>
         :	cos_73s():
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  114a0:       vldr    d20, [pc, #100] ; 11508 <cos_73+0xd8>
         :	cos_73():
         :	        case 2: return -cos_73s(x-DP_PI);
    0.00 :	  114a4:       vsub.f64        d16, d0, d16
         :	cos_73s():
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  114a8:       vldr    d19, [pc, #100] ; 11510 <cos_73+0xe0>
    0.00 :	  114ac:       vldr    d18, [pc, #104] ; 11518 <cos_73+0xe8>
    0.00 :	  114b0:       vldr    d17, [pc, #108] ; 11520 <cos_73+0xf0>
         :	x2=x * x;
    0.00 :	  114b4:       vmul.f64        d16, d16, d16
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  114b8:       vldr    d0, [pc, #108]  ; 11528 <cos_73+0xf8>
    0.00 :	  114bc:       vnmls.f64       d19, d16, d20
    0.00 :	  114c0:       vmla.f64        d18, d19, d16
    0.00 :	  114c4:       vnmls.f64       d17, d18, d16
         :	cos_73():
         :	        case 2: return -cos_73s(x-DP_PI);
    0.00 :	  114c8:       vnmla.f64       d0, d16, d17
    0.00 :	  114cc:       pop     {r4, pc}
         :	        case 1: return -cos_73s(DP_PI-x);
    0.00 :	  114ce:       vldr    d16, [pc, #96]  ; 11530 <cos_73+0x100>
         :	cos_73s():
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    0.00 :	  114d2:       vldr    d20, [pc, #52]  ; 11508 <cos_73+0xd8>
         :	cos_73():
         :	        case 1: return -cos_73s(DP_PI-x);
    0.00 :	  114d6:       vsub.f64        d16, d16, d0
    0.00 :	  114da:       b.n     114a8 <cos_73+0x78>
         :	cos_73s():
         :	x2=x * x;
    0.02 :	  114dc:       vmul.f64        d16, d0, d0
         :	return (c1 + x2*(c2 + x2*(c3 + x2*(c4 + c5*x2))));
    5.38 :	  114e0:       vldr    d20, [pc, #36]  ; 11508 <cos_73+0xd8>
    2.52 :	  114e4:       vldr    d19, [pc, #40]  ; 11510 <cos_73+0xe0>
    2.38 :	  114e8:       vldr    d18, [pc, #44]  ; 11518 <cos_73+0xe8>
    2.45 :	  114ec:       vldr    d17, [pc, #48]  ; 11520 <cos_73+0xf0>
    0.00 :	  114f0:       b.n     11486 <cos_73+0x56>
         :	cos_73():
         :	        }
         :	  return 0.0;
    0.00 :	  114f2:       vldr    d0, [pc, #68]   ; 11538 <cos_73+0x108>
         :	}
    0.00 :	  114f6:       pop     {r4, pc}
    0.00 :	  114f8:       .word   0x60000000
    0.00 :	  114fc:       .word   0x3fe45f30
    0.00 :	  11500:       .word   0x60000000
    0.00 :	  11504:       .word   0x401921fb
    0.00 :	  11508:       .word   0xa0000000
    0.00 :	  1150c:       .word   0x3ef85c8f
    0.00 :	  11510:       .word   0x20000000
    0.00 :	  11514:       .word   0x3f56b2aa
    0.00 :	  11518:       .word   0xe0000000
    0.00 :	  1151c:       .word   0x3fa554ed
    0.00 :	  11520:       .word   0xa0000000
    0.00 :	  11524:       .word   0x3fdfffff
    0.00 :	  11528:       .word   0xe0000000
    0.00 :	  1152c:       .word   0x3fefffff
    0.00 :	  11530:       .word   0x60000000
    0.00 :	  11534:       .word   0x400921fb
         :	        ...
 Percent |	Source code & Disassembly of sg for cycles:ppp (765 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001ab70 <__sincosf>:
         :	sincosf():
    1.05 :	  1ab70:       vmov    r3, s0
   90.07 :	  1ab74:       movw    r2, #4056       ; 0xfd8
    0.26 :	  1ab78:       push    {r4, r5, r6, lr}
    0.00 :	  1ab7a:       movt    r2, #16201      ; 0x3f49
    0.52 :	  1ab7e:       vpush   {d8}
    0.00 :	  1ab82:       mov     r5, r0
    3.01 :	  1ab84:       mov     r4, r1
    0.00 :	  1ab86:       vmov.f32        s16, s0
    0.26 :	  1ab8a:       sub     sp, #8
    0.00 :	  1ab8c:       bic.w   r3, r3, #2147483648     ; 0x80000000
    0.39 :	  1ab90:       cmp     r3, r2
    0.00 :	  1ab92:       ble.n   1abee <__sincosf+0x7e>
    0.00 :	  1ab94:       cmp.w   r3, #2139095040 ; 0x7f800000
    0.00 :	  1ab98:       blt.n   1abb0 <__sincosf+0x40>
    0.00 :	  1ab9a:       vsub.f32        s16, s0, s0
    0.00 :	  1ab9e:       vstr    s16, [r1]
    0.00 :	  1aba2:       vstr    s16, [r0]
    0.00 :	  1aba6:       beq.n   1ac14 <__sincosf+0xa4>
    0.00 :	  1aba8:       add     sp, #8
    0.00 :	  1abaa:       vpop    {d8}
    0.00 :	  1abae:       pop     {r4, r5, r6, pc}
    0.00 :	  1abb0:       mov     r0, sp
    0.00 :	  1abb2:       bl      1deb4 <__ieee754_rem_pio2f>
    0.00 :	  1abb6:       and.w   r6, r0, #3
    0.00 :	  1abba:       cmp     r6, #1
    0.00 :	  1abbc:       beq.n   1ac2a <__sincosf+0xba>
    0.00 :	  1abbe:       cmp     r6, #2
    0.00 :	  1abc0:       beq.n   1ac76 <__sincosf+0x106>
    0.00 :	  1abc2:       cmp     r6, #0
    0.00 :	  1abc4:       beq.n   1ac52 <__sincosf+0xe2>
    0.00 :	  1abc6:       vldr    s1, [sp, #4]
    0.00 :	  1abca:       vldr    s0, [sp]
    0.00 :	  1abce:       bl      1e124 <__kernel_cosf>
    0.00 :	  1abd2:       movs    r0, #1
    0.00 :	  1abd4:       vldr    s1, [sp, #4]
    0.00 :	  1abd8:       vneg.f32        s15, s0
    0.00 :	  1abdc:       vldr    s0, [sp]
    0.00 :	  1abe0:       vstr    s15, [r5]
    0.00 :	  1abe4:       bl      1e884 <__kernel_sinf>
    0.00 :	  1abe8:       vstr    s0, [r4]
    0.00 :	  1abec:       b.n     1aba8 <__sincosf+0x38>
    0.26 :	  1abee:       movs    r0, #0
    0.00 :	  1abf0:       vldr    s1, [pc, #176]  ; 1aca4 <__sincosf+0x134>
    0.13 :	  1abf4:       bl      1e884 <__kernel_sinf>
    0.39 :	  1abf8:       vldr    s1, [pc, #168]  ; 1aca4 <__sincosf+0x134>
    0.00 :	  1abfc:       vstr    s0, [r5]
    0.13 :	  1ac00:       vmov.f32        s0, s16
    0.39 :	  1ac04:       bl      1e124 <__kernel_cosf>
    0.52 :	  1ac08:       vstr    s0, [r4]
    0.00 :	  1ac0c:       add     sp, #8
    2.09 :	  1ac0e:       vpop    {d8}
    0.52 :	  1ac12:       pop     {r4, r5, r6, pc}
    0.00 :	  1ac14:       ldr     r3, [pc, #144]  ; (1aca8 <__sincosf+0x138>)
    0.00 :	  1ac16:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  1ac1a:       movs    r1, #33 ; 0x21
    0.00 :	  1ac1c:       add     r3, pc
    0.00 :	  1ac1e:       ldr     r3, [r3, #0]
    0.00 :	  1ac20:       str     r1, [r2, r3]
    0.00 :	  1ac22:       add     sp, #8
    0.00 :	  1ac24:       vpop    {d8}
    0.00 :	  1ac28:       pop     {r4, r5, r6, pc}
    0.00 :	  1ac2a:       vldr    s1, [sp, #4]
    0.00 :	  1ac2e:       vldr    s0, [sp]
    0.00 :	  1ac32:       bl      1e124 <__kernel_cosf>
    0.00 :	  1ac36:       mov     r0, r6
    0.00 :	  1ac38:       vldr    s1, [sp, #4]
    0.00 :	  1ac3c:       vstr    s0, [r5]
    0.00 :	  1ac40:       vldr    s0, [sp]
    0.00 :	  1ac44:       bl      1e884 <__kernel_sinf>
    0.00 :	  1ac48:       vneg.f32        s0, s0
    0.00 :	  1ac4c:       vstr    s0, [r4]
    0.00 :	  1ac50:       b.n     1aba8 <__sincosf+0x38>
    0.00 :	  1ac52:       movs    r0, #1
    0.00 :	  1ac54:       vldr    s1, [sp, #4]
    0.00 :	  1ac58:       vldr    s0, [sp]
    0.00 :	  1ac5c:       bl      1e884 <__kernel_sinf>
    0.00 :	  1ac60:       vldr    s1, [sp, #4]
    0.00 :	  1ac64:       vstr    s0, [r5]
    0.00 :	  1ac68:       vldr    s0, [sp]
    0.00 :	  1ac6c:       bl      1e124 <__kernel_cosf>
    0.00 :	  1ac70:       vstr    s0, [r4]
    0.00 :	  1ac74:       b.n     1aba8 <__sincosf+0x38>
    0.00 :	  1ac76:       movs    r0, #1
    0.00 :	  1ac78:       vldr    s1, [sp, #4]
    0.00 :	  1ac7c:       vldr    s0, [sp]
    0.00 :	  1ac80:       bl      1e884 <__kernel_sinf>
    0.00 :	  1ac84:       vldr    s1, [sp, #4]
    0.00 :	  1ac88:       vneg.f32        s15, s0
    0.00 :	  1ac8c:       vldr    s0, [sp]
    0.00 :	  1ac90:       vstr    s15, [r5]
    0.00 :	  1ac94:       bl      1e124 <__kernel_cosf>
    0.00 :	  1ac98:       vneg.f32        s0, s0
    0.00 :	  1ac9c:       vstr    s0, [r4]
    0.00 :	  1aca0:       b.n     1aba8 <__sincosf+0x38>
    0.00 :	  1aca2:       nop
    0.00 :	  1aca4:       .word   0x00000000
    0.00 :	  1aca8:       .word   0x00082400
 Percent |	Source code & Disassembly of sg for cycles:ppp (670 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001a8ac <__ieee754_sqrtf>:
         :	__sqrtf_finite():
    0.90 :	  1a8ac:       push    {r4, r5, r6}
    0.00 :	  1a8ae:       sub     sp, #12
    0.30 :	  1a8b0:       vstr    s0, [sp, #4]
    0.00 :	  1a8b4:       ldr     r3, [sp, #4]
   15.22 :	  1a8b6:       and.w   r2, r3, #2139095040     ; 0x7f800000
    0.30 :	  1a8ba:       cmp.w   r2, #2139095040 ; 0x7f800000
    0.00 :	  1a8be:       beq.n   1a978 <__ieee754_sqrtf+0xcc>
    1.19 :	  1a8c0:       cmp     r3, #0
    0.00 :	  1a8c2:       ble.n   1a95c <__ieee754_sqrtf+0xb0>
    0.60 :	  1a8c4:       asrs    r2, r3, #23
    0.00 :	  1a8c6:       beq.n   1a944 <__ieee754_sqrtf+0x98>
    0.45 :	  1a8c8:       subs    r2, #127        ; 0x7f
    0.60 :	  1a8ca:       and.w   r1, r2, #1
    0.75 :	  1a8ce:       asrs    r2, r2, #1
    0.45 :	  1a8d0:       lsls    r6, r2, #23
    0.00 :	  1a8d2:       ubfx    r3, r3, #0, #23
    0.30 :	  1a8d6:       orr.w   r3, r3, #8388608        ; 0x800000
    0.00 :	  1a8da:       cbz     r1, 1a8de <__ieee754_sqrtf+0x32>
    0.90 :	  1a8dc:       lsls    r3, r3, #1
    2.69 :	  1a8de:       movs    r5, #0
    0.15 :	  1a8e0:       lsls    r3, r3, #1
    0.00 :	  1a8e2:       mov     r4, r5
    0.30 :	  1a8e4:       movs    r1, #25
    0.30 :	  1a8e6:       mov.w   r2, #16777216   ; 0x1000000
    0.45 :	  1a8ea:       adds    r0, r4, r2
    6.27 :	  1a8ec:       cmp     r0, r3
    0.00 :	  1a8ee:       ittt    le
    7.91 :	  1a8f0:       suble   r3, r3, r0
    0.00 :	  1a8f2:       addle   r4, r0, r2
    6.57 :	  1a8f4:       addle   r5, r5, r2
    0.00 :	  1a8f6:       subs    r1, #1
   10.00 :	  1a8f8:       mov.w   r3, r3, lsl #1
    0.00 :	  1a8fc:       mov.w   r2, r2, lsr #1
    8.96 :	  1a900:       bne.n   1a8ea <__ieee754_sqrtf+0x3e>
    2.99 :	  1a902:       cbz     r3, 1a930 <__ieee754_sqrtf+0x84>
    0.00 :	  1a904:       vmov.f32        s15, #112       ; 0x3f800000  1.0
    0.75 :	  1a908:       vldr    s14, [pc, #132] ; 1a990 <__ieee754_sqrtf+0xe4>
    0.00 :	  1a90c:       vsub.f32        s13, s15, s14
    5.07 :	  1a910:       vcmpe.f32       s13, s15
    0.00 :	  1a914:       vmrs    APSR_nzcv, fpscr
   12.09 :	  1a918:       blt.n   1a930 <__ieee754_sqrtf+0x84>
    0.00 :	  1a91a:       vadd.f32        s14, s15, s14
    0.30 :	  1a91e:       vcmpe.f32       s14, s15
    0.30 :	  1a922:       vmrs    APSR_nzcv, fpscr
   10.00 :	  1a926:       itet    le
    0.00 :	  1a928:       addle   r5, #1
    0.60 :	  1a92a:       addgt   r5, #2
    0.15 :	  1a92c:       bicle.w r5, r5, #1
    0.45 :	  1a930:       add.w   r5, r6, r5, asr #1
    0.15 :	  1a934:       add.w   r5, r5, #1056964608     ; 0x3f000000
    0.45 :	  1a938:       vmov    s0, r5
    0.00 :	  1a93c:       add     sp, #12
    0.60 :	  1a93e:       pop     {r4, r5, r6}
    0.60 :	  1a940:       bx      lr
    0.00 :	  1a942:       mov     r2, r1
    0.00 :	  1a944:       lsls    r3, r3, #1
    0.00 :	  1a946:       adds    r1, r2, #1
    0.00 :	  1a948:       lsls    r0, r3, #8
    0.00 :	  1a94a:       bpl.n   1a942 <__ieee754_sqrtf+0x96>
    0.00 :	  1a94c:       mvn.w   r6, #126        ; 0x7e
    0.00 :	  1a950:       subs    r2, r6, r2
    0.00 :	  1a952:       and.w   r1, r2, #1
    0.00 :	  1a956:       asrs    r2, r2, #1
    0.00 :	  1a958:       lsls    r6, r2, #23
    0.00 :	  1a95a:       b.n     1a8d2 <__ieee754_sqrtf+0x26>
    0.00 :	  1a95c:       bics.w  r3, r3, #2147483648     ; 0x80000000
    0.00 :	  1a960:       it      eq
    0.00 :	  1a962:       ldreq   r5, [sp, #4]
    0.00 :	  1a964:       beq.n   1a938 <__ieee754_sqrtf+0x8c>
    0.00 :	  1a966:       vldr    s15, [sp, #4]
    0.00 :	  1a96a:       vsub.f32        s15, s15, s15
    0.00 :	  1a96e:       vdiv.f32        s14, s15, s15
    0.00 :	  1a972:       vmov    r5, s14
    0.00 :	  1a976:       b.n     1a938 <__ieee754_sqrtf+0x8c>
    0.00 :	  1a978:       vmov.f32        s15, s0
    0.00 :	  1a97c:       vmla.f32        s15, s0, s0
    0.00 :	  1a980:       vmov    r5, s15
    0.00 :	  1a984:       vmov    s0, r5
    0.00 :	  1a988:       add     sp, #12
    0.00 :	  1a98a:       pop     {r4, r5, r6}
    0.00 :	  1a98c:       bx      lr
    0.00 :	  1a98e:       nop
    0.00 :	  1a990:       .word   0x0da24260
 Percent |	Source code & Disassembly of sg for cycles:ppp (539 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001a6f0 <__atan2f_finite>:
         :	__ieee754_atan2f():
    0.93 :	  1a6f0:       push    {r4, lr}
    0.00 :	  1a6f2:       sub     sp, #8
    1.11 :	  1a6f4:       vstr    s0, [sp]
    0.37 :	  1a6f8:       ldr     r1, [sp, #0]
   35.81 :	  1a6fa:       vstr    s1, [sp, #4]
    0.74 :	  1a6fe:       bic.w   r3, r1, #2147483648     ; 0x80000000
    0.00 :	  1a702:       ldr     r2, [sp, #4]
    8.16 :	  1a704:       bic.w   r0, r2, #2147483648     ; 0x80000000
    0.00 :	  1a708:       cmp.w   r3, #2139095040 ; 0x7f800000
    0.19 :	  1a70c:       it      le
    0.00 :	  1a70e:       cmple.w r0, #2139095040 ; 0x7f800000
    0.93 :	  1a712:       bgt.n   1a7a6 <__atan2f_finite+0xb6>
    0.00 :	  1a714:       cmp.w   r2, #1065353216 ; 0x3f800000
    0.56 :	  1a718:       beq.n   1a7c2 <__atan2f_finite+0xd2>
    0.00 :	  1a71a:       asrs    r4, r2, #30
    0.37 :	  1a71c:       and.w   r4, r4, #2
    0.00 :	  1a720:       orr.w   r4, r4, r1, lsr #31
    0.74 :	  1a724:       cbnz    r3, 1a73c <__atan2f_finite+0x4c>
    0.00 :	  1a726:       cmp     r4, #2
    0.00 :	  1a728:       beq.n   1a7ae <__atan2f_finite+0xbe>
    0.00 :	  1a72a:       cmp     r4, #3
    0.00 :	  1a72c:       bne.n   1a7bc <__atan2f_finite+0xcc>
    0.00 :	  1a72e:       vldr    s0, [pc, #336]  ; 1a880 <__atan2f_finite+0x190>
    0.00 :	  1a732:       vldr    s15, [pc, #336] ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a736:       vsub.f32        s0, s0, s15
    0.00 :	  1a73a:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.56 :	  1a73c:       cbz     r0, 1a784 <__atan2f_finite+0x94>
    0.00 :	  1a73e:       cmp.w   r0, #2139095040 ; 0x7f800000
    0.93 :	  1a742:       beq.n   1a7da <__atan2f_finite+0xea>
    0.00 :	  1a744:       cmp.w   r3, #2139095040 ; 0x7f800000
    0.37 :	  1a748:       beq.n   1a784 <__atan2f_finite+0x94>
    0.00 :	  1a74a:       subs    r3, r3, r0
    0.74 :	  1a74c:       asrs    r3, r3, #23
    0.00 :	  1a74e:       cmp     r3, #60 ; 0x3c
    0.56 :	  1a750:       bgt.n   1a7cc <__atan2f_finite+0xdc>
    0.00 :	  1a752:       cmn.w   r3, #60 ; 0x3c
    0.19 :	  1a756:       ite     ge
    0.00 :	  1a758:       movge   r3, #0
    0.37 :	  1a75a:       movlt   r3, #1
    0.37 :	  1a75c:       ands.w  r3, r3, r2, lsr #31
    0.00 :	  1a760:       it      ne
    0.19 :	  1a762:       vldrne  s0, [pc, #292]  ; 1a888 <__atan2f_finite+0x198>
    0.00 :	  1a766:       beq.n   1a81a <__atan2f_finite+0x12a>
    1.11 :	  1a768:       cmp     r4, #1
    0.19 :	  1a76a:       beq.n   1a80c <__atan2f_finite+0x11c>
    1.67 :	  1a76c:       cmp     r4, #2
    0.00 :	  1a76e:       beq.n   1a7fa <__atan2f_finite+0x10a>
    1.30 :	  1a770:       cbz     r4, 1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a772:       vldr    s14, [pc, #280] ; 1a88c <__atan2f_finite+0x19c>
    0.56 :	  1a776:       vldr    s15, [pc, #280] ; 1a890 <__atan2f_finite+0x1a0>
    0.00 :	  1a77a:       vadd.f32        s0, s0, s14
    0.37 :	  1a77e:       vsub.f32        s0, s0, s15
    0.00 :	  1a782:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a784:       cmp     r1, #0
    0.00 :	  1a786:       ittee   lt
    0.00 :	  1a788:       vldrlt  s0, [pc, #264]  ; 1a894 <__atan2f_finite+0x1a4>
    0.00 :	  1a78c:       vldrlt  s15, [pc, #244] ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a790:       vldrge  s0, [pc, #260]  ; 1a898 <__atan2f_finite+0x1a8>
    0.00 :	  1a794:       vldrge  s15, [pc, #236] ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a798:       ite     lt
    0.00 :	  1a79a:       vsublt.f32      s0, s0, s15
    0.00 :	  1a79e:       vaddge.f32      s0, s0, s15
    1.86 :	  1a7a2:       add     sp, #8
    0.37 :	  1a7a4:       pop     {r4, pc}
    0.00 :	  1a7a6:       vadd.f32        s0, s1, s0
    0.00 :	  1a7aa:       add     sp, #8
    0.00 :	  1a7ac:       pop     {r4, pc}
    0.00 :	  1a7ae:       vldr    s0, [pc, #224]  ; 1a890 <__atan2f_finite+0x1a0>
    0.00 :	  1a7b2:       vldr    s15, [pc, #208] ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a7b6:       vadd.f32        s0, s0, s15
    0.00 :	  1a7ba:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a7bc:       vldr    s0, [sp]
    0.00 :	  1a7c0:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a7c2:       add     sp, #8
    0.00 :	  1a7c4:       ldmia.w sp!, {r4, lr}
    0.00 :	  1a7c8:       b.w     1a994 <__atanf>
    0.00 :	  1a7cc:       vldr    s0, [pc, #200]  ; 1a898 <__atan2f_finite+0x1a8>
    0.00 :	  1a7d0:       vldr    s15, [pc, #200] ; 1a89c <__atan2f_finite+0x1ac>
    0.00 :	  1a7d4:       vsub.f32        s0, s0, s15
    0.00 :	  1a7d8:       b.n     1a768 <__atan2f_finite+0x78>
    0.00 :	  1a7da:       cmp.w   r3, #2139095040 ; 0x7f800000
    0.00 :	  1a7de:       beq.n   1a834 <__atan2f_finite+0x144>
    0.00 :	  1a7e0:       cmp     r4, #2
    0.00 :	  1a7e2:       beq.n   1a7ae <__atan2f_finite+0xbe>
    0.00 :	  1a7e4:       cmp     r4, #3
    0.00 :	  1a7e6:       beq.n   1a72e <__atan2f_finite+0x3e>
    0.00 :	  1a7e8:       vldr    s0, [pc, #180]  ; 1a8a0 <__atan2f_finite+0x1b0>
    0.00 :	  1a7ec:       cmp     r4, #1
    0.00 :	  1a7ee:       vldr    s15, [pc, #152] ; 1a888 <__atan2f_finite+0x198>
    0.00 :	  1a7f2:       it      ne
    0.00 :	  1a7f4:       vmovne.f32      s0, s15
    0.00 :	  1a7f8:       b.n     1a7a2 <__atan2f_finite+0xb2>
    1.48 :	  1a7fa:       vldr    s14, [pc, #144] ; 1a88c <__atan2f_finite+0x19c>
    0.37 :	  1a7fe:       vldr    s15, [pc, #144] ; 1a890 <__atan2f_finite+0x1a0>
    0.00 :	  1a802:       vadd.f32        s0, s0, s14
    0.37 :	  1a806:       vsub.f32        s0, s15, s0
    0.00 :	  1a80a:       b.n     1a7a2 <__atan2f_finite+0xb2>
    1.67 :	  1a80c:       vmov    r3, s0
   30.43 :	  1a810:       add.w   r3, r3, #2147483648     ; 0x80000000
    0.19 :	  1a814:       vmov    s0, r3
    0.00 :	  1a818:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.37 :	  1a81a:       ldr     r3, [sp, #4]
    0.74 :	  1a81c:       ldr     r2, [sp, #0]
    1.48 :	  1a81e:       vmov    s14, r3
    0.19 :	  1a822:       vmov    s15, r2
    0.00 :	  1a826:       vdiv.f32        s0, s15, s14
    0.37 :	  1a82a:       vabs.f32        s0, s0
    0.00 :	  1a82e:       bl      1a994 <__atanf>
    0.74 :	  1a832:       b.n     1a768 <__atan2f_finite+0x78>
    0.00 :	  1a834:       cmp     r4, #2
    0.00 :	  1a836:       beq.n   1a85c <__atan2f_finite+0x16c>
    0.00 :	  1a838:       cmp     r4, #3
    0.00 :	  1a83a:       beq.n   1a86e <__atan2f_finite+0x17e>
    0.00 :	  1a83c:       cmp     r4, #1
    0.00 :	  1a83e:       ittee   ne
    0.00 :	  1a840:       vldrne  s0, [pc, #96]   ; 1a8a4 <__atan2f_finite+0x1b4>
    0.00 :	  1a844:       vldrne  s15, [pc, #60]  ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a848:       vldreq  s0, [pc, #92]   ; 1a8a8 <__atan2f_finite+0x1b8>
    0.00 :	  1a84c:       vldreq  s15, [pc, #52]  ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a850:       ite     ne
    0.00 :	  1a852:       vaddne.f32      s0, s0, s15
    0.00 :	  1a856:       vsubeq.f32      s0, s0, s15
    0.00 :	  1a85a:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a85c:       vmov.f32        s15, #8 ; 0x40400000  3.0
    0.00 :	  1a860:       vldr    s14, [pc, #64]  ; 1a8a4 <__atan2f_finite+0x1b4>
    0.00 :	  1a864:       vldr    s0, [pc, #28]   ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a868:       vmla.f32        s0, s14, s15
    0.00 :	  1a86c:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a86e:       vmov.f32        s15, #136       ; 0xc0400000 -3.0
    0.00 :	  1a872:       vldr    s14, [pc, #48]  ; 1a8a4 <__atan2f_finite+0x1b4>
    0.00 :	  1a876:       vldr    s0, [pc, #12]   ; 1a884 <__atan2f_finite+0x194>
    0.00 :	  1a87a:       vnmls.f32       s0, s14, s15
    0.00 :	  1a87e:       b.n     1a7a2 <__atan2f_finite+0xb2>
    0.00 :	  1a880:       .word   0xc0490fdb
    0.00 :	  1a884:       .word   0x0da24260
    0.00 :	  1a888:       .word   0x00000000
    0.00 :	  1a88c:       .word   0x33bbbd2e
    0.00 :	  1a890:       .word   0x40490fdb
    0.00 :	  1a894:       .word   0xbfc90fdb
    0.00 :	  1a898:       .word   0x3fc90fdb
    0.00 :	  1a89c:       .word   0x333bbd2e
    0.00 :	  1a8a0:       .word   0x80000000
    0.00 :	  1a8a4:       .word   0x3f490fdb
    0.00 :	  1a8a8:       .word   0xbf490fdb
 Percent |	Source code & Disassembly of sg for cycles:ppp (438 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001e124 <__kernel_cosf>:
         :	__kernel_cosf():
    0.91 :	  1e124:       vmov    r3, s0
   89.04 :	  1e128:       bic.w   r3, r3, #2147483648     ; 0x80000000
    0.23 :	  1e12c:       cmp.w   r3, #838860800  ; 0x32000000
    0.00 :	  1e130:       bge.n   1e18c <__kernel_cosf+0x68>
    0.00 :	  1e132:       vcvt.s32.f32    s15, s0
    0.00 :	  1e136:       vmov    r3, s15
    0.00 :	  1e13a:       cmp     r3, #0
    0.00 :	  1e13c:       beq.n   1e20e <__kernel_cosf+0xea>
    0.00 :	  1e13e:       vmul.f32        s14, s0, s0
    0.00 :	  1e142:       vldr    s15, [pc, #208] ; 1e214 <__kernel_cosf+0xf0>
    0.00 :	  1e146:       vldr    s10, [pc, #208] ; 1e218 <__kernel_cosf+0xf4>
    0.00 :	  1e14a:       vldr    s11, [pc, #208] ; 1e21c <__kernel_cosf+0xf8>
    0.00 :	  1e14e:       vldr    s12, [pc, #208] ; 1e220 <__kernel_cosf+0xfc>
    0.00 :	  1e152:       vmla.f32        s10, s14, s15
    0.00 :	  1e156:       vldr    s15, [pc, #204] ; 1e224 <__kernel_cosf+0x100>
    0.00 :	  1e15a:       vldr    s13, [pc, #204] ; 1e228 <__kernel_cosf+0x104>
    0.00 :	  1e15e:       vnmls.f32       s11, s10, s14
    0.00 :	  1e162:       vmla.f32        s12, s11, s14
    0.00 :	  1e166:       vnmls.f32       s15, s12, s14
    0.00 :	  1e16a:       vmla.f32        s13, s15, s14
    0.00 :	  1e16e:       vmul.f32        s13, s13, s14
    1.37 :	  1e172:       vmul.f32        s0, s0, s1
    0.46 :	  1e176:       vnmls.f32       s0, s14, s13
    0.00 :	  1e17a:       vmov.f32        s15, #96        ; 0x3f000000  0.5
    0.23 :	  1e17e:       vnmls.f32       s0, s14, s15
    0.00 :	  1e182:       vmov.f32        s15, #112       ; 0x3f800000  1.0
    1.60 :	  1e186:       vsub.f32        s0, s15, s0
    0.00 :	  1e18a:       bx      lr
    1.37 :	  1e18c:       vmul.f32        s14, s0, s0
    0.00 :	  1e190:       movw    r2, #39321      ; 0x9999
    0.46 :	  1e194:       vldr    s15, [pc, #124] ; 1e214 <__kernel_cosf+0xf0>
    0.00 :	  1e198:       movt    r2, #16025      ; 0x3e99
    0.68 :	  1e19c:       cmp     r3, r2
    0.23 :	  1e19e:       vldr    s10, [pc, #120] ; 1e218 <__kernel_cosf+0xf4>
    0.46 :	  1e1a2:       vldr    s11, [pc, #120] ; 1e21c <__kernel_cosf+0xf8>
    0.68 :	  1e1a6:       vldr    s12, [pc, #120] ; 1e220 <__kernel_cosf+0xfc>
    0.00 :	  1e1aa:       vmla.f32        s10, s14, s15
    0.23 :	  1e1ae:       vldr    s15, [pc, #116] ; 1e224 <__kernel_cosf+0x100>
    0.00 :	  1e1b2:       vldr    s13, [pc, #116] ; 1e228 <__kernel_cosf+0x104>
    0.00 :	  1e1b6:       vnmls.f32       s11, s10, s14
    0.68 :	  1e1ba:       vmla.f32        s12, s11, s14
    0.23 :	  1e1be:       vnmls.f32       s15, s12, s14
    0.68 :	  1e1c2:       vmla.f32        s13, s15, s14
    0.00 :	  1e1c6:       vmul.f32        s13, s13, s14
    0.46 :	  1e1ca:       ble.n   1e172 <__kernel_cosf+0x4e>
    0.00 :	  1e1cc:       movs    r2, #0
    0.00 :	  1e1ce:       movt    r2, #16200      ; 0x3f48
    0.00 :	  1e1d2:       cmp     r3, r2
    0.00 :	  1e1d4:       itt     le
    0.00 :	  1e1d6:       addle.w r3, r3, #4278190080     ; 0xff000000
    0.00 :	  1e1da:       vmovle  s15, r3
    0.00 :	  1e1de:       vmul.f32        s0, s0, s1
    0.00 :	  1e1e2:       ite     le
    0.00 :	  1e1e4:       vmovle.f32      s12, #112       ; 0x3f800000  1.0
    0.00 :	  1e1e8:       vmovgt.f32      s15, #82        ; 0x3e900000  0.2812500
    0.00 :	  1e1ec:       vmov.f32        s11, #96        ; 0x3f000000  0.5
    0.00 :	  1e1f0:       it      le
    0.00 :	  1e1f2:       vsuble.f32      s12, s12, s15
    0.00 :	  1e1f6:       vnmls.f32       s0, s14, s13
    0.00 :	  1e1fa:       vnmls.f32       s15, s14, s11
    0.00 :	  1e1fe:       it      gt
    0.00 :	  1e200:       vmovgt.f32      s12, #103       ; 0x3f380000  0.7187500
    0.00 :	  1e204:       vsub.f32        s0, s15, s0
    0.00 :	  1e208:       vsub.f32        s0, s12, s0
    0.00 :	  1e20c:       bx      lr
    0.00 :	  1e20e:       vmov.f32        s0, #112        ; 0x3f800000  1.0
    0.00 :	  1e212:       bx      lr
    0.00 :	  1e214:       .word   0xad47d74e
    0.00 :	  1e218:       .word   0x310f74f6
    0.00 :	  1e21c:       .word   0x3493f27c
    0.00 :	  1e220:       .word   0x37d00d01
    0.00 :	  1e224:       .word   0x3ab60b61
    0.00 :	  1e228:       .word   0x3d2aaaab
 Percent |	Source code & Disassembly of sg for cycles:ppp (397 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001a994 <__atanf>:
         :	atanf():
    1.01 :	  1a994:       vmov    r2, s0
   32.49 :	  1a998:       bic.w   r3, r2, #2147483648     ; 0x80000000
    0.25 :	  1a99c:       cmp.w   r3, #1275068416 ; 0x4c000000
    0.00 :	  1a9a0:       blt.n   1a9ca <__atanf+0x36>
    0.00 :	  1a9a2:       cmp.w   r3, #2139095040 ; 0x7f800000
    0.00 :	  1a9a6:       bgt.w   1aaae <__atanf+0x11a>
    0.00 :	  1a9aa:       cmp     r2, #0
    0.00 :	  1a9ac:       ittet   gt
    0.00 :	  1a9ae:       vldrgt  s0, [pc, #384]  ; 1ab30 <__atanf+0x19c>
    0.00 :	  1a9b2:       vldrgt  s15, [pc, #384] ; 1ab34 <__atanf+0x1a0>
    0.00 :	  1a9b6:       vldrle  s15, [pc, #380] ; 1ab34 <__atanf+0x1a0>
    0.00 :	  1a9ba:       vaddgt.f32      s0, s0, s15
    0.00 :	  1a9be:       itt     le
    0.00 :	  1a9c0:       vldrle  s0, [pc, #372]  ; 1ab38 <__atanf+0x1a4>
    0.00 :	  1a9c4:       vsuble.f32      s0, s0, s15
    0.00 :	  1a9c8:       bx      lr
    0.50 :	  1a9ca:       movw    r1, #65535      ; 0xffff
    0.25 :	  1a9ce:       movt    r1, #16095      ; 0x3edf
    0.76 :	  1a9d2:       cmp     r3, r1
    0.00 :	  1a9d4:       sub     sp, #8
    0.76 :	  1a9d6:       bgt.n   1aa76 <__atanf+0xe2>
    1.51 :	  1a9d8:       cmp.w   r3, #822083584  ; 0x31000000
    0.00 :	  1a9dc:       blt.n   1aab4 <__atanf+0x120>
    0.00 :	  1a9de:       mov.w   r1, #4294967295
    1.51 :	  1a9e2:       vmul.f32        s12, s0, s0
    0.00 :	  1a9e6:       adds    r3, r1, #1
    0.50 :	  1a9e8:       vldr    s3, [pc, #336]  ; 1ab3c <__atanf+0x1a8>
    0.76 :	  1a9ec:       vldr    s5, [pc, #336]  ; 1ab40 <__atanf+0x1ac>
    0.00 :	  1a9f0:       vldr    s7, [pc, #336]  ; 1ab44 <__atanf+0x1b0>
    0.25 :	  1a9f4:       vldr    s4, [pc, #336]  ; 1ab48 <__atanf+0x1b4>
    0.00 :	  1a9f8:       vmul.f32        s15, s12, s12
    0.50 :	  1a9fc:       vldr    s6, [pc, #332]  ; 1ab4c <__atanf+0x1b8>
    1.51 :	  1aa00:       vldr    s9, [pc, #332]  ; 1ab50 <__atanf+0x1bc>
    0.50 :	  1aa04:       vldr    s8, [pc, #332]  ; 1ab54 <__atanf+0x1c0>
    0.50 :	  1aa08:       vldr    s11, [pc, #332] ; 1ab58 <__atanf+0x1c4>
    0.00 :	  1aa0c:       vmla.f32        s5, s15, s3
    0.25 :	  1aa10:       vldr    s10, [pc, #328] ; 1ab5c <__atanf+0x1c8>
    0.50 :	  1aa14:       vldr    s14, [pc, #328] ; 1ab60 <__atanf+0x1cc>
    0.25 :	  1aa18:       vldr    s13, [pc, #328] ; 1ab64 <__atanf+0x1d0>
    0.00 :	  1aa1c:       vnmls.f32       s6, s15, s4
    0.25 :	  1aa20:       vmla.f32        s7, s5, s15
    0.00 :	  1aa24:       vnmls.f32       s8, s6, s15
    3.02 :	  1aa28:       vmla.f32        s9, s7, s15
    0.00 :	  1aa2c:       vnmls.f32       s10, s8, s15
   19.14 :	  1aa30:       vmla.f32        s11, s9, s15
    0.00 :	  1aa34:       vnmls.f32       s13, s10, s15
    3.78 :	  1aa38:       vmla.f32        s14, s11, s15
    0.00 :	  1aa3c:       vmul.f32        s15, s13, s15
    3.78 :	  1aa40:       vmul.f32        s14, s14, s12
    0.00 :	  1aa44:       vadd.f32        s14, s14, s15
    0.50 :	  1aa48:       beq.n   1ab14 <__atanf+0x180>
    0.00 :	  1aa4a:       movw    r3, #21384      ; 0x5388
    0.76 :	  1aa4e:       movt    r3, #7
    0.25 :	  1aa52:       add.w   r3, r3, r1, lsl #2
    0.00 :	  1aa56:       cmp     r2, #0
    5.79 :	  1aa58:       vldr    s15, [r3, #16]
    2.77 :	  1aa5c:       vldr    s13, [r3]
    0.00 :	  1aa60:       vnmls.f32       s15, s14, s0
    2.02 :	  1aa64:       vsub.f32        s0, s15, s0
    0.00 :	  1aa68:       vsub.f32        s0, s13, s0
    0.50 :	  1aa6c:       it      lt
    0.00 :	  1aa6e:       vneglt.f32      s0, s0
    0.50 :	  1aa72:       add     sp, #8
    0.00 :	  1aa74:       bx      lr
    1.01 :	  1aa76:       movw    r1, #65535      ; 0xffff
    0.50 :	  1aa7a:       movt    r1, #16279      ; 0x3f97
    0.25 :	  1aa7e:       cmp     r3, r1
    0.25 :	  1aa80:       vabs.f32        s15, s0
    0.76 :	  1aa84:       movw    r1, #65535      ; 0xffff
    0.00 :	  1aa88:       bgt.n   1aae6 <__atanf+0x152>
    2.02 :	  1aa8a:       movt    r1, #16175      ; 0x3f2f
    0.00 :	  1aa8e:       cmp     r3, r1
    0.00 :	  1aa90:       bgt.n   1ab1a <__atanf+0x186>
    0.25 :	  1aa92:       vadd.f32        s14, s15, s15
    0.00 :	  1aa96:       movs    r1, #0
    0.00 :	  1aa98:       vmov.f32        s12, #112       ; 0x3f800000  1.0
    0.00 :	  1aa9c:       vmov.f32        s13, #0 ; 0x40000000  2.0
    0.00 :	  1aaa0:       vsub.f32        s14, s14, s12
    0.00 :	  1aaa4:       vadd.f32        s15, s15, s13
    0.00 :	  1aaa8:       vdiv.f32        s0, s14, s15
    0.00 :	  1aaac:       b.n     1a9e2 <__atanf+0x4e>
    0.00 :	  1aaae:       vadd.f32        s0, s0, s0
    0.00 :	  1aab2:       bx      lr
    0.00 :	  1aab4:       vabs.f32        s15, s0
    0.00 :	  1aab8:       vldr    s14, [pc, #172] ; 1ab68 <__atanf+0x1d4>
    0.00 :	  1aabc:       vcmpe.f32       s15, s14
    0.00 :	  1aac0:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1aac4:       bpl.n   1aace <__atanf+0x13a>
    0.00 :	  1aac6:       vmul.f32        s15, s0, s0
    0.00 :	  1aaca:       vstr    s15, [sp, #4]
    0.00 :	  1aace:       vldr    s15, [pc, #156] ; 1ab6c <__atanf+0x1d8>
    0.00 :	  1aad2:       vmov.f32        s14, #112       ; 0x3f800000  1.0
    0.00 :	  1aad6:       vadd.f32        s15, s0, s15
    0.00 :	  1aada:       vcmpe.f32       s15, s14
    0.00 :	  1aade:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1aae2:       bgt.n   1aa72 <__atanf+0xde>
    0.00 :	  1aae4:       b.n     1a9de <__atanf+0x4a>
    2.27 :	  1aae6:       movt    r1, #16411      ; 0x401b
    0.00 :	  1aaea:       cmp     r3, r1
    0.00 :	  1aaec:       ittet   le
    0.25 :	  1aaee:       vmovle.f32      s13, #120       ; 0x3fc00000  1.5
    0.00 :	  1aaf2:       movle   r1, #2
    0.25 :	  1aaf4:       movgt   r1, #3
    0.00 :	  1aaf6:       vmovle.f32      s14, #112       ; 0x3f800000  1.0
    0.76 :	  1aafa:       itete   le
    0.00 :	  1aafc:       vmlale.f32      s14, s15, s13
    0.50 :	  1ab00:       vmovgt.f32      s14, #240       ; 0xbf800000 -1.0
    0.00 :	  1ab04:       vsuble.f32      s15, s15, s13
    0.00 :	  1ab08:       vdivgt.f32      s0, s14, s15
    0.00 :	  1ab0c:       it      le
    0.00 :	  1ab0e:       vdivle.f32      s0, s15, s14
    0.00 :	  1ab12:       b.n     1a9e2 <__atanf+0x4e>
    1.76 :	  1ab14:       vmls.f32        s0, s14, s0
    0.25 :	  1ab18:       b.n     1aa72 <__atanf+0xde>
    1.26 :	  1ab1a:       vmov.f32        s14, #112       ; 0x3f800000  1.0
    0.00 :	  1ab1e:       movs    r1, #1
    0.00 :	  1ab20:       vsub.f32        s13, s15, s14
    0.00 :	  1ab24:       vadd.f32        s15, s15, s14
    0.00 :	  1ab28:       vdiv.f32        s0, s13, s15
    0.00 :	  1ab2c:       b.n     1a9e2 <__atanf+0x4e>
    0.00 :	  1ab2e:       nop
    0.00 :	  1ab30:       .word   0x3fc90fda
    0.00 :	  1ab34:       .word   0x33a22168
    0.00 :	  1ab38:       .word   0xbfc90fda
    0.00 :	  1ab3c:       .word   0x3c8569d7
    0.00 :	  1ab40:       .word   0x3d4bda59
    0.00 :	  1ab44:       .word   0x3d886b35
    0.00 :	  1ab48:       .word   0xbd15a221
    0.00 :	  1ab4c:       .word   0x3d6ef16b
    0.00 :	  1ab50:       .word   0x3dba2e6e
    0.00 :	  1ab54:       .word   0x3d9d8795
    0.00 :	  1ab58:       .word   0x3e124925
    0.00 :	  1ab5c:       .word   0x3de38e38
    0.00 :	  1ab60:       .word   0x3eaaaaab
    0.00 :	  1ab64:       .word   0x3e4ccccd
    0.00 :	  1ab68:       .word   0x00800000
    0.00 :	  1ab6c:       .word   0x7149f2ca
 Percent |	Source code & Disassembly of sg for cycles:ppp (314 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001a4b0 <__acosf_finite>:
         :	__acosf_finite():
    0.64 :	  1a4b0:       vmov    r2, s0
   13.38 :	  1a4b4:       push    {r3, lr}
    1.27 :	  1a4b6:       vpush   {d8-d9}
    0.00 :	  1a4ba:       bic.w   r3, r2, #2147483648     ; 0x80000000
    1.59 :	  1a4be:       cmp.w   r3, #1065353216 ; 0x3f800000
    0.00 :	  1a4c2:       beq.n   1a4f2 <__acosf_finite+0x42>
    0.64 :	  1a4c4:       bgt.n   1a4e4 <__acosf_finite+0x34>
    0.00 :	  1a4c6:       cmp.w   r3, #1056964608 ; 0x3f000000
    0.32 :	  1a4ca:       bge.n   1a50a <__acosf_finite+0x5a>
    0.00 :	  1a4cc:       cmp.w   r3, #847249408  ; 0x32800000
    0.00 :	  1a4d0:       bgt.n   1a5b2 <__acosf_finite+0x102>
    0.00 :	  1a4d2:       vpop    {d8-d9}
    0.00 :	  1a4d6:       vldr    s0, [pc, #476]  ; 1a6b4 <__acosf_finite+0x204>
    0.00 :	  1a4da:       vldr    s15, [pc, #476] ; 1a6b8 <__acosf_finite+0x208>
    0.00 :	  1a4de:       vadd.f32        s0, s0, s15
    0.00 :	  1a4e2:       pop     {r3, pc}
    0.00 :	  1a4e4:       vsub.f32        s15, s0, s0
    0.00 :	  1a4e8:       vdiv.f32        s0, s15, s15
    0.00 :	  1a4ec:       vpop    {d8-d9}
    0.00 :	  1a4f0:       pop     {r3, pc}
    0.00 :	  1a4f2:       cmp     r2, #0
    0.00 :	  1a4f4:       it      gt
    0.00 :	  1a4f6:       vldrgt  s0, [pc, #452]  ; 1a6bc <__acosf_finite+0x20c>
    0.00 :	  1a4fa:       bgt.n   1a4ec <__acosf_finite+0x3c>
    0.00 :	  1a4fc:       vldr    s0, [pc, #448]  ; 1a6c0 <__acosf_finite+0x210>
    0.00 :	  1a500:       vldr    s15, [pc, #448] ; 1a6c4 <__acosf_finite+0x214>
    0.00 :	  1a504:       vadd.f32        s0, s0, s15
    0.00 :	  1a508:       b.n     1a4ec <__acosf_finite+0x3c>
    0.96 :	  1a50a:       cmp     r2, #0
    0.96 :	  1a50c:       blt.w   1a62c <__acosf_finite+0x17c>
    0.00 :	  1a510:       vmov.f32        s17, #112       ; 0x3f800000  1.0
    0.00 :	  1a514:       vmov.f32        s16, #96        ; 0x3f000000  0.5
    0.00 :	  1a518:       vsub.f32        s0, s17, s0
    0.64 :	  1a51c:       vmul.f32        s16, s0, s16
    0.00 :	  1a520:       vmov.f32        s0, s16
    1.27 :	  1a524:       bl      1a8ac <__ieee754_sqrtf>
    0.96 :	  1a528:       vldr    s15, [pc, #412] ; 1a6c8 <__acosf_finite+0x218>
    0.64 :	  1a52c:       vldr    s6, [pc, #412]  ; 1a6cc <__acosf_finite+0x21c>
    0.64 :	  1a530:       vldr    s7, [pc, #412]  ; 1a6d0 <__acosf_finite+0x220>
    0.00 :	  1a534:       vmla.f32        s6, s16, s15
    0.64 :	  1a538:       vldr    s5, [pc, #408]  ; 1a6d4 <__acosf_finite+0x224>
    1.27 :	  1a53c:       vldr    s8, [pc, #408]  ; 1a6d8 <__acosf_finite+0x228>
    0.96 :	  1a540:       vldr    s9, [pc, #408]  ; 1a6dc <__acosf_finite+0x22c>
    0.64 :	  1a544:       vldr    s10, [pc, #408] ; 1a6e0 <__acosf_finite+0x230>
    0.32 :	  1a548:       vldr    s11, [pc, #408] ; 1a6e4 <__acosf_finite+0x234>
    0.64 :	  1a54c:       vldr    s12, [pc, #408] ; 1a6e8 <__acosf_finite+0x238>
    0.32 :	  1a550:       vldr    s14, [pc, #408] ; 1a6ec <__acosf_finite+0x23c>
    0.00 :	  1a554:       vnmls.f32       s7, s6, s16
    1.91 :	  1a558:       vmov    r3, s0
    0.00 :	  1a55c:       vnmls.f32       s8, s16, s5
   58.28 :	  1a560:       bic.w   r3, r3, #4080   ; 0xff0
    0.64 :	  1a564:       bic.w   r3, r3, #15
    0.96 :	  1a568:       vmov    s15, r3
    0.00 :	  1a56c:       vmla.f32        s9, s7, s16
    0.32 :	  1a570:       vmla.f32        s10, s8, s16
    0.00 :	  1a574:       vnmls.f32       s11, s9, s16
    0.96 :	  1a578:       vnmls.f32       s12, s10, s16
    0.00 :	  1a57c:       vmla.f32        s14, s11, s16
    1.27 :	  1a580:       vmov.f32        s11, s16
    0.00 :	  1a584:       vmla.f32        s17, s12, s16
    0.32 :	  1a588:       vmls.f32        s11, s15, s15
    0.00 :	  1a58c:       vmul.f32        s16, s14, s16
    0.00 :	  1a590:       vadd.f32        s12, s15, s0
    0.00 :	  1a594:       vmov.f32        s13, s0
    0.96 :	  1a598:       vdiv.f32        s14, s16, s17
    0.32 :	  1a59c:       vpop    {d8-d9}
    0.00 :	  1a5a0:       vdiv.f32        s0, s11, s12
    3.82 :	  1a5a4:       vmla.f32        s0, s14, s13
    0.00 :	  1a5a8:       vadd.f32        s0, s0, s15
    1.27 :	  1a5ac:       vadd.f32        s0, s0, s0
    0.32 :	  1a5b0:       pop     {r3, pc}
    0.00 :	  1a5b2:       vmul.f32        s14, s0, s0
    0.00 :	  1a5b6:       vldr    s13, [pc, #272] ; 1a6c8 <__acosf_finite+0x218>
    0.00 :	  1a5ba:       vpop    {d8-d9}
    0.00 :	  1a5be:       vldr    s15, [pc, #268] ; 1a6cc <__acosf_finite+0x21c>
    0.00 :	  1a5c2:       vldr    s6, [pc, #268]  ; 1a6d0 <__acosf_finite+0x220>
    0.00 :	  1a5c6:       vldr    s5, [pc, #268]  ; 1a6d4 <__acosf_finite+0x224>
    0.00 :	  1a5ca:       vmla.f32        s15, s14, s13
    0.00 :	  1a5ce:       vldr    s7, [pc, #264]  ; 1a6d8 <__acosf_finite+0x228>
    0.00 :	  1a5d2:       vldr    s8, [pc, #264]  ; 1a6dc <__acosf_finite+0x22c>
    0.00 :	  1a5d6:       vldr    s9, [pc, #264]  ; 1a6e0 <__acosf_finite+0x230>
    0.00 :	  1a5da:       vldr    s11, [pc, #264] ; 1a6e4 <__acosf_finite+0x234>
    0.00 :	  1a5de:       vldr    s10, [pc, #264] ; 1a6e8 <__acosf_finite+0x238>
    0.00 :	  1a5e2:       vldr    s13, [pc, #264] ; 1a6ec <__acosf_finite+0x23c>
    0.00 :	  1a5e6:       vldr    s12, [pc, #208] ; 1a6b8 <__acosf_finite+0x208>
    0.00 :	  1a5ea:       vnmls.f32       s6, s15, s14
    0.00 :	  1a5ee:       vldr    s15, [pc, #196] ; 1a6b4 <__acosf_finite+0x204>
    0.00 :	  1a5f2:       vnmls.f32       s7, s14, s5
    0.00 :	  1a5f6:       vmla.f32        s8, s6, s14
    0.00 :	  1a5fa:       vmla.f32        s9, s7, s14
    0.00 :	  1a5fe:       vnmls.f32       s11, s8, s14
    0.00 :	  1a602:       vnmls.f32       s10, s9, s14
    0.00 :	  1a606:       vmla.f32        s13, s11, s14
    0.00 :	  1a60a:       vmov.f32        s11, #112       ; 0x3f800000  1.0
    0.00 :	  1a60e:       vmla.f32        s11, s10, s14
    0.00 :	  1a612:       vmul.f32        s14, s13, s14
    0.00 :	  1a616:       vdiv.f32        s13, s14, s11
    0.00 :	  1a61a:       vmov.f32        s14, s12
    0.00 :	  1a61e:       vmls.f32        s14, s13, s0
    0.00 :	  1a622:       vsub.f32        s0, s0, s14
    0.00 :	  1a626:       vsub.f32        s0, s15, s0
    0.00 :	  1a62a:       pop     {r3, pc}
    0.00 :	  1a62c:       vmov.f32        s18, #112       ; 0x3f800000  1.0
    0.00 :	  1a630:       vldr    s11, [pc, #148] ; 1a6c8 <__acosf_finite+0x218>
    0.00 :	  1a634:       vldr    s12, [pc, #148] ; 1a6cc <__acosf_finite+0x21c>
    0.00 :	  1a638:       vldr    s13, [pc, #148] ; 1a6d0 <__acosf_finite+0x220>
    0.00 :	  1a63c:       vadd.f32        s0, s0, s18
    0.00 :	  1a640:       vldr    s14, [pc, #152] ; 1a6dc <__acosf_finite+0x22c>
    0.00 :	  1a644:       vldr    s15, [pc, #156] ; 1a6e4 <__acosf_finite+0x234>
    0.00 :	  1a648:       vldr    s17, [pc, #160] ; 1a6ec <__acosf_finite+0x23c>
    0.00 :	  1a64c:       vmov.f32        s16, #96        ; 0x3f000000  0.5
    0.00 :	  1a650:       vmul.f32        s16, s0, s16
    0.00 :	  1a654:       vmla.f32        s12, s16, s11
    0.00 :	  1a658:       vnmls.f32       s13, s12, s16
    0.00 :	  1a65c:       vmla.f32        s14, s13, s16
    0.00 :	  1a660:       vnmls.f32       s15, s14, s16
    0.00 :	  1a664:       vmov.f32        s0, s16
    0.00 :	  1a668:       vmla.f32        s17, s15, s16
    0.00 :	  1a66c:       bl      1a8ac <__ieee754_sqrtf>
    0.00 :	  1a670:       vldr    s15, [pc, #96]  ; 1a6d4 <__acosf_finite+0x224>
    0.00 :	  1a674:       vldr    s11, [pc, #96]  ; 1a6d8 <__acosf_finite+0x228>
    0.00 :	  1a678:       vldr    s12, [pc, #100] ; 1a6e0 <__acosf_finite+0x230>
    0.00 :	  1a67c:       vldr    s13, [pc, #104] ; 1a6e8 <__acosf_finite+0x238>
    0.00 :	  1a680:       vldr    s14, [pc, #52]  ; 1a6b8 <__acosf_finite+0x208>
    0.00 :	  1a684:       vnmls.f32       s11, s16, s15
    0.00 :	  1a688:       vldr    s15, [pc, #52]  ; 1a6c0 <__acosf_finite+0x210>
    0.00 :	  1a68c:       vmla.f32        s12, s11, s16
    0.00 :	  1a690:       vnmls.f32       s13, s12, s16
    0.00 :	  1a694:       vmla.f32        s18, s13, s16
    0.00 :	  1a698:       vmul.f32        s17, s17, s16
    0.00 :	  1a69c:       vdiv.f32        s13, s17, s18
    0.00 :	  1a6a0:       vnmls.f32       s14, s13, s0
    0.00 :	  1a6a4:       vadd.f32        s0, s14, s0
    0.00 :	  1a6a8:       vadd.f32        s0, s0, s0
    0.00 :	  1a6ac:       vsub.f32        s0, s15, s0
    0.00 :	  1a6b0:       b.n     1a4ec <__acosf_finite+0x3c>
    0.00 :	  1a6b2:       nop
    0.00 :	  1a6b4:       .word   0x3fc90fda
    0.00 :	  1a6b8:       .word   0x33a22168
    0.00 :	  1a6bc:       .word   0x00000000
    0.00 :	  1a6c0:       .word   0x40490fda
    0.00 :	  1a6c4:       .word   0x34222168
    0.00 :	  1a6c8:       .word   0x3811ef08
    0.00 :	  1a6cc:       .word   0x3a4f7f04
    0.00 :	  1a6d0:       .word   0x3d241146
    0.00 :	  1a6d4:       .word   0x3d9dc62e
    0.00 :	  1a6d8:       .word   0x3f303361
    0.00 :	  1a6dc:       .word   0x3e4e0aa8
    0.00 :	  1a6e0:       .word   0x4001572d
    0.00 :	  1a6e4:       .word   0x3ea6b090
    0.00 :	  1a6e8:       .word   0x4019d139
    0.00 :	  1a6ec:       .word   0x3e2aaaab
 Percent |	Source code & Disassembly of sg for cycles:ppp (182 samples)
----------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000102f0 <main>:
         :	main():
         :	final_points exp_output[100];
         :	int length=0;
         :	/*----------------------------------------------------------------------------
         :	  MAIN function
         :	 *----------------------------------------------------------------------------*/
         :	int main (void) {
    0.00 :	  102f0:       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    0.00 :	  102f4:       vpush   {d8-d9}
    0.00 :	  102f8:       sub.w   sp, sp, #524    ; 0x20c
    0.00 :	  102fc:       push    {lr}
    0.00 :	  102fe:       bl      31520 <__gnu_mcount_nc>
         :	        char * name;
         :	        struct timespec start, end;
         :	        uint64_t diff, total=0, min=1234567890;
         :	        int n=0;
         :	        float c[100];
         :	        float max_c=0;
    0.00 :	  10302:       add     r3, sp, #88     ; 0x58
    0.00 :	  10304:       movs    r1, #0
    0.00 :	  10306:       str     r3, [sp, #36]   ; 0x24
    0.00 :	  10308:       mov     r0, r3
         :	int main (void) {
    0.00 :	  1030a:       ldr     r3, [pc, #640]  ; (1058c <main+0x29c>)
         :	        float max_c=0;
    0.00 :	  1030c:       str     r1, [r0, #0]
    0.00 :	  1030e:       add     r1, sp, #104    ; 0x68
    0.00 :	  10310:       str     r1, [sp, #56]   ; 0x38
         :	int main (void) {
    0.00 :	  10312:       add     r3, pc
         :	        uint64_t diff, total=0, min=1234567890;
    0.00 :	  10314:       add     r1, pc, #620    ; (adr r1, 10584 <main+0x294>)
    0.00 :	  10316:       ldrd    r0, r1, [r1]
    0.00 :	  1031a:       vmov.i32        d8, #0  ; 0x00000000
    0.00 :	  1031e:       ldr     r2, [pc, #624]  ; (10590 <main+0x2a0>)
         :	int main (void) {
    0.00 :	  10320:       mov     r4, r3
    0.00 :	  10322:       str     r3, [sp, #84]   ; 0x54
         :	          test_case_Pass(c,&max_c);
         :	          //test_case_Pass_2(c,&max_c,&closest_i);
         :	          #endif
         :	          clock_gettime(CLOCK_THREAD_CPUTIME_ID, &end);
         :	  
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    0.00 :	  10324:       mov.w   r3, #51712      ; 0xca00
         :	        uint64_t diff, total=0, min=1234567890;
    0.00 :	  10328:       strd    r0, r1, [sp, #48]       ; 0x30
    0.00 :	  1032c:       add     r1, sp, #112    ; 0x70
    0.00 :	  1032e:       str     r1, [sp, #72]   ; 0x48
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    0.00 :	  10330:       mov     r5, r3
         :	test_case_Pass():
         :	                //printf("Closest waypoint is %s for %s. %f km away at bearing %f degrees\n",
         :	             //  name,capitals[i].Name,dist, bearing);
         :	                //printf("Average %10.3f us\n", total/(1000.0*N_TESTS));
         :	                //printf("Minimum %10.3f us\n",  min/1000.0);
         :	                i++;
         :	                length=i;
    0.00 :	  10332:       ldr     r1, [pc, #608]  ; (10594 <main+0x2a4>)
         :	main():
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    0.00 :	  10334:       movt    r5, #15258      ; 0x3b9a
    0.00 :	  10338:       ldr     r3, [pc, #604]  ; (10598 <main+0x2a8>)
    0.00 :	  1033a:       str     r5, [sp, #68]   ; 0x44
         :	test_case_Pass():
         :	                length=i;
    0.00 :	  1033c:       add     r1, pc
    0.00 :	  1033e:       str     r1, [sp, #40]   ; 0x28
         :	main():
         :	        float max_c=0;
    0.00 :	  10340:       movw    r1, #10000      ; 0x2710
    0.00 :	  10344:       str     r1, [sp, #44]   ; 0x2c
    0.00 :	  10346:       ldr     r2, [r4, r2]
    0.00 :	  10348:       str     r2, [sp, #76]   ; 0x4c
    0.00 :	  1034a:       ldr     r3, [r4, r3]
    0.00 :	  1034c:       str     r3, [sp, #80]   ; 0x50
    1.10 :	  1034e:       ldr     r3, [sp, #76]   ; 0x4c
         :	          clock_gettime(CLOCK_THREAD_CPUTIME_ID, &start);
    0.00 :	  10350:       movs    r0, #3
    0.00 :	  10352:       ldr     r4, [sp, #80]   ; 0x50
         :	test_case_Pass():
         :	        int i=0;
    0.00 :	  10354:       mov.w   r9, #0
    0.00 :	  10358:       adds    r3, #16
         :	main():
         :	          clock_gettime(CLOCK_THREAD_CPUTIME_ID, &start);
    0.00 :	  1035a:       ldr     r1, [sp, #56]   ; 0x38
    0.00 :	  1035c:       str     r3, [sp, #60]   ; 0x3c
         :	test_case_Pass():
         :	                number_of_entries=Find_Nearest_Waypoint_Pass_1(&(capitals[i]),c,max_c);
    0.00 :	  1035e:       add.w   fp, sp, #120    ; 0x78
         :	main():
         :	          clock_gettime(CLOCK_THREAD_CPUTIME_ID, &start);
    0.00 :	  10362:       mov     r8, r3
    0.00 :	  10364:       str     r4, [sp, #64]   ; 0x40
    0.00 :	  10366:       bl      316b4 <__clock_gettime>
         :	test_case_Pass():
         :	        while(strcmp(capitals[i].Name, "END"))
    0.00 :	  1036a:       ldr     r3, [pc, #560]  ; (1059c <main+0x2ac>)
    0.00 :	  1036c:       add     r3, pc
    0.00 :	  1036e:       str     r3, [sp, #32]
    0.00 :	  10370:       mov     r1, r3
    0.00 :	  10372:       b.n     103c0 <main+0xd0>
         :	                number_of_entries=Find_Nearest_Waypoint_Pass_1(&(capitals[i]),c,max_c);
    2.20 :	  10374:       ldr     r6, [sp, #36]   ; 0x24
    0.55 :	  10376:       sub.w   sl, r8, #16
    0.00 :	  1037a:       mov     r1, fp
    1.65 :	  1037c:       str     r3, [sp, #28]
    0.00 :	  1037e:       mov     r0, sl
         :	                Find_Nearest_Waypoint_Pass_2(&(capitals[i]),c,max_c,number_of_entries,&dist,&bearing,&name);
    0.00 :	  10380:       add     r5, sp, #96     ; 0x60
         :	                number_of_entries=Find_Nearest_Waypoint_Pass_1(&(capitals[i]),c,max_c);
    1.10 :	  10382:       mov     r2, r6
         :	                Find_Nearest_Waypoint_Pass_2(&(capitals[i]),c,max_c,number_of_entries,&dist,&bearing,&name);
    0.00 :	  10384:       add     r7, sp, #92     ; 0x5c
         :	                number_of_entries=Find_Nearest_Waypoint_Pass_1(&(capitals[i]),c,max_c);
    1.10 :	  10386:       bl      10c0c <Find_Nearest_Waypoint_Pass_1>
         :	                length=i;
   22.53 :	  1038a:       ldr     r3, [sp, #28]
         :	                Find_Nearest_Waypoint_Pass_2(&(capitals[i]),c,max_c,number_of_entries,&dist,&bearing,&name);
    0.00 :	  1038c:       mov     r2, r6
    2.20 :	  1038e:       add     r6, sp, #100    ; 0x64
    1.10 :	  10390:       mov     r1, fp
    0.00 :	  10392:       str     r5, [sp, #4]
    1.65 :	  10394:       str     r7, [sp, #0]
         :	                length=i;
    0.00 :	  10396:       mov     r8, r3
         :	                Find_Nearest_Waypoint_Pass_2(&(capitals[i]),c,max_c,number_of_entries,&dist,&bearing,&name);
    0.00 :	  10398:       str     r6, [sp, #8]
         :	                i++;
    0.00 :	  1039a:       add.w   r9, r9, #1
         :	                Find_Nearest_Waypoint_Pass_2(&(capitals[i]),c,max_c,number_of_entries,&dist,&bearing,&name);
    1.10 :	  1039e:       mov     r3, r0
    0.00 :	  103a0:       mov     r0, sl
    1.10 :	  103a2:       bl      10ca4 <Find_Nearest_Waypoint_Pass_2>
         :	                output[i].name=name;
   46.15 :	  103a6:       ldr     r1, [r6, #0]
         :	                length=i;
    0.55 :	  103a8:       ldr     r3, [sp, #40]   ; 0x28
         :	                output[i].dist=dist;
    0.55 :	  103aa:       ldr     r2, [r7, #0]
         :	                output[i].name=name;
    1.65 :	  103ac:       str.w   r1, [r4, #-4]
         :	                length=i;
    1.10 :	  103b0:       str.w   r9, [r3]
    0.55 :	  103b4:       ldr     r1, [sp, #32]
         :	                output[i].bearing=bearing;
    1.65 :	  103b6:       ldr     r3, [r5, #0]
         :	                output[i].dist=dist;
    0.55 :	  103b8:       str.w   r2, [r4, #-12]
         :	                output[i].bearing=bearing;
    1.10 :	  103bc:       str.w   r3, [r4, #-8]
         :	        while(strcmp(capitals[i].Name, "END"))
    0.55 :	  103c0:       mov     r0, r8
    1.65 :	  103c2:       adds    r4, #12
    0.00 :	  103c4:       bl      2ca50 <strcmp>
    1.65 :	  103c8:       add.w   r3, r8, #48     ; 0x30
    0.00 :	  103cc:       cmp     r0, #0
    1.65 :	  103ce:       bne.n   10374 <main+0x84>
         :	main():
         :	          clock_gettime(CLOCK_THREAD_CPUTIME_ID, &end);
    0.00 :	  103d0:       ldr     r4, [sp, #72]   ; 0x48
    0.00 :	  103d2:       mov     r5, r0
    0.00 :	  103d4:       movs    r0, #3
    0.00 :	  103d6:       mov     r1, r4
    0.00 :	  103d8:       bl      316b4 <__clock_gettime>
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    2.20 :	  103dc:       ldr     r0, [sp, #56]   ; 0x38
    0.00 :	  103de:       ldr     r3, [r4, #0]
    0.00 :	  103e0:       ldr     r2, [r4, #4]
    0.00 :	  103e2:       ldr     r1, [r0, #0]
    0.55 :	  103e4:       subs    r3, r3, r1
         :	            end.tv_nsec - start.tv_nsec;
    0.00 :	  103e6:       ldr     r1, [r0, #4]
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    0.00 :	  103e8:       ldr     r0, [sp, #68]   ; 0x44
    0.00 :	  103ea:       mla     r2, r0, r3, r2
         :	            end.tv_nsec - start.tv_nsec;
    0.00 :	  103ee:       subs    r2, r2, r1
    0.00 :	  103f0:       ldrd    r0, r1, [sp, #48]       ; 0x30
         :	          diff = 1000000000 * (end.tv_sec - start.tv_sec) +
    0.00 :	  103f4:       asrs    r3, r2, #31
         :	          total += diff;
    0.00 :	  103f6:       vmov    d16, r2, r3
    0.00 :	  103fa:       vadd.i64        d8, d8, d16
    0.00 :	  103fe:       cmp     r3, r1
    0.55 :	  10400:       it      eq
    0.00 :	  10402:       cmpeq   r2, r0
    0.00 :	  10404:       it      cc
    0.00 :	  10406:       strdcc  r2, r3, [sp, #48]       ; 0x30
         :	        for (n=0; n<N_TESTS; n++) 
    0.00 :	  1040a:       ldr     r3, [sp, #44]   ; 0x2c
    0.00 :	  1040c:       subs    r3, #1
    0.00 :	  1040e:       str     r3, [sp, #44]   ; 0x2c
    0.00 :	  10410:       bne.n   1034e <main+0x5e>
         :	        test_case_validation();
    0.00 :	  10412:       bl      10850 <test_case_validation>
         :	        for (int i=0;i<length;i++)
    0.00 :	  10416:       ldr     r3, [pc, #392]  ; (105a0 <main+0x2b0>)
    0.00 :	  10418:       add     r3, pc
    0.00 :	  1041a:       ldr     r3, [r3, #0]
    0.00 :	  1041c:       cmp     r3, #0
    0.00 :	  1041e:       ble.n   1051a <main+0x22a>
    0.00 :	  10420:       ldr     r3, [pc, #384]  ; (105a4 <main+0x2b4>)
         :	                                        (((exp_output[i].dist-output[i].dist)*100)/(exp_output[i].dist)),capitals[i].Name);
    0.00 :	  10422:       mov     r8, r5
    0.00 :	  10424:       ldr     r2, [sp, #84]   ; 0x54
         :	                        printf("Error in distance!Expected:%f Actual:%f Error:%f for %s\n",exp_output[i].dist,output[i].dist,
    0.00 :	  10426:       ldr     r6, [pc, #384]  ; (105a8 <main+0x2b8>)
         :	                if ((exp_output[i].dist-output[i].dist)>=(0.0001*exp_output[i].dist) || 
    0.00 :	  10428:       vldr    s18, [pc, #316] ; 10568 <main+0x278>
         :	                        printf("Error in distance!Expected:%f Actual:%f Error:%f for %s\n",exp_output[i].dist,output[i].dist,
    0.00 :	  1042c:       add     r6, pc
    0.00 :	  1042e:       ldr     r4, [r2, r3]
         :	                                        (((exp_output[i].dist-output[i].dist)*100)/(exp_output[i].dist)),capitals[i].Name);
    0.00 :	  10430:       ldr     r5, [sp, #60]   ; 0x3c
    0.00 :	  10432:       vldr    s19, [pc, #312] ; 1056c <main+0x27c>
    0.00 :	  10436:       ldr     r7, [sp, #64]   ; 0x40
    0.00 :	  10438:       b.n     1044e <main+0x15e>
         :	        for (int i=0;i<length;i++)
    0.00 :	  1043a:       ldr     r3, [pc, #368]  ; (105ac <main+0x2bc>)
    0.00 :	  1043c:       add.w   r8, r8, #1
    0.00 :	  10440:       adds    r4, #12
    0.00 :	  10442:       adds    r7, #12
    0.00 :	  10444:       add     r3, pc
    0.00 :	  10446:       adds    r5, #48 ; 0x30
    0.00 :	  10448:       ldr     r3, [r3, #0]
    0.00 :	  1044a:       cmp     r3, r8
    0.00 :	  1044c:       ble.n   1051a <main+0x22a>
         :	                if ((exp_output[i].dist-output[i].dist)>=(0.0001*exp_output[i].dist) || 
    0.00 :	  1044e:       vldr    s15, [r4]
    0.00 :	  10452:       vldr    s13, [r7]
    0.00 :	  10456:       vmul.f32        s12, s15, s18
    0.00 :	  1045a:       vsub.f32        s14, s15, s13
    0.00 :	  1045e:       vcmpe.f32       s14, s12
    0.00 :	  10462:       vmrs    APSR_nzcv, fpscr
    0.00 :	  10466:       bge.n   1047a <main+0x18a>
         :	                                (exp_output[i].dist-output[i].dist)<=(-0.0001*exp_output[i].dist))
    0.00 :	  10468:       vldr    s12, [pc, #260] ; 10570 <main+0x280>
    0.00 :	  1046c:       vmul.f32        s12, s15, s12
         :	                if ((exp_output[i].dist-output[i].dist)>=(0.0001*exp_output[i].dist) || 
    0.00 :	  10470:       vcmpe.f32       s14, s12
    0.00 :	  10474:       vmrs    APSR_nzcv, fpscr
    0.00 :	  10478:       bhi.n   104a2 <main+0x1b2>
         :	                                        (((exp_output[i].dist-output[i].dist)*100)/(exp_output[i].dist)),capitals[i].Name);
    0.00 :	  1047a:       vmul.f32        s14, s14, s19
         :	                        printf("Error in distance!Expected:%f Actual:%f Error:%f for %s\n",exp_output[i].dist,output[i].dist,
    0.00 :	  1047e:       str     r5, [sp, #16]
    0.00 :	  10480:       mov     r0, r6
         :	                                        (((exp_output[i].dist-output[i].dist)*100)/(exp_output[i].dist)),capitals[i].Name);
    0.00 :	  10482:       vdiv.f32        s12, s14, s15
         :	                        printf("Error in distance!Expected:%f Actual:%f Error:%f for %s\n",exp_output[i].dist,output[i].dist,
    0.00 :	  10486:       vcvt.f64.f32    d16, s13
    0.00 :	  1048a:       vcvt.f64.f32    d6, s12
    0.00 :	  1048e:       vstr    d16, [sp]
    0.00 :	  10492:       vcvt.f64.f32    d16, s15
    0.00 :	  10496:       vstr    d6, [sp, #8]
    0.00 :	  1049a:       vmov    r2, r3, d16
    0.00 :	  1049e:       bl      230c4 <_IO_printf>
         :	                if ((exp_output[i].bearing-output[i].bearing)>=0.1 || 
    0.00 :	  104a2:       vldr    s13, [r4, #4]
    0.00 :	  104a6:       vldr    s14, [r7, #4]
    0.00 :	  104aa:       vldr    s11, [pc, #200] ; 10574 <main+0x284>
    0.00 :	  104ae:       vsub.f32        s15, s13, s14
    0.00 :	  104b2:       vldr    s12, [pc, #196] ; 10578 <main+0x288>
    0.00 :	  104b6:       vcmpe.f32       s15, s11
    0.00 :	  104ba:       vmrs    APSR_nzcv, fpscr
    0.00 :	  104be:       vcmpe.f32       s15, s12
    0.00 :	  104c2:       ite     ls
    0.00 :	  104c4:       movls   r3, #1
    0.00 :	  104c6:       movhi   r3, #0
    0.00 :	  104c8:       vmrs    APSR_nzcv, fpscr
    0.00 :	  104cc:       it      ge
    0.00 :	  104ce:       orrge.w r3, r3, #1
    0.00 :	  104d2:       cbz     r3, 104f6 <main+0x206>
         :	                        printf("Error in bearing!Expected:%f Actual:%f Error:%f for %s\n",exp_output[i].bearing,output[i].bearing,
    0.00 :	  104d4:       vcvt.f64.f32    d16, s15
    0.00 :	  104d8:       ldr     r0, [pc, #212]  ; (105b0 <main+0x2c0>)
    0.00 :	  104da:       str     r5, [sp, #16]
    0.00 :	  104dc:       add     r0, pc
    0.00 :	  104de:       vcvt.f64.f32    d7, s14
    0.00 :	  104e2:       vstr    d16, [sp, #8]
    0.00 :	  104e6:       vcvt.f64.f32    d16, s13
    0.00 :	  104ea:       vstr    d7, [sp]
    0.00 :	  104ee:       vmov    r2, r3, d16
    0.00 :	  104f2:       bl      230c4 <_IO_printf>
         :	                if (strcmp(exp_output[i].name,output[i].name))
    0.00 :	  104f6:       ldr.w   r9, [r4, #8]
    0.00 :	  104fa:       ldr.w   sl, [r7, #8]
    0.00 :	  104fe:       mov     r0, r9
    0.00 :	  10500:       mov     r1, sl
    0.00 :	  10502:       bl      2ca50 <strcmp>
    0.00 :	  10506:       cmp     r0, #0
    0.00 :	  10508:       beq.n   1043a <main+0x14a>
         :	                        printf("Error in name!Expected:%s Actual:%s for %s\n",exp_output[i].name,output[i].name,
    0.00 :	  1050a:       ldr     r0, [pc, #168]  ; (105b4 <main+0x2c4>)
    0.00 :	  1050c:       mov     r2, sl
    0.00 :	  1050e:       mov     r1, r9
    0.00 :	  10510:       mov     r3, r5
    0.00 :	  10512:       add     r0, pc
    0.00 :	  10514:       bl      230c4 <_IO_printf>
    0.00 :	  10518:       b.n     1043a <main+0x14a>
         :	        printf("Average %10.3f us\n", total/(1000.0*N_TESTS*50));
    0.00 :	  1051a:       vmov    r0, r1, d8
    0.00 :	  1051e:       bl      1ec40 <__aeabi_ul2f>
    0.00 :	  10522:       vldr    s15, [pc, #88]  ; 1057c <main+0x28c>
    0.00 :	  10526:       vmov    s14, r0
    0.00 :	  1052a:       ldr     r0, [pc, #140]  ; (105b8 <main+0x2c8>)
    0.00 :	  1052c:       vmul.f32        s15, s14, s15
    0.00 :	  10530:       add     r0, pc
    0.00 :	  10532:       vcvt.f64.f32    d16, s15
    0.00 :	  10536:       vmov    r2, r3, d16
    0.00 :	  1053a:       bl      230c4 <_IO_printf>
         :	        printf("Minimum %10.3f us\n",  min/(1000.0*50));
    0.00 :	  1053e:       ldr     r0, [pc, #124]  ; (105bc <main+0x2cc>)
    0.00 :	  10540:       vldr    s15, [sp, #48]  ; 0x30
    0.00 :	  10544:       add     r0, pc
    0.00 :	  10546:       vldr    s14, [pc, #56]  ; 10580 <main+0x290>
    0.00 :	  1054a:       vcvt.f32.s32    s15, s15
    0.00 :	  1054e:       vmul.f32        s15, s15, s14
    0.00 :	  10552:       vcvt.f64.f32    d16, s15
    0.00 :	  10556:       vmov    r2, r3, d16
    0.00 :	  1055a:       bl      230c4 <_IO_printf>
         :	        exit(0);
    0.00 :	  1055e:       movs    r0, #0
    0.00 :	  10560:       bl      22a4c <exit>
    0.00 :	  10564:       nop.w
    0.00 :	  10568:       .word   0x38d1b717
    0.00 :	  1056c:       .word   0x42c80000
    0.00 :	  10570:       .word   0xb8d1b717
    0.00 :	  10574:       .word   0xbdcccccd
    0.00 :	  10578:       .word   0x3dcccccd
    0.00 :	  1057c:       .word   0x3109705f
    0.00 :	  10580:       .word   0x37a7c5ac
    0.00 :	  10584:       .word   0x499602d2
    0.00 :	  10588:       .word   0x00000000
    0.00 :	  1058c:       .word   0x0008ccea
    0.00 :	  10590:       .word   0x0000006c
    0.00 :	  10594:       .word   0x0008dc10
    0.00 :	  10598:       .word   0x00000028
    0.00 :	  1059c:       .word   0x0005229c
    0.00 :	  105a0:       .word   0x0008db34
    0.00 :	  105a4:       .word   0x00000048
    0.00 :	  105a8:       .word   0x00052208
    0.00 :	  105ac:       .word   0x0008db08
    0.00 :	  105b0:       .word   0x00052194
    0.00 :	  105b4:       .word   0x00052196
    0.00 :	  105b8:       .word   0x000520dc
    0.00 :	  105bc:       .word   0x000520dc
 Percent |	Source code & Disassembly of sg for cycles:ppp (97 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0002ca50 <strcmp>:
         :	strcmp():
   11.34 :	  2ca50:       ldrb    r2, [r0, #0]
   72.16 :	  2ca52:       ldrb    r3, [r1, #0]
    2.06 :	  2ca54:       cmp     r2, #1
    3.09 :	  2ca56:       it      cs
    4.12 :	  2ca58:       cmpcs   r2, r3
    0.00 :	  2ca5a:       bne.n   2ca40 <strchr+0xb0>
    1.03 :	  2ca5c:       strd    r4, r5, [sp, #-16]!
    0.00 :	  2ca60:       orr.w   r4, r0, r1
    0.00 :	  2ca64:       strd    r6, r7, [sp, #8]
    0.00 :	  2ca68:       mvn.w   ip, #0
    1.03 :	  2ca6c:       mov.w   r2, r4, lsl #29
    0.00 :	  2ca70:       cbz     r2, 2cac0 <strcmp+0x70>
    0.00 :	  2ca72:       eor.w   r4, r0, r1
    0.00 :	  2ca76:       tst.w   r4, #7
    0.00 :	  2ca7a:       bne.n   2cb5a <strcmp+0x10a>
    0.00 :	  2ca7c:       and.w   r4, r0, #7
    0.00 :	  2ca80:       bic.w   r0, r0, #7
    0.00 :	  2ca84:       and.w   r5, r4, #3
    0.00 :	  2ca88:       bic.w   r1, r1, #7
    0.00 :	  2ca8c:       mov.w   r5, r5, lsl #3
    0.00 :	  2ca90:       ldrd    r2, r3, [r0], #16
    0.00 :	  2ca94:       tst.w   r4, #4
    0.00 :	  2ca98:       ldrd    r6, r7, [r1], #16
    0.00 :	  2ca9c:       lsl.w   r4, ip, r5
    0.00 :	  2caa0:       orn     r2, r2, r4
    0.00 :	  2caa4:       orn     r6, r6, r4
    0.00 :	  2caa8:       beq.n   2cac8 <strcmp+0x78>
    0.00 :	  2caaa:       orn     r3, r3, r4
    0.00 :	  2caae:       mov     r2, ip
    0.00 :	  2cab0:       orn     r7, r7, r4
    0.00 :	  2cab4:       mov     r6, ip
    0.00 :	  2cab6:       b.n     2cac8 <strcmp+0x78>
    0.00 :	  2cab8:       nop.w
    0.00 :	  2cabc:       nop.w
    0.00 :	  2cac0:       ldrd    r2, r3, [r0], #16
    0.00 :	  2cac4:       ldrd    r6, r7, [r1], #16
    0.00 :	  2cac8:       uadd8   r5, r2, ip
    0.00 :	  2cacc:       eor.w   r4, r2, r6
    0.00 :	  2cad0:       sel     r4, r4, ip
    0.00 :	  2cad4:       cbnz    r4, 2cb32 <strcmp+0xe2>
    0.00 :	  2cad6:       uadd8   r5, r3, ip
    0.00 :	  2cada:       eor.w   r5, r3, r7
    0.00 :	  2cade:       sel     r5, r5, ip
    0.00 :	  2cae2:       cbnz    r5, 2cb0a <strcmp+0xba>
    0.00 :	  2cae4:       ldrd    r2, r3, [r0, #-8]
    0.00 :	  2cae8:       ldrd    r6, r7, [r1, #-8]
    0.00 :	  2caec:       uadd8   r5, r2, ip
    0.00 :	  2caf0:       eor.w   r4, r2, r6
    0.00 :	  2caf4:       sel     r4, r4, ip
    0.00 :	  2caf8:       uadd8   r5, r3, ip
    0.00 :	  2cafc:       eor.w   r5, r3, r7
    0.00 :	  2cb00:       sel     r5, r5, ip
    0.00 :	  2cb04:       orrs    r5, r4
    0.00 :	  2cb06:       beq.n   2cac0 <strcmp+0x70>
    0.00 :	  2cb08:       cbnz    r4, 2cb32 <strcmp+0xe2>
    0.00 :	  2cb0a:       rev     r5, r5
    0.00 :	  2cb0c:       clz     r4, r5
    0.00 :	  2cb10:       bic.w   r4, r4, #7
    0.00 :	  2cb14:       lsr.w   r1, r7, r4
    0.00 :	  2cb18:       ldrd    r6, r7, [sp, #8]
    0.00 :	  2cb1c:       lsr.w   r3, r3, r4
    0.00 :	  2cb20:       and.w   r0, r3, #255    ; 0xff
    0.00 :	  2cb24:       and.w   r1, r1, #255    ; 0xff
    0.00 :	  2cb28:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cb2c:       sub.w   r0, r0, r1
    0.00 :	  2cb30:       bx      lr
    0.00 :	  2cb32:       rev     r4, r4
    0.00 :	  2cb34:       clz     r4, r4
    0.00 :	  2cb38:       bic.w   r4, r4, #7
    0.00 :	  2cb3c:       lsr.w   r1, r6, r4
    0.00 :	  2cb40:       ldrd    r6, r7, [sp, #8]
    0.00 :	  2cb44:       lsr.w   r2, r2, r4
    0.00 :	  2cb48:       and.w   r0, r2, #255    ; 0xff
    0.00 :	  2cb4c:       and.w   r1, r1, #255    ; 0xff
    0.00 :	  2cb50:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cb54:       sub.w   r0, r0, r1
    0.00 :	  2cb58:       bx      lr
    2.06 :	  2cb5a:       tst.w   r4, #3
    0.00 :	  2cb5e:       bne.n   2cbda <strcmp+0x18a>
    0.00 :	  2cb60:       ands.w  r4, r0, #3
    0.00 :	  2cb64:       bne.n   2cbb8 <strcmp+0x168>
    1.03 :	  2cb66:       ldr.w   r2, [r0], #8
    0.00 :	  2cb6a:       ldr.w   r3, [r1], #8
    0.00 :	  2cb6e:       uadd8   r5, r2, ip
    0.00 :	  2cb72:       eor.w   r5, r2, r3
    0.00 :	  2cb76:       sel     r5, r5, ip
    0.00 :	  2cb7a:       cbnz    r5, 2cb94 <strcmp+0x144>
    0.00 :	  2cb7c:       ldr.w   r2, [r0, #-4]
    0.00 :	  2cb80:       ldr.w   r3, [r1, #-4]
    0.00 :	  2cb84:       uadd8   r5, r2, ip
    0.00 :	  2cb88:       eor.w   r5, r2, r3
    0.00 :	  2cb8c:       sel     r5, r5, ip
    0.00 :	  2cb90:       cmp     r5, #0
    0.00 :	  2cb92:       beq.n   2cb66 <strcmp+0x116>
    0.00 :	  2cb94:       rev     r5, r5
    0.00 :	  2cb96:       clz     r4, r5
    0.00 :	  2cb9a:       bic.w   r4, r4, #7
    1.03 :	  2cb9e:       lsr.w   r1, r3, r4
    0.00 :	  2cba2:       lsr.w   r2, r2, r4
    0.00 :	  2cba6:       and.w   r0, r2, #255    ; 0xff
    0.00 :	  2cbaa:       and.w   r1, r1, #255    ; 0xff
    1.03 :	  2cbae:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cbb2:       sub.w   r0, r0, r1
    0.00 :	  2cbb6:       bx      lr
    0.00 :	  2cbb8:       mov.w   r4, r4, lsl #3
    0.00 :	  2cbbc:       bic.w   r0, r0, #3
    0.00 :	  2cbc0:       ldr.w   r2, [r0], #8
    0.00 :	  2cbc4:       bic.w   r1, r1, #3
    0.00 :	  2cbc8:       ldr.w   r3, [r1], #8
    0.00 :	  2cbcc:       lsl.w   r4, ip, r4
    0.00 :	  2cbd0:       orn     r2, r2, r4
    0.00 :	  2cbd4:       orn     r3, r3, r4
    0.00 :	  2cbd8:       b.n     2cb6e <strcmp+0x11e>
    0.00 :	  2cbda:       ands.w  r4, r0, #3
    0.00 :	  2cbde:       beq.n   2cc16 <strcmp+0x1c6>
    0.00 :	  2cbe0:       sub.w   r1, r1, r4
    0.00 :	  2cbe4:       bic.w   r0, r0, #3
    0.00 :	  2cbe8:       lsls    r4, r4, #31
    0.00 :	  2cbea:       ldr.w   r2, [r0], #4
    0.00 :	  2cbee:       beq.n   2cbfe <strcmp+0x1ae>
    0.00 :	  2cbf0:       bcs.n   2cc12 <strcmp+0x1c2>
    0.00 :	  2cbf2:       ldrb    r3, [r1, #2]
    0.00 :	  2cbf4:       uxtb.w  r4, r2, ror #16
    0.00 :	  2cbf8:       subs    r4, r4, r3
    0.00 :	  2cbfa:       bne.n   2cc0a <strcmp+0x1ba>
    0.00 :	  2cbfc:       cbz     r3, 2cc0a <strcmp+0x1ba>
    0.00 :	  2cbfe:       ldrb    r3, [r1, #3]
    0.00 :	  2cc00:       uxtb.w  r4, r2, ror #24
    0.00 :	  2cc04:       subs    r4, r4, r3
    0.00 :	  2cc06:       bne.n   2cc0a <strcmp+0x1ba>
    0.00 :	  2cc08:       cbnz    r3, 2cc12 <strcmp+0x1c2>
    0.00 :	  2cc0a:       mov     r0, r4
    0.00 :	  2cc0c:       ldr.w   r4, [sp], #16
    0.00 :	  2cc10:       bx      lr
    0.00 :	  2cc12:       add.w   r1, r1, #4
    0.00 :	  2cc16:       ldr.w   r2, [r0], #4
    0.00 :	  2cc1a:       lsls    r4, r1, #31
    0.00 :	  2cc1c:       bic.w   r1, r1, #3
    0.00 :	  2cc20:       ldr.w   r3, [r1], #4
    0.00 :	  2cc24:       bhi.n   2ccc0 <strcmp+0x270>
    0.00 :	  2cc26:       bcs.n   2cc72 <strcmp+0x222>
    0.00 :	  2cc28:       bic.w   r4, r2, #4278190080     ; 0xff000000
    0.00 :	  2cc2c:       uadd8   r5, r2, ip
    0.00 :	  2cc30:       eors.w  r5, r4, r3, lsr #8
    0.00 :	  2cc34:       sel     r5, r5, ip
    0.00 :	  2cc38:       bne.n   2cc50 <strcmp+0x200>
    0.00 :	  2cc3a:       cbnz    r5, 2cc56 <strcmp+0x206>
    0.00 :	  2cc3c:       ldr.w   r3, [r1], #4
    0.00 :	  2cc40:       eor.w   r4, r4, r2
    0.00 :	  2cc44:       cmp.w   r4, r3, lsl #24
    0.00 :	  2cc48:       bne.n   2cc68 <strcmp+0x218>
    0.00 :	  2cc4a:       ldr.w   r2, [r0], #4
    0.00 :	  2cc4e:       b.n     2cc28 <strcmp+0x1d8>
    0.00 :	  2cc50:       mov.w   r3, r3, lsr #8
    0.00 :	  2cc54:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2cc56:       bics.w  r5, r5, #4278190080     ; 0xff000000
    0.00 :	  2cc5a:       bne.n   2cd00 <strcmp+0x2b0>
    0.00 :	  2cc5c:       ldrb    r0, [r1, #0]
    0.00 :	  2cc5e:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cc62:       rsb     r0, r0, #0
    0.00 :	  2cc66:       bx      lr
    0.00 :	  2cc68:       mov.w   r2, r2, lsr #24
    0.00 :	  2cc6c:       and.w   r3, r3, #255    ; 0xff
    0.00 :	  2cc70:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2cc72:       and.w   r4, r2, ip, lsr #16
    0.00 :	  2cc76:       uadd8   r5, r2, ip
    0.00 :	  2cc7a:       eors.w  r5, r4, r3, lsr #16
    0.00 :	  2cc7e:       sel     r5, r5, ip
    0.00 :	  2cc82:       bne.n   2cc9a <strcmp+0x24a>
    0.00 :	  2cc84:       cbnz    r5, 2cca0 <strcmp+0x250>
    0.00 :	  2cc86:       ldr.w   r3, [r1], #4
    0.00 :	  2cc8a:       eor.w   r4, r4, r2
    0.00 :	  2cc8e:       cmp.w   r4, r3, lsl #16
    0.00 :	  2cc92:       bne.n   2ccae <strcmp+0x25e>
    0.00 :	  2cc94:       ldr.w   r2, [r0], #4
    0.00 :	  2cc98:       b.n     2cc72 <strcmp+0x222>
    0.00 :	  2cc9a:       mov.w   r3, r3, lsr #16
    0.00 :	  2cc9e:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2cca0:       ands.w  r5, r5, ip, lsr #16
    0.00 :	  2cca4:       bne.n   2cd00 <strcmp+0x2b0>
    0.00 :	  2cca6:       ldrh    r3, [r1, #0]
    0.00 :	  2cca8:       mov.w   r2, r2, lsr #16
    0.00 :	  2ccac:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2ccae:       mov.w   r2, r2, lsr #16
    0.00 :	  2ccb2:       and.w   r3, r3, ip, lsr #16
    0.00 :	  2ccb6:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2ccb8:       nop.w
    0.00 :	  2ccbc:       nop.w
    0.00 :	  2ccc0:       and.w   r4, r2, #255    ; 0xff
    0.00 :	  2ccc4:       uadd8   r5, r2, ip
    0.00 :	  2ccc8:       eors.w  r5, r4, r3, lsr #24
    0.00 :	  2cccc:       sel     r5, r5, ip
    0.00 :	  2ccd0:       bne.n   2cce8 <strcmp+0x298>
    0.00 :	  2ccd2:       cbnz    r5, 2ccee <strcmp+0x29e>
    0.00 :	  2ccd4:       ldr.w   r3, [r1], #4
    0.00 :	  2ccd8:       eor.w   r4, r4, r2
    0.00 :	  2ccdc:       cmp.w   r4, r3, lsl #8
    0.00 :	  2cce0:       bne.n   2ccf6 <strcmp+0x2a6>
    0.00 :	  2cce2:       ldr.w   r2, [r0], #4
    0.00 :	  2cce6:       b.n     2ccc0 <strcmp+0x270>
    0.00 :	  2cce8:       mov.w   r3, r3, lsr #24
    0.00 :	  2ccec:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2ccee:       tst.w   r5, #255        ; 0xff
    0.00 :	  2ccf2:       bne.n   2cd00 <strcmp+0x2b0>
    0.00 :	  2ccf4:       ldr     r3, [r1, #0]
    0.00 :	  2ccf6:       mov.w   r2, r2, lsr #8
    0.00 :	  2ccfa:       bic.w   r3, r3, #4278190080     ; 0xff000000
    0.00 :	  2ccfe:       b.n     2cd0a <strcmp+0x2ba>
    0.00 :	  2cd00:       mov.w   r0, #0
    0.00 :	  2cd04:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cd08:       bx      lr
    0.00 :	  2cd0a:       rev     r2, r2
    0.00 :	  2cd0c:       rev     r3, r3
    0.00 :	  2cd0e:       uadd8   r4, r2, ip
    0.00 :	  2cd12:       eor.w   r4, r2, r3
    0.00 :	  2cd16:       sel     r5, r4, ip
    0.00 :	  2cd1a:       clz     r4, r5
    0.00 :	  2cd1e:       lsl.w   r2, r2, r4
    0.00 :	  2cd22:       lsl.w   r3, r3, r4
    0.00 :	  2cd26:       mov.w   r0, r2, lsr #24
    0.00 :	  2cd2a:       ldrd    r4, r5, [sp], #16
    0.00 :	  2cd2e:       sub.w   r0, r0, r3, lsr #24
    0.00 :	  2cd32:       bx      lr
 Percent |	Source code & Disassembly of sg for cycles:ppp (83 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001e884 <__kernel_sinf>:
         :	__kernel_sinf():
    7.23 :	  1e884:       vmov    r3, s0
   53.01 :	  1e888:       sub     sp, #8
    0.00 :	  1e88a:       bic.w   r3, r3, #2147483648     ; 0x80000000
    1.20 :	  1e88e:       cmp.w   r3, #838860800  ; 0x32000000
    0.00 :	  1e892:       bge.n   1e8b8 <__kernel_sinf+0x34>
    0.00 :	  1e894:       vabs.f32        s15, s0
    0.00 :	  1e898:       vldr    s14, [pc, #124] ; 1e918 <__kernel_sinf+0x94>
    0.00 :	  1e89c:       vcmpe.f32       s15, s14
    0.00 :	  1e8a0:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1e8a4:       bpl.n   1e8ae <__kernel_sinf+0x2a>
    0.00 :	  1e8a6:       vmul.f32        s15, s0, s0
    0.00 :	  1e8aa:       vstr    s15, [sp, #4]
    0.00 :	  1e8ae:       vcvt.s32.f32    s15, s0
    0.00 :	  1e8b2:       vmov    r3, s15
    0.00 :	  1e8b6:       cbz     r3, 1e902 <__kernel_sinf+0x7e>
    2.41 :	  1e8b8:       vmul.f32        s15, s0, s0
    0.00 :	  1e8bc:       vldr    s14, [pc, #92]  ; 1e91c <__kernel_sinf+0x98>
    8.43 :	  1e8c0:       vldr    s11, [pc, #92]  ; 1e920 <__kernel_sinf+0x9c>
    2.41 :	  1e8c4:       vldr    s12, [pc, #92]  ; 1e924 <__kernel_sinf+0xa0>
    2.41 :	  1e8c8:       vldr    s13, [pc, #92]  ; 1e928 <__kernel_sinf+0xa4>
    0.00 :	  1e8cc:       vnmls.f32       s11, s15, s14
    2.41 :	  1e8d0:       vldr    s14, [pc, #88]  ; 1e92c <__kernel_sinf+0xa8>
    0.00 :	  1e8d4:       vmla.f32        s12, s11, s15
    2.41 :	  1e8d8:       vnmls.f32       s13, s12, s15
    0.00 :	  1e8dc:       vmul.f32        s12, s0, s15
    1.20 :	  1e8e0:       vmla.f32        s14, s13, s15
    3.61 :	  1e8e4:       cbz     r0, 1e906 <__kernel_sinf+0x82>
    0.00 :	  1e8e6:       vldr    s13, [pc, #72]  ; 1e930 <__kernel_sinf+0xac>
    0.00 :	  1e8ea:       vmul.f32        s14, s12, s14
    0.00 :	  1e8ee:       vmov.f32        s11, #96        ; 0x3f000000  0.5
    0.00 :	  1e8f2:       vnmls.f32       s14, s1, s11
    0.00 :	  1e8f6:       vnmls.f32       s1, s14, s15
    0.00 :	  1e8fa:       vmls.f32        s1, s12, s13
    0.00 :	  1e8fe:       vsub.f32        s0, s0, s1
    0.00 :	  1e902:       add     sp, #8
    0.00 :	  1e904:       bx      lr
    8.43 :	  1e906:       vldr    s13, [pc, #44]  ; 1e934 <__kernel_sinf+0xb0>
    0.00 :	  1e90a:       vnmls.f32       s13, s15, s14
    1.20 :	  1e90e:       vmla.f32        s0, s13, s12
    0.00 :	  1e912:       add     sp, #8
    3.61 :	  1e914:       bx      lr
    0.00 :	  1e916:       nop
    0.00 :	  1e918:       .word   0x00800000
    0.00 :	  1e91c:       .word   0x2f2ec9d3
    0.00 :	  1e920:       .word   0x32d72f34
    0.00 :	  1e924:       .word   0x3638ef1b
    0.00 :	  1e928:       .word   0x39500d01
    0.00 :	  1e92c:       .word   0x3c088889
    0.00 :	  1e930:       .word   0xbe2aaaab
    0.00 :	  1e934:       .word   0x3e2aaaab
 Percent |	Source code & Disassembly of sg for cycles:ppp (18 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00017eac <__cos>:
         :	__cos():
    0.00 :	  17eac:       push    {r4, r5, r6, r7, lr}
    0.00 :	  17eae:       vpush   {d8-d11}
    0.00 :	  17eb2:       sub     sp, #44 ; 0x2c
    0.00 :	  17eb4:       vstr    d0, [sp]
    0.00 :	  17eb8:       vmrs    r3, fpscr
    5.56 :	  17ebc:       ands.w  r4, r3, #12582912       ; 0xc00000
    0.00 :	  17ec0:       bne.n   17ee0 <__cos+0x34>
    0.00 :	  17ec2:       ldr     r3, [sp, #4]
    0.00 :	  17ec4:       ldr     r5, [sp, #0]
    0.00 :	  17ec6:       bic.w   r3, r3, #2147483648     ; 0x80000000
    0.00 :	  17eca:       cmp.w   r3, #1044381696 ; 0x3e400000
    0.00 :	  17ece:       it      ge
    0.00 :	  17ed0:       movge   r6, r4
    0.00 :	  17ed2:       bge.n   17efa <__cos+0x4e>
    0.00 :	  17ed4:       vmov.f64        d0, #112        ; 0x3f800000  1.0
    0.00 :	  17ed8:       add     sp, #44 ; 0x2c
    0.00 :	  17eda:       vpop    {d8-d11}
    0.00 :	  17ede:       pop     {r4, r5, r6, r7, pc}
    0.00 :	  17ee0:       bic.w   r3, r3, #12582912       ; 0xc00000
    0.00 :	  17ee4:       vmsr    fpscr, r3
    0.00 :	  17ee8:       ldr     r3, [sp, #4]
    0.00 :	  17eea:       ldr     r5, [sp, #0]
    0.00 :	  17eec:       bic.w   r3, r3, #2147483648     ; 0x80000000
    0.00 :	  17ef0:       cmp.w   r3, #1044381696 ; 0x3e400000
    0.00 :	  17ef4:       blt.w   186d6 <__cos+0x82a>
    0.00 :	  17ef8:       movs    r6, #1
    0.00 :	  17efa:       movw    r2, #24575      ; 0x5fff
    0.00 :	  17efe:       movt    r2, #16363      ; 0x3feb
    0.00 :	  17f02:       cmp     r3, r2
    0.00 :	  17f04:       vldr    d8, [sp]
    0.00 :	  17f08:       ble.w   180e0 <__cos+0x234>
    0.00 :	  17f0c:       movw    r2, #26876      ; 0x68fc
    0.00 :	  17f10:       movt    r2, #16387      ; 0x4003
    0.00 :	  17f14:       cmp     r3, r2
    0.00 :	  17f16:       ble.w   1803e <__cos+0x192>
    0.00 :	  17f1a:       movw    r2, #8698       ; 0x21fa
    0.00 :	  17f1e:       movt    r2, #16793      ; 0x4199
    0.00 :	  17f22:       cmp     r3, r2
    0.00 :	  17f24:       bgt.w   182c8 <__cos+0x41c>
    0.00 :	  17f28:       vldr    d7, [pc, #780]  ; 18238 <__cos+0x38c>
    0.00 :	  17f2c:       vldr    d6, [pc, #808]  ; 18258 <__cos+0x3ac>
    0.00 :	  17f30:       vmov.f64        d5, d7
    0.00 :	  17f34:       vldr    d2, [pc, #808]  ; 18260 <__cos+0x3b4>
    0.00 :	  17f38:       vmla.f64        d5, d8, d6
    0.00 :	  17f3c:       vldr    d3, [pc, #776]  ; 18248 <__cos+0x39c>
    0.00 :	  17f40:       vldr    d4, [pc, #700]  ; 18200 <__cos+0x354>
    0.00 :	  17f44:       vldr    d11, [pc, #704] ; 18208 <__cos+0x35c>
    0.00 :	  17f48:       vsub.f64        d7, d5, d7
    0.00 :	  17f4c:       vmov    r5, s10
    0.00 :	  17f50:       vmov.f64        d6, d8
    0.00 :	  17f54:       vmls.f64        d6, d7, d2
    0.00 :	  17f58:       and.w   r5, r5, #3
    0.00 :	  17f5c:       adds    r7, r5, #1
    0.00 :	  17f5e:       and.w   r3, r7, #3
    0.00 :	  17f62:       cmp     r3, #2
    0.00 :	  17f64:       vmls.f64        d6, d7, d3
    0.00 :	  17f68:       vmul.f64        d7, d7, d4
    0.00 :	  17f6c:       vsub.f64        d10, d6, d7
    0.00 :	  17f70:       vsub.f64        d6, d6, d10
    0.00 :	  17f74:       vabs.f64        d4, d8
    0.00 :	  17f78:       vsub.f64        d9, d6, d7
    0.00 :	  17f7c:       vmul.f64        d11, d4, d11
    0.00 :	  17f80:       beq.w   1849e <__cos+0x5f2>
    0.00 :	  17f84:       cmp     r3, #3
    0.00 :	  17f86:       beq.w   18420 <__cos+0x574>
    0.00 :	  17f8a:       cmp     r3, #1
    0.00 :	  17f8c:       beq.w   18420 <__cos+0x574>
    0.00 :	  17f90:       vldr    d6, [pc, #780]  ; 182a0 <__cos+0x3f4>
    0.00 :	  17f94:       vmul.f64        d7, d10, d10
    0.00 :	  17f98:       vcmpe.f64       d7, d6
    0.00 :	  17f9c:       vmrs    APSR_nzcv, fpscr
    5.56 :	  17fa0:       bpl.w   184a8 <__cos+0x5fc>
    0.00 :	  17fa4:       vldr    d5, [pc, #712]  ; 18270 <__cos+0x3c4>
    0.00 :	  17fa8:       vldr    d3, [pc, #740]  ; 18290 <__cos+0x3e4>
    0.00 :	  17fac:       vldr    d6, [pc, #720]  ; 18280 <__cos+0x3d4>
    0.00 :	  17fb0:       vmla.f64        d3, d7, d5
    0.00 :	  17fb4:       vldr    d4, [pc, #720]  ; 18288 <__cos+0x3dc>
    0.00 :	  17fb8:       vldr    d5, [pc, #700]  ; 18278 <__cos+0x3cc>
    0.00 :	  17fbc:       vnmls.f64       d6, d3, d7
    0.00 :	  17fc0:       vmla.f64        d4, d6, d7
    0.00 :	  17fc4:       vmov.f64        d6, #96 ; 0x3f000000  0.5
    0.00 :	  17fc8:       vnmls.f64       d5, d4, d7
    0.00 :	  17fcc:       vmul.f64        d6, d9, d6
    0.00 :	  17fd0:       vnmls.f64       d6, d5, d10
    0.00 :	  17fd4:       vmov.f64        d5, d9
    0.00 :	  17fd8:       vmla.f64        d5, d6, d7
    0.00 :	  17fdc:       vldr    d6, [pc, #696]  ; 18298 <__cos+0x3ec>
    0.00 :	  17fe0:       vadd.f64        d0, d10, d5
    0.00 :	  17fe4:       vsub.f64        d7, d10, d0
    0.00 :	  17fe8:       vadd.f64        d7, d7, d5
    0.00 :	  17fec:       vcmpe.f64       d7, #0.0
    0.00 :	  17ff0:       vmrs    APSR_nzcv, fpscr
    0.00 :	  17ff4:       ite     gt
    0.00 :	  17ff6:       vmlagt.f64      d11, d7, d6
    0.00 :	  17ffa:       vnmlsle.f64     d11, d7, d6
    0.00 :	  17ffe:       vadd.f64        d5, d0, d11
    0.00 :	  18002:       vstr    d11, [sp, #24]
    0.00 :	  18006:       vcmp.f64        d0, d5
    0.00 :	  1800a:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1800e:       beq.n   18022 <__cos+0x176>
    0.00 :	  18010:       vmov.f64        d1, d9
    0.00 :	  18014:       movs    r0, #1
    0.00 :	  18016:       vmov.f64        d0, d10
    0.00 :	  1801a:       vmov.f64        d2, d8
    0.00 :	  1801e:       bl      16780 <sloww>
    0.00 :	  18022:       cmp     r6, #0
    0.00 :	  18024:       beq.w   17ed8 <__cos+0x2c>
    0.00 :	  18028:       vmrs    r3, fpscr
    0.00 :	  1802c:       bic.w   r3, r3, #12582912       ; 0xc00000
    0.00 :	  18030:       orrs    r4, r3
    0.00 :	  18032:       vmsr    fpscr, r4
    0.00 :	  18036:       add     sp, #44 ; 0x2c
    0.00 :	  18038:       vpop    {d8-d11}
    0.00 :	  1803c:       pop     {r4, r5, r6, r7, pc}
    0.00 :	  1803e:       vabs.f64        d6, d8
    0.00 :	  18042:       vldr    d7, [pc, #460]  ; 18210 <__cos+0x364>
    0.00 :	  18046:       vldr    d9, [pc, #464]  ; 18218 <__cos+0x36c>
    0.00 :	  1804a:       vsub.f64        d7, d7, d6
    0.00 :	  1804e:       vldr    d5, [pc, #592]  ; 182a0 <__cos+0x3f4>
    0.00 :	  18052:       vadd.f64        d10, d7, d9
    0.00 :	  18056:       vmul.f64        d6, d10, d10
    0.00 :	  1805a:       vsub.f64        d7, d7, d10
    0.00 :	  1805e:       vcmpe.f64       d6, d5
    0.00 :	  18062:       vadd.f64        d9, d7, d9
    0.00 :	  18066:       vmrs    APSR_nzcv, fpscr
    5.56 :	  1806a:       bpl.w   18186 <__cos+0x2da>
    0.00 :	  1806e:       vldr    d5, [pc, #512]  ; 18270 <__cos+0x3c4>
    0.00 :	  18072:       vldr    d3, [pc, #540]  ; 18290 <__cos+0x3e4>
    0.00 :	  18076:       vldr    d7, [pc, #520]  ; 18280 <__cos+0x3d4>
    0.00 :	  1807a:       vmla.f64        d3, d6, d5
    0.00 :	  1807e:       vldr    d4, [pc, #520]  ; 18288 <__cos+0x3dc>
    0.00 :	  18082:       vldr    d5, [pc, #500]  ; 18278 <__cos+0x3cc>
    0.00 :	  18086:       vnmls.f64       d7, d3, d6
    0.00 :	  1808a:       vmla.f64        d4, d7, d6
    0.00 :	  1808e:       vmov.f64        d7, #96 ; 0x3f000000  0.5
    0.00 :	  18092:       vnmls.f64       d5, d4, d6
    0.00 :	  18096:       vmul.f64        d7, d9, d7
    0.00 :	  1809a:       vnmls.f64       d7, d5, d10
    0.00 :	  1809e:       vmov.f64        d5, d9
    0.00 :	  180a2:       vmla.f64        d5, d7, d6
    0.00 :	  180a6:       vldr    d7, [pc, #376]  ; 18220 <__cos+0x374>
    0.00 :	  180aa:       vadd.f64        d0, d10, d5
    0.00 :	  180ae:       vsub.f64        d6, d10, d0
    0.00 :	  180b2:       vadd.f64        d6, d6, d5
    0.00 :	  180b6:       vldr    d5, [pc, #480]  ; 18298 <__cos+0x3ec>
    0.00 :	  180ba:       vcmpe.f64       d6, #0.0
    0.00 :	  180be:       vmrs    APSR_nzcv, fpscr
    0.00 :	  180c2:       ite     gt
    0.00 :	  180c4:       vmlagt.f64      d7, d6, d5
    0.00 :	  180c8:       vnmlsle.f64     d7, d6, d5
    0.00 :	  180cc:       vstr    d7, [sp, #8]
    0.00 :	  180d0:       vadd.f64        d7, d7, d0
    0.00 :	  180d4:       vcmp.f64        d0, d7
    0.00 :	  180d8:       vmrs    APSR_nzcv, fpscr
    0.00 :	  180dc:       beq.n   18022 <__cos+0x176>
    0.00 :	  180de:       b.n     18010 <__cos+0x164>
    0.00 :	  180e0:       vabs.f64        d10, d8
    0.00 :	  180e4:       add     r1, sp, #8
    0.00 :	  180e6:       vldr    d0, [pc, #456]  ; 182b0 <__cos+0x404>
    0.00 :	  180ea:       vadd.f64        d7, d10, d0
    0.00 :	  180ee:       vsub.f64        d0, d7, d0
    0.00 :	  180f2:       vmov    r0, s14
    0.00 :	  180f6:       vmov    r5, s14
    0.00 :	  180fa:       vsub.f64        d9, d10, d0
    0.00 :	  180fe:       vmov.f64        d0, d9
    5.56 :	  18102:       bl      16c40 <do_cos.isra.0>
    0.00 :	  18106:       vldr    d7, [sp, #8]
   38.89 :	  1810a:       vldr    d6, [pc, #396]  ; 18298 <__cos+0x3ec>
    0.00 :	  1810e:       vmov.f64        d5, d0
    0.00 :	  18112:       vmla.f64        d5, d7, d6
    0.00 :	  18116:       vcmp.f64        d0, d5
    0.00 :	  1811a:       vmrs    APSR_nzcv, fpscr
   11.11 :	  1811e:       beq.n   18022 <__cos+0x176>
    0.00 :	  18120:       vldr    d2, [pc, #260]  ; 18228 <__cos+0x37c>
    0.00 :	  18124:       mov     r0, r5
    0.00 :	  18126:       add     r1, sp, #16
    0.00 :	  18128:       vmov.f64        d0, d9
    0.00 :	  1812c:       vmov.f64        d1, d2
    0.00 :	  18130:       bl      16ce0 <do_cos_slow.isra.1>
    0.00 :	  18134:       vldr    d7, [sp, #16]
    0.00 :	  18138:       vadd.f64        d7, d0, d7
    0.00 :	  1813c:       vcmp.f64        d0, d7
    0.00 :	  18140:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18144:       beq.w   18022 <__cos+0x176>
    0.00 :	  18148:       vmov.f64        d0, d10
    0.00 :	  1814c:       add     r0, sp, #24
    0.00 :	  1814e:       vldr    d1, [pc, #216]  ; 18228 <__cos+0x37c>
    0.00 :	  18152:       bl      1c274 <__docos>
    0.00 :	  18156:       vldr    d0, [sp, #24]
    0.00 :	  1815a:       vldr    d6, [sp, #32]
    0.00 :	  1815e:       vldr    d7, [pc, #208]  ; 18230 <__cos+0x384>
    0.00 :	  18162:       vmov.f64        d5, d0
    0.00 :	  18166:       vmla.f64        d5, d6, d7
    0.00 :	  1816a:       vcmp.f64        d0, d5
    0.00 :	  1816e:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18172:       beq.w   18022 <__cos+0x176>
    0.00 :	  18176:       movs    r0, #0
    0.00 :	  18178:       vldr    d1, [pc, #172]  ; 18228 <__cos+0x37c>
    0.00 :	  1817c:       vmov.f64        d0, d8
    0.00 :	  18180:       bl      1ddc4 <__mpcos>
    0.00 :	  18184:       b.n     18022 <__cos+0x176>
    0.00 :	  18186:       vcmpe.f64       d10, #0.0
    0.00 :	  1818a:       add     r1, sp, #8
    0.00 :	  1818c:       vldr    d0, [pc, #288]  ; 182b0 <__cos+0x404>
    0.00 :	  18190:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18194:       itte    le
    0.00 :	  18196:       vnegle.f64      d10, d10
    0.00 :	  1819a:       movle   r7, #0
    0.00 :	  1819c:       movgt   r7, #1
    0.00 :	  1819e:       vadd.f64        d7, d10, d0
    0.00 :	  181a2:       vsub.f64        d0, d7, d0
    0.00 :	  181a6:       vmov    r0, s14
   11.11 :	  181aa:       it      le
    0.00 :	  181ac:       vnegle.f64      d9, d9
    0.00 :	  181b0:       vsub.f64        d0, d10, d0
    0.00 :	  181b4:       vmov.f64        d1, d9
    0.00 :	  181b8:       bl      16fc0 <do_sin.isra.2>
    0.00 :	  181bc:       vldr    d6, [sp, #8]
   11.11 :	  181c0:       vldr    d7, [pc, #92]   ; 18220 <__cos+0x374>
    0.00 :	  181c4:       vcmpe.f64       d6, #0.0
    0.00 :	  181c8:       vldr    d5, [pc, #244]  ; 182c0 <__cos+0x414>
    0.00 :	  181cc:       vmrs    APSR_nzcv, fpscr
    0.00 :	  181d0:       ite     gt
    0.00 :	  181d2:       vmlagt.f64      d7, d6, d5
    0.00 :	  181d6:       vnmlsle.f64     d7, d6, d5
    0.00 :	  181da:       vstr    d7, [sp, #8]
    0.00 :	  181de:       vadd.f64        d7, d7, d0
    0.00 :	  181e2:       vcmp.f64        d0, d7
    0.00 :	  181e6:       vmrs    APSR_nzcv, fpscr
    5.56 :	  181ea:       bne.w   18488 <__cos+0x5dc>
    0.00 :	  181ee:       cmp     r7, #0
    0.00 :	  181f0:       bne.w   18022 <__cos+0x176>
    0.00 :	  181f4:       vneg.f64        d0, d0
    0.00 :	  181f8:       b.n     18022 <__cos+0x176>
    0.00 :	  181fa:       nop
    0.00 :	  181fc:       nop.w
    0.00 :	  18200:       .word   0x99d747f2
    0.00 :	  18204:       .word   0xbc8cb3b3
    0.00 :	  18208:       .word   0x984e1cbf
    0.00 :	  1820c:       .word   0x39b856c1
    0.00 :	  18210:       .word   0x54442d18
    0.00 :	  18214:       .word   0x3ff921fb
    0.00 :	  18218:       .word   0x33145c07
    0.00 :	  1821c:       .word   0x3c91a626
    0.00 :	  18220:       .word   0x65896880
    0.00 :	  18224:       .word   0x398039d6
         :	        ...
    0.00 :	  18230:       .word   0x015798ee
    0.00 :	  18234:       .word   0x3ff00000
    0.00 :	  18238:       .word   0x00000000
    0.00 :	  1823c:       .word   0x43380000
    0.00 :	  18240:       .word   0x98000000
    0.00 :	  18244:       .word   0xbc8cb3b3
    0.00 :	  18248:       .word   0x3c000000
    0.00 :	  1824c:       .word   0xbe4dde97
    0.00 :	  18250:       .word   0x23e32ed7
    0.00 :	  18254:       .word   0xbacd747f
    0.00 :	  18258:       .word   0x6dc9c883
    0.00 :	  1825c:       .word   0x3fe45f30
    0.00 :	  18260:       .word   0x58000000
    0.00 :	  18264:       .word   0x3ff921fb
    0.00 :	  18268:       .word   0x064dd592
    0.00 :	  1826c:       .word   0x44b0f0cf
    0.00 :	  18270:       .word   0xc2fcdf59
    0.00 :	  18274:       .word   0xbe5addff
    0.00 :	  18278:       .word   0x55555555
    0.00 :	  1827c:       .word   0x3fc55555
    0.00 :	  18280:       .word   0x19db08b8
    0.00 :	  18284:       .word   0x3f2a01a0
    0.00 :	  18288:       .word   0x11110ece
    0.00 :	  1828c:       .word   0x3f811111
    0.00 :	  18290:       .word   0x7b9a7ed9
    0.00 :	  18294:       .word   0x3ec71de2
    0.00 :	  18298:       .word   0x851eb852
    0.00 :	  1829c:       .word   0x3ff051eb
    0.00 :	  182a0:       .word   0xc2a454de
    0.00 :	  182a4:       .word   0x3f9042d8
    0.00 :	  182a8:       .word   0x66666666
    0.00 :	  182ac:       .word   0x3ff06666
    0.00 :	  182b0:       .word   0x00000000
    0.00 :	  182b4:       .word   0x42c80000
    0.00 :	  182b8:       .word   0x99a88ea7
    0.00 :	  182bc:       .word   0x3af357c2
    0.00 :	  182c0:       .word   0x28f5c28f
    0.00 :	  182c4:       .word   0x3ff08f5c
    0.00 :	  182c8:       movw    r2, #65535      ; 0xffff
    0.00 :	  182cc:       movt    r2, #17135      ; 0x42ef
    0.00 :	  182d0:       cmp     r3, r2
    0.00 :	  182d2:       bgt.w   18400 <__cos+0x554>
    0.00 :	  182d6:       vldr    d5, [pc, #-160] ; 18238 <__cos+0x38c>
    0.00 :	  182da:       vldr    d7, [pc, #-132] ; 18258 <__cos+0x3ac>
    0.00 :	  182de:       vmov.f64        d6, d5
    0.00 :	  182e2:       vldr    d2, [pc, #-124] ; 18268 <__cos+0x3bc>
    0.00 :	  182e6:       vmla.f64        d6, d8, d7
    0.00 :	  182ea:       vldr    d0, [pc, #-140] ; 18260 <__cos+0x3b4>
    0.00 :	  182ee:       vldr    d3, [pc, #-176] ; 18240 <__cos+0x394>
    0.00 :	  182f2:       vldr    d4, [pc, #-164] ; 18250 <__cos+0x3a4>
    0.00 :	  182f6:       vmov.f64        d7, d6
    0.00 :	  182fa:       vldr    d6, [pc, #-180] ; 18248 <__cos+0x39c>
    0.00 :	  182fe:       vsub.f64        d5, d7, d5
    0.00 :	  18302:       vmov    r5, s14
    0.00 :	  18306:       vadd.f64        d1, d5, d2
    0.00 :	  1830a:       vsub.f64        d1, d1, d2
    0.00 :	  1830e:       and.w   r7, r5, #3
    0.00 :	  18312:       adds    r3, r7, #1
    0.00 :	  18314:       and.w   r3, r3, #3
    0.00 :	  18318:       cmp     r3, #2
    0.00 :	  1831a:       vmov.f64        d7, d8
    0.00 :	  1831e:       vmls.f64        d7, d1, d0
    0.00 :	  18322:       vmls.f64        d7, d1, d6
    0.00 :	  18326:       vsub.f64        d2, d5, d1
    0.00 :	  1832a:       vmls.f64        d7, d2, d0
    0.00 :	  1832e:       vmls.f64        d7, d2, d6
    0.00 :	  18332:       vmul.f64        d1, d1, d3
    0.00 :	  18336:       vsub.f64        d6, d7, d1
    0.00 :	  1833a:       vsub.f64        d7, d7, d6
    0.00 :	  1833e:       vsub.f64        d7, d7, d1
    0.00 :	  18342:       vmls.f64        d7, d2, d3
    0.00 :	  18346:       vmls.f64        d7, d5, d4
    0.00 :	  1834a:       vadd.f64        d10, d6, d7
    0.00 :	  1834e:       vsub.f64        d6, d6, d10
    0.00 :	  18352:       vadd.f64        d9, d6, d7
    0.00 :	  18356:       beq.w   18640 <__cos+0x794>
    0.00 :	  1835a:       cmp     r3, #3
    0.00 :	  1835c:       beq.w   18562 <__cos+0x6b6>
    0.00 :	  18360:       cmp     r3, #1
    0.00 :	  18362:       beq.w   18562 <__cos+0x6b6>
    0.00 :	  18366:       vldr    d6, [pc, #-200] ; 182a0 <__cos+0x3f4>
    0.00 :	  1836a:       vmul.f64        d7, d10, d10
    0.00 :	  1836e:       vcmpe.f64       d7, d6
    0.00 :	  18372:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18376:       bpl.w   185cc <__cos+0x720>
    0.00 :	  1837a:       vldr    d5, [pc, #-268] ; 18270 <__cos+0x3c4>
    0.00 :	  1837e:       vldr    d3, [pc, #-240] ; 18290 <__cos+0x3e4>
    0.00 :	  18382:       vldr    d6, [pc, #-260] ; 18280 <__cos+0x3d4>
    0.00 :	  18386:       vmla.f64        d3, d7, d5
    0.00 :	  1838a:       vldr    d4, [pc, #-260] ; 18288 <__cos+0x3dc>
    0.00 :	  1838e:       vldr    d5, [pc, #-280] ; 18278 <__cos+0x3cc>
    0.00 :	  18392:       vnmls.f64       d6, d3, d7
    0.00 :	  18396:       vmla.f64        d4, d6, d7
    0.00 :	  1839a:       vmov.f64        d6, #96 ; 0x3f000000  0.5
    0.00 :	  1839e:       vnmls.f64       d5, d4, d7
    0.00 :	  183a2:       vmul.f64        d6, d9, d6
    0.00 :	  183a6:       vnmls.f64       d6, d5, d10
    0.00 :	  183aa:       vmov.f64        d5, d9
    0.00 :	  183ae:       vmla.f64        d5, d6, d7
    0.00 :	  183b2:       vldr    d7, [pc, #-252] ; 182b8 <__cos+0x40c>
    0.00 :	  183b6:       vadd.f64        d0, d10, d5
    0.00 :	  183ba:       vsub.f64        d6, d10, d0
    0.00 :	  183be:       vadd.f64        d6, d6, d5
    0.00 :	  183c2:       vldr    d5, [pc, #-300] ; 18298 <__cos+0x3ec>
    0.00 :	  183c6:       vcmpe.f64       d6, #0.0
    0.00 :	  183ca:       vmrs    APSR_nzcv, fpscr
    0.00 :	  183ce:       ite     gt
    0.00 :	  183d0:       vmlagt.f64      d7, d6, d5
    0.00 :	  183d4:       vnmlsle.f64     d7, d6, d5
    0.00 :	  183d8:       vstr    d7, [sp, #24]
    0.00 :	  183dc:       vadd.f64        d7, d0, d7
    0.00 :	  183e0:       vcmp.f64        d0, d7
    0.00 :	  183e4:       vmrs    APSR_nzcv, fpscr
    0.00 :	  183e8:       beq.w   18022 <__cos+0x176>
    0.00 :	  183ec:       mov     r0, r7
    0.00 :	  183ee:       vmov.f64        d1, d9
    0.00 :	  183f2:       vmov.f64        d0, d10
    0.00 :	  183f6:       vmov.f64        d2, d8
    0.00 :	  183fa:       bl      16a80 <bsloww>
    0.00 :	  183fe:       b.n     18022 <__cos+0x176>
    0.00 :	  18400:       movw    r2, #65535      ; 0xffff
    0.00 :	  18404:       movt    r2, #32751      ; 0x7fef
    0.00 :	  18408:       cmp     r3, r2
    0.00 :	  1840a:       ble.w   18516 <__cos+0x66a>
    0.00 :	  1840e:       movs    r2, #0
    0.00 :	  18410:       movt    r2, #32752      ; 0x7ff0
    0.00 :	  18414:       cmp     r3, r2
    0.00 :	  18416:       beq.w   1864a <__cos+0x79e>
    0.00 :	  1841a:       vdiv.f64        d0, d8, d8
    0.00 :	  1841e:       b.n     18022 <__cos+0x176>
    0.00 :	  18420:       vcmpe.f64       d10, #0.0
    0.00 :	  18424:       add     r1, sp, #24
    0.00 :	  18426:       vldr    d6, [pc, #-376] ; 182b0 <__cos+0x404>
    0.00 :	  1842a:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1842e:       it      mi
    0.00 :	  18430:       vnegmi.f64      d10, d10
    0.00 :	  18434:       vadd.f64        d7, d10, d6
    0.00 :	  18438:       vsub.f64        d6, d7, d6
    0.00 :	  1843c:       vmov    r0, s14
    0.00 :	  18440:       vsub.f64        d0, d10, d6
    0.00 :	  18444:       it      mi
    0.00 :	  18446:       vnegmi.f64      d9, d9
    0.00 :	  1844a:       vadd.f64        d0, d0, d9
    0.00 :	  1844e:       bl      16c40 <do_cos.isra.0>
    0.00 :	  18452:       vldr    d7, [sp, #24]
    0.00 :	  18456:       vldr    d6, [pc, #-432] ; 182a8 <__cos+0x3fc>
    0.00 :	  1845a:       vcmpe.f64       d7, #0.0
    0.00 :	  1845e:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18462:       ite     gt
    0.00 :	  18464:       vmlagt.f64      d11, d7, d6
    0.00 :	  18468:       vnmlsle.f64     d11, d7, d6
    0.00 :	  1846c:       vadd.f64        d5, d0, d11
    0.00 :	  18470:       vstr    d11, [sp, #24]
    0.00 :	  18474:       vcmp.f64        d0, d5
    0.00 :	  18478:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1847c:       bne.w   18660 <__cos+0x7b4>
    0.00 :	  18480:       lsls    r2, r7, #30
    0.00 :	  18482:       bpl.w   18022 <__cos+0x176>
    0.00 :	  18486:       b.n     181f4 <__cos+0x348>
    0.00 :	  18488:       mov     r0, r7
    0.00 :	  1848a:       vmov.f64        d1, d9
    0.00 :	  1848e:       movs    r1, #1
    0.00 :	  18490:       vmov.f64        d0, d10
    0.00 :	  18494:       vmov.f64        d2, d8
    0.00 :	  18498:       bl      17178 <sloww1>
    0.00 :	  1849c:       b.n     18022 <__cos+0x176>
    0.00 :	  1849e:       vneg.f64        d10, d10
    0.00 :	  184a2:       vneg.f64        d9, d9
    0.00 :	  184a6:       b.n     17f90 <__cos+0xe4>
    0.00 :	  184a8:       vcmpe.f64       d10, #0.0
    0.00 :	  184ac:       add     r1, sp, #24
    0.00 :	  184ae:       vldr    d0, [pc, #-512] ; 182b0 <__cos+0x404>
    0.00 :	  184b2:       vmrs    APSR_nzcv, fpscr
    0.00 :	  184b6:       itte    le
    0.00 :	  184b8:       vnegle.f64      d10, d10
    0.00 :	  184bc:       movle   r5, #0
    0.00 :	  184be:       movgt   r5, #1
    0.00 :	  184c0:       vadd.f64        d7, d10, d0
    0.00 :	  184c4:       vsub.f64        d0, d7, d0
    0.00 :	  184c8:       vmov    r0, s14
    0.00 :	  184cc:       it      le
    0.00 :	  184ce:       vnegle.f64      d9, d9
    0.00 :	  184d2:       vsub.f64        d0, d10, d0
    0.00 :	  184d6:       vmov.f64        d1, d9
    0.00 :	  184da:       bl      16fc0 <do_sin.isra.2>
    0.00 :	  184de:       vldr    d7, [sp, #24]
    0.00 :	  184e2:       vldr    d6, [pc, #-548] ; 182c0 <__cos+0x414>
    0.00 :	  184e6:       vcmpe.f64       d7, #0.0
    0.00 :	  184ea:       vmrs    APSR_nzcv, fpscr
    0.00 :	  184ee:       ite     gt
    0.00 :	  184f0:       vmlagt.f64      d11, d7, d6
    0.00 :	  184f4:       vnmlsle.f64     d11, d7, d6
    0.00 :	  184f8:       vadd.f64        d5, d0, d11
    0.00 :	  184fc:       vstr    d11, [sp, #24]
    0.00 :	  18500:       vcmp.f64        d0, d5
    0.00 :	  18504:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18508:       bne.n   18512 <__cos+0x666>
    0.00 :	  1850a:       cmp     r5, #0
    0.00 :	  1850c:       bne.w   18022 <__cos+0x176>
    0.00 :	  18510:       b.n     181f4 <__cos+0x348>
    0.00 :	  18512:       mov     r0, r5
    0.00 :	  18514:       b.n     1848a <__cos+0x5de>
    0.00 :	  18516:       add     r1, sp, #24
    0.00 :	  18518:       add     r0, sp, #16
    0.00 :	  1851a:       vmov.f64        d0, d8
    0.00 :	  1851e:       bl      1acb0 <__branred>
    0.00 :	  18522:       adds    r3, r0, #1
    0.00 :	  18524:       mov     r2, r0
    0.00 :	  18526:       and.w   r3, r3, #3
    0.00 :	  1852a:       cmp     r3, #2
    0.00 :	  1852c:       beq.w   1869c <__cos+0x7f0>
    0.00 :	  18530:       cmp     r3, #3
    0.00 :	  18532:       beq.w   18688 <__cos+0x7dc>
    0.00 :	  18536:       cmp     r3, #1
    0.00 :	  18538:       beq.w   18688 <__cos+0x7dc>
    0.00 :	  1853c:       vldr    d0, [sp, #16]
    0.00 :	  18540:       vldr    d7, [pc, #-676] ; 182a0 <__cos+0x3f4>
    0.00 :	  18544:       vmul.f64        d6, d0, d0
    0.00 :	  18548:       vldr    d1, [sp, #24]
    0.00 :	  1854c:       vcmpe.f64       d6, d7
    0.00 :	  18550:       vmov.f64        d2, d8
    0.00 :	  18554:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18558:       bpl.w   186c4 <__cos+0x818>
    0.00 :	  1855c:       bl      16a80 <bsloww>
    0.00 :	  18560:       b.n     18022 <__cos+0x176>
    0.00 :	  18562:       vcmpe.f64       d10, #0.0
    0.00 :	  18566:       add     r1, sp, #24
    0.00 :	  18568:       vldr    d6, [pc, #-700] ; 182b0 <__cos+0x404>
    0.00 :	  1856c:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18570:       it      mi
    0.00 :	  18572:       vnegmi.f64      d10, d10
    0.00 :	  18576:       vadd.f64        d7, d10, d6
    0.00 :	  1857a:       vsub.f64        d6, d7, d6
    0.00 :	  1857e:       vmov    r0, s14
    0.00 :	  18582:       vsub.f64        d0, d10, d6
    0.00 :	  18586:       it      mi
    0.00 :	  18588:       vnegmi.f64      d9, d9
    0.00 :	  1858c:       vadd.f64        d0, d0, d9
    0.00 :	  18590:       bl      16c40 <do_cos.isra.0>
    0.00 :	  18594:       vldr    d6, [sp, #24]
    0.00 :	  18598:       vldr    d7, [pc, #-740] ; 182b8 <__cos+0x40c>
    0.00 :	  1859c:       vldr    d5, [pc, #-760] ; 182a8 <__cos+0x3fc>
    0.00 :	  185a0:       vcmpe.f64       d6, #0.0
    0.00 :	  185a4:       vmrs    APSR_nzcv, fpscr
    0.00 :	  185a8:       ite     gt
    0.00 :	  185aa:       vmlagt.f64      d7, d6, d5
    0.00 :	  185ae:       vnmlsle.f64     d7, d6, d5
    0.00 :	  185b2:       vstr    d7, [sp, #24]
    0.00 :	  185b6:       vadd.f64        d7, d0, d7
    0.00 :	  185ba:       vcmp.f64        d0, d7
    0.00 :	  185be:       vmrs    APSR_nzcv, fpscr
    0.00 :	  185c2:       bne.n   18674 <__cos+0x7c8>
    0.00 :	  185c4:       lsls    r3, r5, #30
    0.00 :	  185c6:       bpl.w   18022 <__cos+0x176>
    0.00 :	  185ca:       b.n     181f4 <__cos+0x348>
    0.00 :	  185cc:       vcmpe.f64       d10, #0.0
    0.00 :	  185d0:       vmrs    APSR_nzcv, fpscr
    0.00 :	  185d4:       ble.n   186ca <__cos+0x81e>
    0.00 :	  185d6:       vmov.f64        d1, d9
    0.00 :	  185da:       movs    r5, #1
    0.00 :	  185dc:       vmov.f64        d0, d10
    0.00 :	  185e0:       vldr    d6, [pc, #-820] ; 182b0 <__cos+0x404>
    0.00 :	  185e4:       add     r1, sp, #24
    0.00 :	  185e6:       vadd.f64        d7, d0, d6
    0.00 :	  185ea:       vsub.f64        d6, d7, d6
    0.00 :	  185ee:       vmov    r0, s14
    0.00 :	  185f2:       vsub.f64        d0, d0, d6
    0.00 :	  185f6:       bl      16fc0 <do_sin.isra.2>
    0.00 :	  185fa:       vldr    d6, [sp, #24]
    0.00 :	  185fe:       vldr    d7, [pc, #-840] ; 182b8 <__cos+0x40c>
    0.00 :	  18602:       vldr    d5, [pc, #-836] ; 182c0 <__cos+0x414>
    0.00 :	  18606:       vcmpe.f64       d6, #0.0
    0.00 :	  1860a:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1860e:       ite     gt
    0.00 :	  18610:       vmlagt.f64      d7, d6, d5
    0.00 :	  18614:       vnmlsle.f64     d7, d6, d5
    0.00 :	  18618:       vstr    d7, [sp, #24]
    0.00 :	  1861c:       vadd.f64        d7, d0, d7
    0.00 :	  18620:       vcmp.f64        d0, d7
    0.00 :	  18624:       vmrs    APSR_nzcv, fpscr
    0.00 :	  18628:       beq.w   1850a <__cos+0x65e>
    0.00 :	  1862c:       mov     r0, r7
    0.00 :	  1862e:       vmov.f64        d1, d9
    0.00 :	  18632:       vmov.f64        d0, d10
    0.00 :	  18636:       vmov.f64        d2, d8
    0.00 :	  1863a:       bl      17270 <bsloww1>
    0.00 :	  1863e:       b.n     18022 <__cos+0x176>
    0.00 :	  18640:       vneg.f64        d10, d10
    0.00 :	  18644:       vneg.f64        d9, d9
    0.00 :	  18648:       b.n     18366 <__cos+0x4ba>
    0.00 :	  1864a:       cmp     r5, #0
    0.00 :	  1864c:       bne.w   1841a <__cos+0x56e>
    0.00 :	  18650:       ldr     r3, [pc, #148]  ; (186e8 <__cos+0x83c>)
    0.00 :	  18652:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  18656:       movs    r1, #33 ; 0x21
    0.00 :	  18658:       add     r3, pc
    0.00 :	  1865a:       ldr     r3, [r3, #0]
    0.00 :	  1865c:       str     r1, [r2, r3]
    0.00 :	  1865e:       b.n     1841a <__cos+0x56e>
    0.00 :	  18660:       mov     r0, r5
    0.00 :	  18662:       vmov.f64        d1, d9
    0.00 :	  18666:       vmov.f64        d0, d10
    0.00 :	  1866a:       vmov.f64        d2, d8
    0.00 :	  1866e:       bl      16de8 <sloww2>
    0.00 :	  18672:       b.n     18022 <__cos+0x176>
    0.00 :	  18674:       mov     r0, r7
    0.00 :	  18676:       vmov.f64        d1, d9
    0.00 :	  1867a:       vmov.f64        d0, d10
    0.00 :	  1867e:       vmov.f64        d2, d8
    0.00 :	  18682:       bl      16ed0 <bsloww2>
    0.00 :	  18686:       b.n     18022 <__cos+0x176>
    0.00 :	  18688:       mov     r0, r2
    0.00 :	  1868a:       vmov.f64        d2, d8
    0.00 :	  1868e:       vldr    d1, [sp, #24]
    0.00 :	  18692:       vldr    d0, [sp, #16]
    0.00 :	  18696:       bl      16ed0 <bsloww2>
    0.00 :	  1869a:       b.n     18022 <__cos+0x176>
    0.00 :	  1869c:       vldr    d0, [sp, #16]
    0.00 :	  186a0:       vldr    d7, [pc, #60]   ; 186e0 <__cos+0x834>
    0.00 :	  186a4:       vmul.f64        d6, d0, d0
    0.00 :	  186a8:       vldr    d1, [sp, #24]
    0.00 :	  186ac:       vcmpe.f64       d6, d7
    0.00 :	  186b0:       vneg.f64        d0, d0
    0.00 :	  186b4:       vmrs    APSR_nzcv, fpscr
    0.00 :	  186b8:       vmov.f64        d2, d8
    0.00 :	  186bc:       vneg.f64        d1, d1
    0.00 :	  186c0:       bmi.w   1855c <__cos+0x6b0>
    0.00 :	  186c4:       bl      17270 <bsloww1>
    0.00 :	  186c8:       b.n     18022 <__cos+0x176>
    0.00 :	  186ca:       vneg.f64        d0, d10
    0.00 :	  186ce:       movs    r5, #0
    0.00 :	  186d0:       vneg.f64        d1, d9
    0.00 :	  186d4:       b.n     185e0 <__cos+0x734>
    0.00 :	  186d6:       vmov.f64        d0, #112        ; 0x3f800000  1.0
    0.00 :	  186da:       b.n     18028 <__cos+0x17c>
    0.00 :	  186dc:       nop.w
    0.00 :	  186e0:       .word   0xc2a454de
    0.00 :	  186e4:       .word   0x3f9042d8
    0.00 :	  186e8:       .word   0x000849c4
 Percent |	Source code & Disassembly of sg for cycles:ppp (16 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0001f2b0 <__libc_do_syscall>:
         :	__libc_do_syscall():
   12.50 :	  1f2b0:       push    {r7, lr}
    0.00 :	  1f2b2:       mov     r7, ip
    6.25 :	  1f2b4:       svc     0
   81.25 :	  1f2b6:       pop     {r7, pc}
 Percent |	Source code & Disassembly of sg for cycles:ppp (16 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000313c8 <__profil_counter>:
         :	__profil_counter():
   25.00 :	  313c8:       movw    r1, #58540      ; 0xe4ac
    0.00 :	  313cc:       movt    r1, #9
    0.00 :	  313d0:       ldr     r3, [r2, #92]   ; 0x5c
   25.00 :	  313d2:       push    {r4}
    0.00 :	  313d4:       ldmia.w r1, {r2, r4}
   12.50 :	  313d8:       ldr     r0, [r1, #8]
    0.00 :	  313da:       subs    r3, r3, r2
    0.00 :	  313dc:       add.w   r3, r3, r3, lsr #31
    0.00 :	  313e0:       asrs    r2, r3, #1
    0.00 :	  313e2:       umull   r2, r3, r2, r4
    6.25 :	  313e6:       lsrs    r2, r2, #16
    0.00 :	  313e8:       orr.w   r2, r2, r3, lsl #16
    0.00 :	  313ec:       cmp     r2, r0
    0.00 :	  313ee:       itttt   cc
    0.00 :	  313f0:       ldrcc   r1, [r1, #12]
    0.00 :	  313f2:       ldrhcc.w        r3, [r1, r2, lsl #1]
   12.50 :	  313f6:       addcc   r3, #1
    0.00 :	  313f8:       strhcc.w        r3, [r1, r2, lsl #1]
    0.00 :	  313fc:       ldr.w   r4, [sp], #4
   18.75 :	  31400:       bx      lr
 Percent |	Source code & Disassembly of sg for cycles:ppp (11 samples)
---------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000316b4 <__clock_gettime>:
         :	__clock_gettime():
   45.45 :	  316b4:       cmp     r0, #1
    0.00 :	  316b6:       movw    ip, #263        ; 0x107
    0.00 :	  316ba:       push    {lr}
    0.00 :	  316bc:       bhi.n   316cc <__clock_gettime+0x18>
    0.00 :	  316be:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  316c2:       cmn.w   r0, #4096       ; 0x1000
    0.00 :	  316c6:       bhi.n   316ea <__clock_gettime+0x36>
   18.18 :	  316c8:       ldr.w   pc, [sp], #4
   18.18 :	  316cc:       bl      1f2b0 <__libc_do_syscall>
   18.18 :	  316d0:       cmn.w   r0, #4096       ; 0x1000
    0.00 :	  316d4:       bls.n   316c8 <__clock_gettime+0x14>
    0.00 :	  316d6:       ldr     r3, [pc, #40]   ; (31700 <__clock_gettime+0x4c>)
    0.00 :	  316d8:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  316dc:       negs    r1, r0
    0.00 :	  316de:       mov.w   r0, #4294967295
    0.00 :	  316e2:       add     r3, pc
    0.00 :	  316e4:       ldr     r3, [r3, #0]
    0.00 :	  316e6:       str     r1, [r2, r3]
    0.00 :	  316e8:       b.n     316c8 <__clock_gettime+0x14>
    0.00 :	  316ea:       ldr     r3, [pc, #24]   ; (31704 <__clock_gettime+0x50>)
    0.00 :	  316ec:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  316f0:       negs    r1, r0
    0.00 :	  316f2:       mov.w   r0, #4294967295
    0.00 :	  316f6:       add     r3, pc
    0.00 :	  316f8:       ldr     r3, [r3, #0]
    0.00 :	  316fa:       str     r1, [r2, r3]
    0.00 :	  316fc:       ldr.w   pc, [sp], #4
    0.00 :	  31700:       .word   0x0006b97a
    0.00 :	  31704:       .word   0x0006b966
 Percent |	Source code & Disassembly of sg for cycles:ppp (6 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0003a370 <__default_rt_sa_restorer>:
         :	__default_rt_sa_restorer():
  100.00 :	  3a370:       mov.w   r7, #173        ; 0xad
    0.00 :	  3a374:       svc     0
 Percent |	Source code & Disassembly of sg for cycles:ppp (4 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00010e2c <Find_Nearest_Waypoint_validation>:
         :	Find_Nearest_Waypoint_validation():
         :	        *distance = d;
         :	        *bearing = b;
         :	        *name = (char * ) (waypoints[closest_i2].Name);
         :	}
         :	void Find_Nearest_Waypoint_validation(PT_T *ref, float * distance, float * bearing, 
         :	         char  * * name){
    0.00 :	  10e2c:       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    0.00 :	  10e30:       vpush   {d8-d9}
    0.00 :	  10e34:       sub     sp, #16
    0.00 :	  10e36:       push    {lr}
    0.00 :	  10e38:       bl      31520 <__gnu_mcount_nc>
    0.00 :	  10e3c:       mov     r8, r2
    0.00 :	  10e3e:       ldr     r2, [pc, #332]  ; (10f8c <Find_Nearest_Waypoint_validation+0x160>)
    0.00 :	  10e40:       mov     r9, r1
    0.00 :	  10e42:       ldr     r1, [pc, #332]  ; (10f90 <Find_Nearest_Waypoint_validation+0x164>)
    0.00 :	  10e44:       mov     r7, r3
    0.00 :	  10e46:       add     r2, pc
         :	  //PT_T ref;
         :	  float d, b, c, max_c=0, closest_d=1E10;
         :	  struct timespec prestart, start, end1, end2;
         :	  unsigned to;
         :
         :	  *distance = 0.0f;
    0.00 :	  10e48:       movs    r4, #0
         :	  *bearing = 0;
         :	  *name = '\0';
    0.00 :	  10e4a:       movs    r5, #0
         :	  *distance = 0.0f;
    0.00 :	  10e4c:       str.w   r4, [r9]
         :	  *bearing = 0;
    0.00 :	  10e50:       str.w   r4, [r8]
         :	  float d, b, c, max_c=0, closest_d=1E10;
    0.00 :	  10e54:       vmov    s19, r4
         :	  *name = '\0';
    0.00 :	  10e58:       str     r5, [r7, #0]
         :	  int i=0, closest_i=0;
    0.00 :	  10e5a:       mov     r6, r5
    0.00 :	  10e5c:       ldr.w   sl, [r2, r1]
         :	         char  * * name){
    0.00 :	  10e60:       mov     r3, r2
    0.00 :	  10e62:       vldr    s17, [r0, #4]
    0.00 :	  10e66:       mov     r4, sl
    0.00 :	  10e68:       vldr    s16, [r0, #8]
    0.00 :	  10e6c:       vldr    s18, [r0, #12]
         :
         :	  while (strcmp(waypoints[i].Name, "END")) {
    0.00 :	  10e70:       ldrb    r3, [r4, #16]
   25.00 :	  10e72:       cmp     r3, #69 ; 0x45
    0.00 :	  10e74:       bne.n   10f30 <Find_Nearest_Waypoint_validation+0x104>
    0.00 :	  10e76:       ldrb    r3, [r4, #17]
    0.00 :	  10e78:       cmp     r3, #78 ; 0x4e
    0.00 :	  10e7a:       bne.n   10f30 <Find_Nearest_Waypoint_validation+0x104>
    0.00 :	  10e7c:       ldrb    r3, [r4, #18]
    0.00 :	  10e7e:       cmp     r3, #68 ; 0x44
    0.00 :	  10e80:       bne.n   10f30 <Find_Nearest_Waypoint_validation+0x104>
    0.00 :	  10e82:       ldrb    r3, [r4, #19]
    0.00 :	  10e84:       cmp     r3, #0
    0.00 :	  10e86:       bne.n   10f30 <Find_Nearest_Waypoint_validation+0x104>
         :	  printf("Start to End 1: %d\t", end1.tv_nsec - start.tv_nsec - to);
         :	  printf("Start to End 2: %d\n", end2.tv_nsec - start.tv_nsec - to);
         :	*/
         :	  // Finish calcuations for the closest point
         :
         :	d = acos(max_c)*6371; // finish distance calcuation
    0.00 :	  10e88:       vcvt.f64.f32    d0, s19
         :	Calc_Bearing_validation():
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10e8c:       movs    r4, #48 ; 0x30
         :	Find_Nearest_Waypoint_validation():
         :	d = acos(max_c)*6371; // finish distance calcuation
    0.00 :	  10e8e:       bl      126d4 <__acos_finite>
         :	Calc_Bearing_validation():
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10e92:       mla     r4, r4, r6, sl
         :	Find_Nearest_Waypoint_validation():
         :	d = acos(max_c)*6371; // finish distance calcuation
    0.00 :	  10e96:       vldr    d16, [pc, #224] ; 10f78 <Find_Nearest_Waypoint_validation+0x14c>
    0.00 :	  10e9a:       mov     r1, sp
    0.00 :	  10e9c:       add     r0, sp, #8
         :	Calc_Bearing_validation():
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10e9e:       vldr    s15, [r4, #12]
    0.00 :	  10ea2:       vsub.f32        s18, s18, s15
         :	Find_Nearest_Waypoint_validation():
         :	d = acos(max_c)*6371; // finish distance calcuation
    0.00 :	  10ea6:       vmul.f64        d16, d0, d16
    0.00 :	  10eaa:       vcvt.f64.f32    d0, s18
    0.00 :	  10eae:       vcvt.f32.f64    s18, d16
    0.00 :	  10eb2:       bl      192f8 <__sincos>
         :	Calc_Bearing_validation():
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10eb6:       vldr    s15, [r4, #8]
         :	  term2 = p1->CosLat*p2->SinLat -
    0.00 :	  10eba:       vldr    s2, [r4, #4]
         :	    p1->SinLat*p2->CosLat*cos(p1->Lon - p2->Lon);
    0.00 :	  10ebe:       vmul.f32        s17, s15, s17
    0.00 :	  10ec2:       vldr    d17, [sp]
    0.00 :	  10ec6:       vldr    d0, [sp, #8]
         :	  term2 = p1->CosLat*p2->SinLat -
    0.00 :	  10eca:       vmul.f32        s2, s16, s2
         :	    p1->SinLat*p2->CosLat*cos(p1->Lon - p2->Lon);
    0.00 :	  10ece:       vcvt.f64.f32    d16, s17
         :	  term2 = p1->CosLat*p2->SinLat -
    0.00 :	  10ed2:       vcvt.f64.f32    d1, s2
    0.00 :	  10ed6:       vmls.f64        d1, d16, d17
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10eda:       vcvt.f64.f32    d16, s15
    0.00 :	  10ede:       vmul.f64        d0, d0, d16
         :	  term2 = p1->CosLat*p2->SinLat -
    0.00 :	  10ee2:       vcvt.f32.f64    s2, d1
         :	  term1 = sin(p1->Lon - p2->Lon)*p2->CosLat;
    0.00 :	  10ee6:       vcvt.f32.f64    s0, d0
         :	  angle = atan2(term1, term2) * (180/PI);
    0.00 :	  10eea:       vcvt.f64.f32    d1, s2
    0.00 :	  10eee:       vcvt.f64.f32    d0, s0
    0.00 :	  10ef2:       bl      137d8 <__atan2_finite>
    0.00 :	  10ef6:       vldr    d16, [pc, #136] ; 10f80 <Find_Nearest_Waypoint_validation+0x154>
         :	Find_Nearest_Waypoint_validation():
         :	b = Calc_Bearing_validation(ref, &(waypoints[closest_i]) );
         :	 // return information to calling function about closest waypoint 
         :	  *distance = d;
         :	  *bearing = b;
         :	  *name = (char * ) (waypoints[closest_i].Name);
    0.00 :	  10efa:       movs    r3, #48 ; 0x30
    0.00 :	  10efc:       mla     r6, r3, r6, sl
         :	  *distance = d;
    0.00 :	  10f00:       vstr    s18, [r9]
         :	  *name = (char * ) (waypoints[closest_i].Name);
    0.00 :	  10f04:       adds    r6, #16
         :	Calc_Bearing_validation():
         :	  angle = atan2(term1, term2) * (180/PI);
    0.00 :	  10f06:       vmul.f64        d0, d0, d16
    0.00 :	  10f0a:       vcvt.f32.f64    s0, d0
         :	  if (angle < 0.0)
    0.00 :	  10f0e:       vcmpe.f32       s0, #0.0
    0.00 :	  10f12:       vmrs    APSR_nzcv, fpscr
         :	    angle += 360;
    0.00 :	  10f16:       itt     mi
    0.00 :	  10f18:       vldrmi  s15, [pc, #108] ; 10f88 <Find_Nearest_Waypoint_validation+0x15c>
    0.00 :	  10f1c:       vaddmi.f32      s0, s0, s15
         :	Find_Nearest_Waypoint_validation():
         :	  *bearing = b;
    0.00 :	  10f20:       vstr    s0, [r8]
         :	  *name = (char * ) (waypoints[closest_i].Name);
    0.00 :	  10f24:       str     r6, [r7, #0]
    0.00 :	  10f26:       add     sp, #16
    0.00 :	  10f28:       vpop    {d8-d9}
    0.00 :	  10f2c:       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
         :	Calc_Closeness_validation():
         :	    cos(p2->Lon - p1->Lon);
    0.00 :	  10f30:       vldr    s0, [r4, #12]
    0.00 :	  10f34:       adds    r4, #48 ; 0x30
    0.00 :	  10f36:       vsub.f32        s0, s0, s18
    0.00 :	  10f3a:       vcvt.f64.f32    d0, s0
    0.00 :	  10f3e:       bl      17eac <__cos>
         :	    p1->CosLat * p2->CosLat*
    0.00 :	  10f42:       vldr    s14, [r4, #-40] ; 0xffffffd8
         :	  return p1->SinLat * p2->SinLat +
    0.00 :	  10f46:       vldr    s15, [r4, #-44] ; 0xffffffd4
         :	    p1->CosLat * p2->CosLat*
    0.00 :	  10f4a:       vmul.f32        s14, s16, s14
         :	  return p1->SinLat * p2->SinLat +
    0.00 :	  10f4e:       vmul.f32        s15, s17, s15
         :	    p1->CosLat * p2->CosLat*
    0.00 :	  10f52:       vcvt.f64.f32    d17, s14
         :	  return p1->SinLat * p2->SinLat +
    0.00 :	  10f56:       vcvt.f64.f32    d16, s15
    0.00 :	  10f5a:       vmla.f64        d16, d17, d0
    0.00 :	  10f5e:       vcvt.f32.f64    s15, d16
         :	Find_Nearest_Waypoint_validation():
         :	      closest_i = i;
    0.00 :	  10f62:       vcmpe.f32       s19, s15
    0.00 :	  10f66:       vmrs    APSR_nzcv, fpscr
   75.00 :	  10f6a:       it      mi
    0.00 :	  10f6c:       movmi   r6, r5
    0.00 :	  10f6e:       it      mi
    0.00 :	  10f70:       vmovmi.f32      s19, s15
         :	   i++;
    0.00 :	  10f74:       adds    r5, #1
    0.00 :	  10f76:       b.n     10e70 <Find_Nearest_Waypoint_validation+0x44>
    0.00 :	  10f78:       .word   0x00000000
    0.00 :	  10f7c:       .word   0x40b8e300
    0.00 :	  10f80:       .word   0x00000000
    0.00 :	  10f84:       .word   0x404ca5dc
    0.00 :	  10f88:       .word   0x43b40000
    0.00 :	  10f8c:       .word   0x0008c1b6
    0.00 :	  10f90:       .word   0x00000050
 Percent |	Source code & Disassembly of sg for cycles:ppp (3 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00030ec4 <write_gmon>:
         :	write_gmon():
    0.00 :	  30ec4:       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    0.00 :	  30ec8:       sub.w   sp, sp, #956    ; 0x3bc
    0.00 :	  30ecc:       movw    r0, #35136      ; 0x8940
    0.00 :	  30ed0:       add     r7, sp, #8
    0.00 :	  30ed2:       movt    r0, #7
    0.00 :	  30ed6:       bl      228f8 <getenv>
    0.00 :	  30eda:       cbz     r0, 30eec <write_gmon+0x28>
    0.00 :	  30edc:       movw    r2, #53212      ; 0xcfdc
    0.00 :	  30ee0:       movt    r2, #9
    0.00 :	  30ee4:       ldr     r2, [r2, #0]
    0.00 :	  30ee6:       cmp     r2, #0
    0.00 :	  30ee8:       beq.w   3115e <write_gmon+0x29a>
    0.00 :	  30eec:       movw    r0, #35160      ; 0x8958
    0.00 :	  30ef0:       movw    r1, #33345      ; 0x8241
    0.00 :	  30ef4:       movt    r0, #7
    0.00 :	  30ef8:       mov.w   r2, #438        ; 0x1b6
    0.00 :	  30efc:       mov.w   ip, #5
    0.00 :	  30f00:       bl      1f2b0 <__libc_do_syscall>
   33.33 :	  30f04:       cmn.w   r0, #4096       ; 0x1000
    0.00 :	  30f08:       str     r0, [r7, #12]
    0.00 :	  30f0a:       bhi.w   311b0 <write_gmon+0x2ec>
    0.00 :	  30f0e:       ldr     r3, [r7, #12]
    0.00 :	  30f10:       cmp     r3, #0
    0.00 :	  30f12:       blt.w   311fe <write_gmon+0x33a>
    0.00 :	  30f16:       movs    r2, #1
    0.00 :	  30f18:       movw    r3, #28007      ; 0x6d67
    0.00 :	  30f1c:       str     r2, [r7, #32]
    0.00 :	  30f1e:       movt    r3, #28271      ; 0x6e6f
    0.00 :	  30f22:       add.w   r1, r7, #28
    0.00 :	  30f26:       str     r3, [r7, #28]
    0.00 :	  30f28:       ldr     r0, [r7, #12]
    0.00 :	  30f2a:       movs    r3, #0
    0.00 :	  30f2c:       movs    r2, #20
    0.00 :	  30f2e:       str     r3, [r7, #36]   ; 0x24
    0.00 :	  30f30:       str     r3, [r7, #40]   ; 0x28
    0.00 :	  30f32:       mov.w   ip, #4
    0.00 :	  30f36:       str     r3, [r7, #44]   ; 0x2c
    0.00 :	  30f38:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  30f3c:       cmn.w   r0, #4096       ; 0x1000
    0.00 :	  30f40:       bhi.w   311dc <write_gmon+0x318>
    0.00 :	  30f44:       movw    r8, #55688      ; 0xd988
    0.00 :	  30f48:       movt    r8, #9
    0.00 :	  30f4c:       movs    r3, #0
    0.00 :	  30f4e:       strb    r3, [r7, #24]
    0.00 :	  30f50:       ldr.w   r0, [r8, #8]
    0.00 :	  30f54:       cmp     r0, #0
    0.00 :	  30f56:       bne.w   310ee <write_gmon+0x22a>
    0.00 :	  30f5a:       add.w   r5, r7, #432    ; 0x1b0
    0.00 :	  30f5e:       add.w   r3, r7, #48     ; 0x30
    0.00 :	  30f62:       str     r3, [r7, #4]
    0.00 :	  30f64:       ldr     r2, [r7, #4]
    0.00 :	  30f66:       movs    r6, #1
    0.00 :	  30f68:       add.w   r0, r7, #944    ; 0x3b0
    0.00 :	  30f6c:       mov     r3, r5
    0.00 :	  30f6e:       mov     r4, r6
    0.00 :	  30f70:       movs    r1, #12
    0.00 :	  30f72:       strb    r6, [r7, #24]
    0.00 :	  30f74:       str     r2, [r3, #8]
    0.00 :	  30f76:       add.w   r6, r7, #24
    0.00 :	  30f7a:       str     r4, [r3, #4]
    0.00 :	  30f7c:       adds    r3, #16
    0.00 :	  30f7e:       str.w   r6, [r3, #-16]
    0.00 :	  30f82:       adds    r2, #12
    0.00 :	  30f84:       str.w   r1, [r3, #-4]
    0.00 :	  30f88:       cmp     r0, r3
    0.00 :	  30f8a:       bne.n   30f74 <write_gmon+0xb0>
    0.00 :	  30f8c:       ldr.w   r3, [r8, #16]
    0.00 :	  30f90:       lsrs    r3, r3, #2
    0.00 :	  30f92:       str     r3, [r7, #0]
    0.00 :	  30f94:       beq.n   31026 <write_gmon+0x162>
    0.00 :	  30f96:       str     r5, [r7, #8]
    0.00 :	  30f98:       movs    r2, #0
    0.00 :	  30f9a:       ldr     r5, [r7, #4]
    0.00 :	  30f9c:       movs    r4, #12
    0.00 :	  30f9e:       mov     fp, r2
    0.00 :	  30fa0:       ldr.w   r3, [r8, #12]
   33.33 :	  30fa4:       ldr.w   r3, [r3, fp, lsl #2]
    0.00 :	  30fa8:       cbz     r3, 3100a <write_gmon+0x146>
    0.00 :	  30faa:       ldr.w   r1, [r8, #44]   ; 0x2c
    0.00 :	  30fae:       ldr.w   r0, [r8, #32]
    0.00 :	  30fb2:       ldr.w   ip, [r8, #20]
    0.00 :	  30fb6:       lsls    r6, r1, #2
    0.00 :	  30fb8:       mla     r6, fp, r6, r0
    0.00 :	  30fbc:       b.n     30fc2 <write_gmon+0xfe>
    0.00 :	  30fbe:       ldr     r3, [r1, #8]
    0.00 :	  30fc0:       cbz     r3, 3100a <write_gmon+0x146>
    0.00 :	  30fc2:       mul.w   r3, r4, r3
    0.00 :	  30fc6:       mul.w   lr, r4, r2
    0.00 :	  30fca:       adds    r2, #1
    0.00 :	  30fcc:       add.w   r1, ip, r3
    0.00 :	  30fd0:       cmp     r2, #32
    0.00 :	  30fd2:       ldr.w   sl, [ip, r3]
    0.00 :	  30fd6:       add.w   r0, r5, lr
    0.00 :	  30fda:       ldr.w   r9, [r1, #4]
    0.00 :	  30fde:       str.w   r6, [r5, lr]
    0.00 :	  30fe2:       str.w   sl, [r0, #4]
    0.00 :	  30fe6:       str.w   r9, [r0, #8]
    0.00 :	  30fea:       bne.n   30fbe <write_gmon+0xfa>
    0.00 :	  30fec:       ldr     r0, [r7, #12]
    0.00 :	  30fee:       movs    r2, #64 ; 0x40
    0.00 :	  30ff0:       ldr     r1, [r7, #8]
    0.00 :	  30ff2:       mov.w   ip, #146        ; 0x92
    0.00 :	  30ff6:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  30ffa:       ldr.w   ip, [r8, #20]
    0.00 :	  30ffe:       movs    r2, #0
    0.00 :	  31000:       add.w   r1, ip, r3
    0.00 :	  31004:       ldr     r3, [r1, #8]
    0.00 :	  31006:       cmp     r3, #0
    0.00 :	  31008:       bne.n   30fc2 <write_gmon+0xfe>
    0.00 :	  3100a:       ldr     r3, [r7, #0]
   33.33 :	  3100c:       add.w   fp, fp, #1
    0.00 :	  31010:       cmp     r3, fp
    0.00 :	  31012:       bne.n   30fa0 <write_gmon+0xdc>
    0.00 :	  31014:       ldr     r5, [r7, #8]
    0.00 :	  31016:       cbz     r2, 31026 <write_gmon+0x162>
    0.00 :	  31018:       lsls    r2, r2, #1
    0.00 :	  3101a:       ldr     r0, [r7, #12]
    0.00 :	  3101c:       mov     r1, r5
    0.00 :	  3101e:       mov.w   ip, #146        ; 0x92
    0.00 :	  31022:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  31026:       movw    r3, #62240      ; 0xf320
    0.00 :	  3102a:       movt    r3, #9
    0.00 :	  3102e:       ldr     r0, [r7, #4]
    0.00 :	  31030:       add.w   r2, r7, #23
    0.00 :	  31034:       ldr.w   r8, [r3]
    0.00 :	  31038:       add.w   r4, r7, #24
    0.00 :	  3103c:       movs    r3, #2
    0.00 :	  3103e:       movs    r1, #1
    0.00 :	  31040:       strb    r3, [r7, #23]
    0.00 :	  31042:       movs    r3, #4
    0.00 :	  31044:       str     r4, [r0, #8]
    0.00 :	  31046:       str     r2, [r0, #0]
    0.00 :	  31048:       str     r1, [r0, #4]
    0.00 :	  3104a:       str     r3, [r0, #12]
    0.00 :	  3104c:       str     r3, [r5, #4]
    0.00 :	  3104e:       str     r3, [r5, #12]
    0.00 :	  31050:       str     r3, [r5, #20]
    0.00 :	  31052:       str     r3, [r5, #28]
    0.00 :	  31054:       str     r3, [r5, #36]   ; 0x24
    0.00 :	  31056:       str     r3, [r5, #44]   ; 0x2c
    0.00 :	  31058:       str     r3, [r5, #52]   ; 0x34
    0.00 :	  3105a:       str     r3, [r5, #60]   ; 0x3c
    0.00 :	  3105c:       cmp.w   r8, #0
    0.00 :	  31060:       beq.n   310da <write_gmon+0x216>
    0.00 :	  31062:       ldr.w   r3, [r8, #12]
    0.00 :	  31066:       movs    r2, #2
    0.00 :	  31068:       ldr     r0, [r7, #12]
    0.00 :	  3106a:       mov.w   ip, #146        ; 0x92
    0.00 :	  3106e:       ldr     r1, [r7, #4]
    0.00 :	  31070:       str     r3, [r7, #24]
    0.00 :	  31072:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  31076:       ldr.w   lr, [r7, #24]
    0.00 :	  3107a:       cmp.w   lr, #0
    0.00 :	  3107e:       beq.n   310d0 <write_gmon+0x20c>
    0.00 :	  31080:       ldr.w   sl, [r8, #20]
    0.00 :	  31084:       movs    r4, #0
    0.00 :	  31086:       ldr.w   r9, [r8, #8]
    0.00 :	  3108a:       mov     r3, r4
    0.00 :	  3108c:       lsls    r2, r4, #2
    0.00 :	  3108e:       adds    r4, #1
    0.00 :	  31090:       adds    r6, r3, #1
    0.00 :	  31092:       add.w   fp, sl, r2
    0.00 :	  31096:       cmp     r4, lr
    0.00 :	  31098:       str.w   fp, [r5, r3, lsl #3]
    0.00 :	  3109c:       add.w   r3, r3, #2
    0.00 :	  310a0:       add     r2, r9
    0.00 :	  310a2:       ldr     r0, [r7, #12]
    0.00 :	  310a4:       mov     r1, r5
    0.00 :	  310a6:       str.w   r2, [r5, r6, lsl #3]
    0.00 :	  310aa:       mov.w   ip, #146        ; 0x92
    0.00 :	  310ae:       mov     r2, r3
    0.00 :	  310b0:       bcs.n   310ca <write_gmon+0x206>
    0.00 :	  310b2:       cmp     r3, #6
    0.00 :	  310b4:       bls.n   3108c <write_gmon+0x1c8>
    0.00 :	  310b6:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  310ba:       movs    r3, #0
    0.00 :	  310bc:       ldr.w   sl, [r8, #20]
    0.00 :	  310c0:       ldr.w   r9, [r8, #8]
    0.00 :	  310c4:       ldr.w   lr, [r7, #24]
    0.00 :	  310c8:       b.n     3108c <write_gmon+0x1c8>
    0.00 :	  310ca:       cbz     r3, 310d0 <write_gmon+0x20c>
    0.00 :	  310cc:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  310d0:       ldr.w   r8, [r8, #16]
    0.00 :	  310d4:       cmp.w   r8, #0
    0.00 :	  310d8:       bne.n   31062 <write_gmon+0x19e>
    0.00 :	  310da:       ldr     r0, [r7, #12]
    0.00 :	  310dc:       mov.w   ip, #6
    0.00 :	  310e0:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  310e4:       add.w   r7, r7, #948    ; 0x3b4
    0.00 :	  310e8:       mov     sp, r7
    0.00 :	  310ea:       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    0.00 :	  310ee:       ldr.w   r1, [r8, #4]
    0.00 :	  310f2:       add.w   r3, r7, #48     ; 0x30
    0.00 :	  310f6:       ldr.w   r2, [r8, #32]
    0.00 :	  310fa:       add.w   r5, r7, #432    ; 0x1b0
    0.00 :	  310fe:       mov     r6, r3
    0.00 :	  31100:       str     r6, [r7, #4]
    0.00 :	  31102:       str     r1, [r6, #16]
    0.00 :	  31104:       movs    r6, #1
    0.00 :	  31106:       ldr     r1, [r7, #4]
    0.00 :	  31108:       lsrs    r4, r0, #1
    0.00 :	  3110a:       ldr.w   r3, [r8, #36]   ; 0x24
    0.00 :	  3110e:       str     r4, [r5, #8]
    0.00 :	  31110:       mov     lr, r1
    0.00 :	  31112:       add.w   r1, r7, #24
    0.00 :	  31116:       str.w   r6, [lr, #4]
    0.00 :	  3111a:       mov     r6, lr
    0.00 :	  3111c:       str.w   r1, [lr]
    0.00 :	  31120:       movs    r1, #32
    0.00 :	  31122:       str.w   r0, [lr, #20]
    0.00 :	  31126:       str.w   r1, [lr, #12]
    0.00 :	  3112a:       str.w   r5, [lr, #8]
    0.00 :	  3112e:       stmia.w r5, {r2, r3}
    0.00 :	  31132:       bl      31508 <__profile_frequency>
    0.00 :	  31136:       movs    r2, #15
    0.00 :	  31138:       movw    r1, #35200      ; 0x8980
    0.00 :	  3113c:       movt    r1, #7
    0.00 :	  31140:       str     r0, [r5, #12]
    0.00 :	  31142:       add.w   r0, r7, #448    ; 0x1c0
    0.00 :	  31146:       bl      46ef4 <strncpy>
    0.00 :	  3114a:       movs    r3, #115        ; 0x73
    0.00 :	  3114c:       mov     r1, r6
    0.00 :	  3114e:       strb    r3, [r5, #31]
    0.00 :	  31150:       ldr     r0, [r7, #12]
    0.00 :	  31152:       movs    r2, #3
    0.00 :	  31154:       mov.w   ip, #146        ; 0x92
    0.00 :	  31158:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  3115c:       b.n     30f64 <write_gmon+0xa0>
    0.00 :	  3115e:       mov     r4, r0
    0.00 :	  31160:       bl      2d040 <strlen>
    0.00 :	  31164:       mov     r6, sp
    0.00 :	  31166:       add.w   r3, r0, #27
    0.00 :	  3116a:       add.w   r5, r0, #20
    0.00 :	  3116e:       bic.w   r3, r3, #7
    0.00 :	  31172:       sub.w   sp, sp, r3
    0.00 :	  31176:       bl      49ca0 <__getpid>
    0.00 :	  3117a:       add.w   r8, sp, #8
    0.00 :	  3117e:       mov     r1, r5
    0.00 :	  31180:       mov     r3, r4
    0.00 :	  31182:       movw    r2, #35152      ; 0x8950
    0.00 :	  31186:       movt    r2, #7
    0.00 :	  3118a:       str     r0, [sp, #0]
    0.00 :	  3118c:       mov     r0, r8
    0.00 :	  3118e:       bl      415c8 <__snprintf>
    0.00 :	  31192:       mov     r0, r8
    0.00 :	  31194:       movw    r1, #33345      ; 0x8241
    0.00 :	  31198:       mov.w   r2, #438        ; 0x1b6
    0.00 :	  3119c:       mov.w   ip, #5
    0.00 :	  311a0:       bl      1f2b0 <__libc_do_syscall>
    0.00 :	  311a4:       cmn.w   r0, #4096       ; 0x1000
    0.00 :	  311a8:       str     r0, [r7, #12]
    0.00 :	  311aa:       bhi.n   311ec <write_gmon+0x328>
    0.00 :	  311ac:       mov     sp, r6
    0.00 :	  311ae:       b.n     30f16 <write_gmon+0x52>
    0.00 :	  311b0:       ldr     r3, [pc, #88]   ; (3120c <write_gmon+0x348>)
    0.00 :	  311b2:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  311b6:       negs    r0, r0
    0.00 :	  311b8:       add     r3, pc
    0.00 :	  311ba:       ldr     r3, [r3, #0]
    0.00 :	  311bc:       str     r0, [r2, r3]
    0.00 :	  311be:       add.w   r1, r7, #432    ; 0x1b0
    0.00 :	  311c2:       mov.w   r2, #300        ; 0x12c
    0.00 :	  311c6:       bl      46d5c <__strerror_r>
    0.00 :	  311ca:       movw    r1, #35172      ; 0x8964
    0.00 :	  311ce:       movt    r1, #7
    0.00 :	  311d2:       mov     r2, r0
    0.00 :	  311d4:       movs    r0, #0
    0.00 :	  311d6:       bl      2310c <__fxprintf>
    0.00 :	  311da:       b.n     310e4 <write_gmon+0x220>
    0.00 :	  311dc:       ldr     r3, [pc, #48]   ; (31210 <write_gmon+0x34c>)
    0.00 :	  311de:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  311e2:       negs    r0, r0
    0.00 :	  311e4:       add     r3, pc
    0.00 :	  311e6:       ldr     r3, [r3, #0]
    0.00 :	  311e8:       str     r0, [r2, r3]
    0.00 :	  311ea:       b.n     30f44 <write_gmon+0x80>
    0.00 :	  311ec:       ldr     r3, [pc, #36]   ; (31214 <write_gmon+0x350>)
    0.00 :	  311ee:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  311f2:       negs    r1, r0
    0.00 :	  311f4:       add     r3, pc
    0.00 :	  311f6:       ldr     r3, [r3, #0]
    0.00 :	  311f8:       str     r1, [r2, r3]
    0.00 :	  311fa:       mov     sp, r6
    0.00 :	  311fc:       b.n     30eec <write_gmon+0x28>
    0.00 :	  311fe:       ldr     r3, [pc, #24]   ; (31218 <write_gmon+0x354>)
    0.00 :	  31200:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  31204:       add     r3, pc
    0.00 :	  31206:       ldr     r3, [r3, #0]
    0.00 :	  31208:       ldr     r0, [r2, r3]
    0.00 :	  3120a:       b.n     311be <write_gmon+0x2fa>
    0.00 :	  3120c:       .word   0x0006bea4
    0.00 :	  31210:       .word   0x0006be78
    0.00 :	  31214:       .word   0x0006be68
    0.00 :	  31218:       .word   0x0006be58
 Percent |	Source code & Disassembly of sg for cycles:ppp (2 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00016fc0 <do_sin.isra.2>:
         :	do_sin.isra.2():
    0.00 :	  16fc0:       vmul.f64        d5, d0, d0
    0.00 :	  16fc4:       lsls    r2, r0, #2
    0.00 :	  16fc6:       push    {r4, r5}
    0.00 :	  16fc8:       movw    r3, #24752      ; 0x60b0
    0.00 :	  16fcc:       vpush   {d8-d11}
    0.00 :	  16fd0:       movt    r3, #7
   50.00 :	  16fd4:       add.w   r5, r3, r2, lsl #3
    0.00 :	  16fd8:       add.w   r0, r3, r0, lsl #5
    0.00 :	  16fdc:       vldr    d9, [pc, #104]  ; 17048 <do_sin.isra.2+0x88>
    0.00 :	  16fe0:       vldr    d2, [pc, #108]  ; 17050 <do_sin.isra.2+0x90>
    0.00 :	  16fe4:       vldr    d10, [pc, #112] ; 17058 <do_sin.isra.2+0x98>
    0.00 :	  16fe8:       vldr    d3, [pc, #116]  ; 17060 <do_sin.isra.2+0xa0>
    0.00 :	  16fec:       vnmls.f64       d2, d5, d9
    0.00 :	  16ff0:       vldr    d8, [r5, #24]
    0.00 :	  16ff4:       vldr    d7, [r5, #8]
    0.00 :	  16ff8:       vldr    d6, [r0]
    0.00 :	  16ffc:       vldr    d11, [r5, #16]
    0.00 :	  17000:       vmul.f64        d9, d0, d5
    0.00 :	  17004:       vnmls.f64       d3, d5, d10
    0.00 :	  17008:       vmov.f64        d10, d1
    0.00 :	  1700c:       vmov.f64        d4, #96 ; 0x3f000000  0.5
    0.00 :	  17010:       vmla.f64        d10, d2, d9
    0.00 :	  17014:       vmla.f64        d4, d3, d5
    0.00 :	  17018:       vmul.f64        d1, d0, d1
    0.00 :	  1701c:       vadd.f64        d0, d10, d0
    0.00 :	  17020:       vmla.f64        d1, d4, d5
    0.00 :	  17024:       vmla.f64        d7, d0, d8
    0.00 :	  17028:       vmls.f64        d7, d1, d6
    0.00 :	  1702c:       vmla.f64        d7, d0, d11
    0.00 :	  17030:       vpop    {d8-d11}
   50.00 :	  17034:       pop     {r4, r5}
    0.00 :	  17036:       vadd.f64        d0, d6, d7
    0.00 :	  1703a:       vsub.f64        d6, d6, d0
    0.00 :	  1703e:       vadd.f64        d7, d6, d7
    0.00 :	  17042:       vstr    d7, [r1]
    0.00 :	  17046:       bx      lr
    0.00 :	  17048:       .word   0xe829872f
    0.00 :	  1704c:       .word   0x3f811110
    0.00 :	  17050:       .word   0x55555515
    0.00 :	  17054:       .word   0x3fc55555
    0.00 :	  17058:       .word   0xedd9e239
    0.00 :	  1705c:       .word   0x3f56c16b
    0.00 :	  17060:       .word   0x55555535
    0.00 :	  17064:       .word   0x3fa55555
 Percent |	Source code & Disassembly of ip_tables.ko for cycles:ppp (1 samples)
------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00000188 <ipt_do_table>:
         :	ipt_do_table():
    0.00 :	  188:       mov     ip, sp
    0.00 :	  18c:       push    {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    0.00 :	  190:       sub     fp, ip, #4
    0.00 :	  194:       sub     sp, sp, #196    ; 0xc4
    0.00 :	  198:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  19c:       bl      0 <__gnu_mcount_nc>
    0.00 :	  1a0:       movw    r3, #0
    0.00 :	  1a4:       movt    r3, #0
    0.00 :	  1a8:       mov     r7, r1
    0.00 :	  1ac:       ldrh    lr, [r0, #160]  ; 0xa0
    0.00 :	  1b0:       ldr     r4, [r0, #172]  ; 0xac
    0.00 :	  1b4:       movw    r1, #0
    0.00 :	  1b8:       ldr     r6, [r3]
    0.00 :	  1bc:       movt    r1, #0
    0.00 :	  1c0:       str     r3, [fp, #-124] ; 0xffffff84
    0.00 :	  1c4:       add     r5, r4, lr
    0.00 :	  1c8:       ldr     r3, [r7]
    0.00 :	  1cc:       mov     r9, r0
    0.00 :	  1d0:       ldr     ip, [r7, #12]
    0.00 :	  1d4:       mov     r0, #512        ; 0x200
    0.00 :	  1d8:       str     r2, [fp, #-116] ; 0xffffff8c
    0.00 :	  1dc:       mov     r8, r3
    0.00 :	  1e0:       str     r3, [fp, #-112] ; 0xffffff90
    0.00 :	  1e4:       ldrh    r3, [r5, #6]
    0.00 :	  1e8:       cmp     ip, #0
  100.00 :	  1ec:       ldr     r2, [r7, #16]
    0.00 :	  1f0:       rev16   r3, r3
    0.00 :	  1f4:       movne   sl, ip
    0.00 :	  1f8:       ubfx    r3, r3, #0, #13
    0.00 :	  1fc:       str     r3, [fp, #-64]  ; 0xffffffc0
    0.00 :	  200:       ldrb    r3, [r4, lr]
    0.00 :	  204:       moveq   sl, r1
    0.00 :	  208:       ldr     lr, [r7, #24]
    0.00 :	  20c:       cmp     r2, #0
    0.00 :	  210:       and     r3, r3, #15
    0.00 :	  214:       str     r6, [fp, #-48]  ; 0xffffffd0
    0.00 :	  218:       movne   r1, r2
    0.00 :	  21c:       str     r8, [fp, #-56]  ; 0xffffffc8
    0.00 :	  220:       str     r1, [fp, #-88]  ; 0xffffffa8
    0.00 :	  224:       lsl     r3, r3, #2
    0.00 :	  228:       mov     r1, #0
    0.00 :	  22c:       str     r3, [fp, #-60]  ; 0xffffffc4
    0.00 :	  230:       str     ip, [fp, #-72]  ; 0xffffffb8
    0.00 :	  234:       mov     r3, #2
    0.00 :	  238:       str     r2, [fp, #-68]  ; 0xffffffbc
    0.00 :	  23c:       str     lr, [fp, #-76]  ; 0xffffffb4
    0.00 :	  240:       strb    r1, [fp, #-51]  ; 0xffffffcd
    0.00 :	  244:       strb    r3, [fp, #-52]  ; 0xffffffcc
    0.00 :	  248:       bl      0 <preempt_count_add>
    0.00 :	  24c:       movw    r0, #0
    0.00 :	  250:       movt    r0, #0
    0.00 :	  254:       movw    r4, #0
    0.00 :	  258:       movt    r4, #0
    0.00 :	  25c:       str     r4, [fp, #-128] ; 0xffffff80
    0.00 :	  260:       bl      0 <__this_cpu_preempt_check>
    0.00 :	  264:       mrc     15, 0, r3, cr13, cr0, {4}
    0.00 :	  268:       ldr     r3, [r3, r4]
    0.00 :	  26c:       movw    r0, #0
    0.00 :	  270:       movt    r0, #0
    0.00 :	  274:       add     r3, r3, #1
    0.00 :	  278:       and     r3, r3, #1
    0.00 :	  27c:       str     r3, [fp, #-120] ; 0xffffff88
    0.00 :	  280:       mov     r6, r3
    0.00 :	  284:       bl      0 <__this_cpu_preempt_check>
    0.00 :	  288:       mrc     15, 0, r2, cr13, cr0, {4}
    0.00 :	  28c:       ldr     r3, [r4, r2]
    0.00 :	  290:       add     r3, r3, r6
    0.00 :	  294:       str     r3, [r4, r2]
    0.00 :	  298:       dmb     ishst
    0.00 :	  29c:       ldr     r3, [fp, #-116] ; 0xffffff8c
    0.00 :	  2a0:       ldr     r4, [r3, #12]
    0.00 :	  2a4:       str     r4, [fp, #-96]  ; 0xffffffa0
    0.00 :	  2a8:       bl      0 <debug_smp_processor_id>
    0.00 :	  2ac:       ldr     r3, [r4, #56]   ; 0x38
    0.00 :	  2b0:       add     r2, r4, #64     ; 0x40
    0.00 :	  2b4:       str     r2, [fp, #-100] ; 0xffffff9c
    0.00 :	  2b8:       ldr     r3, [r3, r0, lsl #2]
    0.00 :	  2bc:       str     r3, [fp, #-108] ; 0xffffff94
    0.00 :	  2c0:       nop     {0}
    0.00 :	  2c4:       ldr     r3, [fp, #-112] ; 0xffffff90
    0.00 :	  2c8:       movw    r2, #0
    0.00 :	  2cc:       ldr     r1, [fp, #-96]  ; 0xffffffa0
    0.00 :	  2d0:       movt    r2, #0
    0.00 :	  2d4:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  2d8:       mov     r8, r5
    0.00 :	  2dc:       lsl     r3, r3, #2
    0.00 :	  2e0:       str     r7, [fp, #-156] ; 0xffffff64
    0.00 :	  2e4:       add     r1, r1, r3
    0.00 :	  2e8:       add     r3, r2, r3
    0.00 :	  2ec:       movw    r2, #0
    0.00 :	  2f0:       movt    r2, #0
    0.00 :	  2f4:       ldr     r4, [r1, #12]
    0.00 :	  2f8:       str     r2, [fp, #-104] ; 0xffffff98
    0.00 :	  2fc:       ldr     r2, [fp, #-100] ; 0xffffff9c
    0.00 :	  300:       str     r1, [fp, #-136] ; 0xffffff78
    0.00 :	  304:       movw    r1, #0
    0.00 :	  308:       str     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  30c:       add     r4, r2, r4
    0.00 :	  310:       mov     r3, #0
    0.00 :	  314:       movt    r1, #0
    0.00 :	  318:       movw    r2, #0
    0.00 :	  31c:       str     r3, [fp, #-132] ; 0xffffff7c
    0.00 :	  320:       movt    r2, #0
    0.00 :	  324:       str     r1, [fp, #-148] ; 0xffffff6c
    0.00 :	  328:       str     r2, [fp, #-152] ; 0xffffff68
    0.00 :	  32c:       str     r3, [fp, #-92]  ; 0xffffffa4
    0.00 :	  330:       b       348 <ipt_do_table+0x1c0>
    0.00 :	  334:       ldrh    r3, [r4, #90]   ; 0x5a
    0.00 :	  338:       add     r4, r4, r3
    0.00 :	  33c:       ldrb    r3, [fp, #-51]  ; 0xffffffcd
    0.00 :	  340:       cmp     r3, #0
    0.00 :	  344:       bne     5dc <ipt_do_table+0x454>
    0.00 :	  348:       ldr     r3, [r8, #12]
    0.00 :	  34c:       ldr     r0, [r4, #8]
    0.00 :	  350:       ldr     r1, [r4]
    0.00 :	  354:       ldrb    r2, [r4, #83]   ; 0x53
    0.00 :	  358:       and     r3, r3, r0
    0.00 :	  35c:       subs    r3, r3, r1
    0.00 :	  360:       ubfx    r1, r2, #3, #1
    0.00 :	  364:       movne   r3, #1
    0.00 :	  368:       cmp     r3, r1
    0.00 :	  36c:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  370:       ldr     r3, [r8, #16]
    0.00 :	  374:       ubfx    r1, r2, #4, #1
    0.00 :	  378:       ldr     ip, [r4, #12]
    0.00 :	  37c:       ldr     r0, [r4, #4]
    0.00 :	  380:       and     r3, r3, ip
    0.00 :	  384:       subs    r3, r3, r0
    0.00 :	  388:       movne   r3, #1
    0.00 :	  38c:       cmp     r3, r1
    0.00 :	  390:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  394:       ldr     r3, [r4, #16]
    0.00 :	  398:       and     ip, r2, #1
    0.00 :	  39c:       ldr     lr, [sl]
    0.00 :	  3a0:       ldr     r5, [r4, #20]
    0.00 :	  3a4:       ldr     r1, [sl, #4]
    0.00 :	  3a8:       eor     lr, lr, r3
    0.00 :	  3ac:       ldr     r0, [r4, #52]   ; 0x34
    0.00 :	  3b0:       ldr     r3, [r4, #48]   ; 0x30
    0.00 :	  3b4:       eor     r1, r1, r5
    0.00 :	  3b8:       and     r1, r1, r0
    0.00 :	  3bc:       ldr     r0, [r4, #24]
    0.00 :	  3c0:       and     lr, lr, r3
    0.00 :	  3c4:       ldr     r3, [sl, #8]
    0.00 :	  3c8:       orr     r1, r1, lr
    0.00 :	  3cc:       ldr     lr, [r4, #56]   ; 0x38
    0.00 :	  3d0:       eor     r3, r3, r0
    0.00 :	  3d4:       ldr     r0, [sl, #12]
    0.00 :	  3d8:       and     r3, r3, lr
    0.00 :	  3dc:       ldr     lr, [r4, #28]
    0.00 :	  3e0:       ldr     r5, [r4, #60]   ; 0x3c
    0.00 :	  3e4:       orr     r3, r3, r1
    0.00 :	  3e8:       eor     r1, r0, lr
    0.00 :	  3ec:       and     r1, r1, r5
    0.00 :	  3f0:       orrs    r3, r1, r3
    0.00 :	  3f4:       movne   r3, #1
    0.00 :	  3f8:       moveq   r3, #0
    0.00 :	  3fc:       cmp     r3, ip
    0.00 :	  400:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  404:       ldr     r3, [fp, #-88]  ; 0xffffffa8
    0.00 :	  408:       ubfx    ip, r2, #1, #1
    0.00 :	  40c:       ldr     r1, [fp, #-88]  ; 0xffffffa8
    0.00 :	  410:       ldr     r5, [r4, #36]   ; 0x24
    0.00 :	  414:       ldr     lr, [r3]
    0.00 :	  418:       ldr     r3, [r4, #32]
    0.00 :	  41c:       ldr     r1, [r1, #4]
    0.00 :	  420:       eor     lr, lr, r3
    0.00 :	  424:       ldr     r3, [r4, #64]   ; 0x40
    0.00 :	  428:       ldr     r0, [r4, #68]   ; 0x44
    0.00 :	  42c:       eor     r1, r1, r5
    0.00 :	  430:       and     lr, lr, r3
    0.00 :	  434:       ldr     r3, [fp, #-88]  ; 0xffffffa8
    0.00 :	  438:       and     r1, r1, r0
    0.00 :	  43c:       ldr     r0, [r4, #40]   ; 0x28
    0.00 :	  440:       orr     r1, r1, lr
    0.00 :	  444:       ldr     lr, [r4, #72]   ; 0x48
    0.00 :	  448:       ldr     r3, [r3, #8]
    0.00 :	  44c:       ldr     r5, [r4, #76]   ; 0x4c
    0.00 :	  450:       eor     r3, r3, r0
    0.00 :	  454:       ldr     r0, [fp, #-88]  ; 0xffffffa8
    0.00 :	  458:       and     r3, r3, lr
    0.00 :	  45c:       ldr     lr, [r4, #44]   ; 0x2c
    0.00 :	  460:       orr     r3, r3, r1
    0.00 :	  464:       ldr     r0, [r0, #12]
    0.00 :	  468:       eor     r1, r0, lr
    0.00 :	  46c:       and     r1, r1, r5
    0.00 :	  470:       orrs    r3, r1, r3
    0.00 :	  474:       movne   r3, #1
    0.00 :	  478:       moveq   r3, #0
    0.00 :	  47c:       cmp     r3, ip
    0.00 :	  480:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  484:       ldrh    r3, [r4, #80]   ; 0x50
    0.00 :	  488:       cmp     r3, #0
    0.00 :	  48c:       beq     4a8 <ipt_do_table+0x320>
    0.00 :	  490:       ldrb    r0, [r8, #9]
    0.00 :	  494:       ubfx    r1, r2, #6, #1
    0.00 :	  498:       subs    r0, r0, r3
    0.00 :	  49c:       movne   r0, #1
    0.00 :	  4a0:       cmp     r0, r1
    0.00 :	  4a4:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  4a8:       ldr     r1, [fp, #-64]  ; 0xffffffc0
    0.00 :	  4ac:       ldrb    r3, [r4, #82]   ; 0x52
    0.00 :	  4b0:       cmp     r1, #0
    0.00 :	  4b4:       movne   r3, #0
    0.00 :	  4b8:       andeq   r3, r3, #1
    0.00 :	  4bc:       cmp     r3, #0
    0.00 :	  4c0:       beq     848 <ipt_do_table+0x6c0>
    0.00 :	  4c4:       tst     r2, #32
    0.00 :	  4c8:       beq     334 <ipt_do_table+0x1ac>
    0.00 :	  4cc:       ldrh    r3, [r4, #88]   ; 0x58
    0.00 :	  4d0:       add     r5, r4, #112    ; 0x70
    0.00 :	  4d4:       add     r3, r4, r3
    0.00 :	  4d8:       cmp     r5, r3
    0.00 :	  4dc:       ldrcc   r7, [fp, #-88]  ; 0xffffffa8
    0.00 :	  4e0:       bcs     528 <ipt_do_table+0x3a0>
    0.00 :	  4e4:       ldr     r3, [r5, #4]
    0.00 :	  4e8:       add     r2, r5, #32
    0.00 :	  4ec:       sub     r1, fp, #84     ; 0x54
    0.00 :	  4f0:       str     r2, [fp, #-80]  ; 0xffffffb0
    0.00 :	  4f4:       mov     r0, r9
    0.00 :	  4f8:       str     r3, [fp, #-84]  ; 0xffffffac
    0.00 :	  4fc:       ldr     r3, [r3, #40]   ; 0x28
    0.00 :	  500:       blx     r3
    0.00 :	  504:       cmp     r0, #0
    0.00 :	  508:       beq     674 <ipt_do_table+0x4ec>
    0.00 :	  50c:       ldrh    r2, [r5]
    0.00 :	  510:       ldrh    r3, [r4, #88]   ; 0x58
    0.00 :	  514:       add     r5, r5, r2
    0.00 :	  518:       add     r3, r4, r3
    0.00 :	  51c:       cmp     r5, r3
    0.00 :	  520:       bcc     4e4 <ipt_do_table+0x35c>
    0.00 :	  524:       str     r7, [fp, #-88]  ; 0xffffffa8
    0.00 :	  528:       ldr     r3, [fp, #-104] ; 0xffffff98
    0.00 :	  52c:       ldr     r3, [r3]
    0.00 :	  530:       cmp     r3, #1
    0.00 :	  534:       ble     67c <ipt_do_table+0x4f4>
    0.00 :	  538:       ldr     r1, [r4, #96]   ; 0x60
    0.00 :	  53c:       mov     r5, r1
    0.00 :	  540:       bl      0 <debug_smp_processor_id>
    0.00 :	  544:       movw    r3, #0
    0.00 :	  548:       movt    r3, #0
    0.00 :	  54c:       ldr     r1, [r3, r0, lsl #2]
    0.00 :	  550:       add     r1, r5, r1
    0.00 :	  554:       ldrd    r2, [r1, #8]
    0.00 :	  558:       ldr     r0, [r9, #92]   ; 0x5c
    0.00 :	  55c:       adds    r6, r2, r0
    0.00 :	  560:       adc     r7, r3, #0
    0.00 :	  564:       mov     r2, r6
    0.00 :	  568:       mov     r3, r7
    0.00 :	  56c:       strd    r2, [r1, #8]
    0.00 :	  570:       ldrd    r2, [r1]
    0.00 :	  574:       adds    r2, r2, #1
    0.00 :	  578:       adc     r3, r3, #0
    0.00 :	  57c:       strd    r2, [r1]
    0.00 :	  580:       ldrb    r2, [r9, #109]  ; 0x6d
    0.00 :	  584:       ldrh    r3, [r4, #88]   ; 0x58
    0.00 :	  588:       tst     r2, #1
    0.00 :	  58c:       add     r6, r4, r3
    0.00 :	  590:       bne     6d8 <ipt_do_table+0x550>
    0.00 :	  594:       ldr     r3, [r6, #4]
    0.00 :	  598:       ldr     r2, [r3, #40]   ; 0x28
    0.00 :	  59c:       cmp     r2, #0
    0.00 :	  5a0:       beq     684 <ipt_do_table+0x4fc>
    0.00 :	  5a4:       add     r2, r6, #32
    0.00 :	  5a8:       str     r2, [fp, #-80]  ; 0xffffffb0
    0.00 :	  5ac:       ldr     r2, [r6, #4]
    0.00 :	  5b0:       sub     r1, fp, #84     ; 0x54
    0.00 :	  5b4:       str     r3, [fp, #-84]  ; 0xffffffac
    0.00 :	  5b8:       mov     r0, r9
    0.00 :	  5bc:       ldr     r3, [r2, #40]   ; 0x28
    0.00 :	  5c0:       blx     r3
    0.00 :	  5c4:       ldrh    r3, [r9, #160]  ; 0xa0
    0.00 :	  5c8:       ldr     r8, [r9, #172]  ; 0xac
    0.00 :	  5cc:       add     r8, r8, r3
    0.00 :	  5d0:       cmn     r0, #1
    0.00 :	  5d4:       str     r0, [fp, #-92]  ; 0xffffffa4
    0.00 :	  5d8:       beq     334 <ipt_do_table+0x1ac>
    0.00 :	  5dc:       dmb     ishst
    0.00 :	  5e0:       movw    r0, #0
    0.00 :	  5e4:       movt    r0, #0
    0.00 :	  5e8:       bl      0 <__this_cpu_preempt_check>
    0.00 :	  5ec:       ldr     r3, [fp, #-128] ; 0xffffff80
    0.00 :	  5f0:       mrc     15, 0, ip, cr13, cr0, {4}
    0.00 :	  5f4:       ldr     lr, [fp, #-120] ; 0xffffff88
    0.00 :	  5f8:       mov     r1, #512        ; 0x200
    0.00 :	  5fc:       ldr     r2, [r3, ip]
    0.00 :	  600:       ldr     r0, [pc, #804]  ; 92c <ipt_do_table+0x7a4>
    0.00 :	  604:       add     r2, r2, lr
    0.00 :	  608:       str     r2, [r3, ip]
    0.00 :	  60c:       bl      0 <__local_bh_enable_ip>
    0.00 :	  610:       ldr     r3, [fp, #-124] ; 0xffffff84
    0.00 :	  614:       ldrb    r1, [fp, #-51]  ; 0xffffffcd
    0.00 :	  618:       ldr     r2, [fp, #-48]  ; 0xffffffd0
    0.00 :	  61c:       cmp     r1, #0
    0.00 :	  620:       ldr     r3, [r3]
    0.00 :	  624:       ldr     r0, [fp, #-92]  ; 0xffffffa4
    0.00 :	  628:       movne   r0, #0
    0.00 :	  62c:       cmp     r2, r3
    0.00 :	  630:       bne     928 <ipt_do_table+0x7a0>
    0.00 :	  634:       sub     sp, fp, #40     ; 0x28
    0.00 :	  638:       ldm     sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    0.00 :	  63c:       ldr     r3, [fp, #-96]  ; 0xffffffa0
    0.00 :	  640:       movw    r0, #0
    0.00 :	  644:       movt    r0, #0
    0.00 :	  648:       ldr     r4, [r3, #52]   ; 0x34
    0.00 :	  64c:       bl      0 <__this_cpu_preempt_check>
    0.00 :	  650:       movw    r3, #0
    0.00 :	  654:       movt    r3, #0
    0.00 :	  658:       mrc     15, 0, r2, cr13, cr0, {4}
    0.00 :	  65c:       ldrb    r3, [r3, r2]
    0.00 :	  660:       lsl     r4, r4, #2
    0.00 :	  664:       ldr     r2, [fp, #-108] ; 0xffffff94
    0.00 :	  668:       mla     r3, r4, r3, r2
    0.00 :	  66c:       str     r3, [fp, #-108] ; 0xffffff94
    0.00 :	  670:       b       2c4 <ipt_do_table+0x13c>
    0.00 :	  674:       str     r7, [fp, #-88]  ; 0xffffffa8
    0.00 :	  678:       b       334 <ipt_do_table+0x1ac>
    0.00 :	  67c:       add     r1, r4, #96     ; 0x60
    0.00 :	  680:       b       554 <ipt_do_table+0x3cc>
    0.00 :	  684:       ldr     r3, [r6, #32]
    0.00 :	  688:       cmp     r3, #0
    0.00 :	  68c:       blt     7ac <ipt_do_table+0x624>
    0.00 :	  690:       ldrh    r2, [r4, #90]   ; 0x5a
    0.00 :	  694:       ldr     r1, [fp, #-100] ; 0xffffff9c
    0.00 :	  698:       add     r2, r4, r2
    0.00 :	  69c:       add     r3, r1, r3
    0.00 :	  6a0:       cmp     r3, r2
    0.00 :	  6a4:       beq     6d0 <ipt_do_table+0x548>
    0.00 :	  6a8:       ldrb    r2, [r4, #82]   ; 0x52
    0.00 :	  6ac:       tst     r2, #2
    0.00 :	  6b0:       bne     6d0 <ipt_do_table+0x548>
    0.00 :	  6b4:       ldr     r2, [fp, #-132] ; 0xffffff7c
    0.00 :	  6b8:       ldr     r1, [fp, #-108] ; 0xffffff94
    0.00 :	  6bc:       str     r4, [r1, r2, lsl #2]
    0.00 :	  6c0:       add     r2, r2, #1
    0.00 :	  6c4:       mov     r4, r3
    0.00 :	  6c8:       str     r2, [fp, #-132] ; 0xffffff7c
    0.00 :	  6cc:       b       33c <ipt_do_table+0x1b4>
    0.00 :	  6d0:       mov     r4, r3
    0.00 :	  6d4:       b       33c <ipt_do_table+0x1b4>
    0.00 :	  6d8:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  6dc:       ldr     r2, [fp, #-156] ; 0xffffff64
    0.00 :	  6e0:       ldr     r1, [fp, #-100] ; 0xffffff9c
    0.00 :	  6e4:       ldr     r5, [r3, #12]
    0.00 :	  6e8:       ldr     r3, [fp, #-116] ; 0xffffff8c
    0.00 :	  6ec:       add     r5, r1, r5
    0.00 :	  6f0:       ldr     r0, [r2, #24]
    0.00 :	  6f4:       add     r3, r3, #32
    0.00 :	  6f8:       str     r3, [fp, #-196] ; 0xffffff3c
    0.00 :	  6fc:       ldr     r3, [fp, #-96]  ; 0xffffffa0
    0.00 :	  700:       str     r0, [fp, #-184] ; 0xffffff48
    0.00 :	  704:       ldr     r3, [r3]
    0.00 :	  708:       add     r3, r1, r3
    0.00 :	  70c:       ldr     r1, [r2, #12]
    0.00 :	  710:       ldr     r2, [r2, #16]
    0.00 :	  714:       cmp     r5, r3
    0.00 :	  718:       str     r1, [fp, #-188] ; 0xffffff44
    0.00 :	  71c:       str     r2, [fp, #-192] ; 0xffffff40
    0.00 :	  720:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  724:       ldr     r2, [r2, #32]
    0.00 :	  728:       str     r2, [fp, #-200] ; 0xffffff38
    0.00 :	  72c:       bcs     90c <ipt_do_table+0x784>
    0.00 :	  730:       str     r2, [fp, #-160] ; 0xffffff60
    0.00 :	  734:       mov     r2, #0
    0.00 :	  738:       str     r8, [fp, #-168] ; 0xffffff58
    0.00 :	  73c:       mov     r7, r2
    0.00 :	  740:       str     sl, [fp, #-172] ; 0xffffff54
    0.00 :	  744:       mov     sl, r3
    0.00 :	  748:       str     r4, [fp, #-164] ; 0xffffff5c
    0.00 :	  74c:       str     r6, [fp, #-176] ; 0xffffff50
    0.00 :	  750:       str     r9, [fp, #-180] ; 0xffffff4c
    0.00 :	  754:       ldr     r8, [fp, #-140] ; 0xffffff74
    0.00 :	  758:       b       778 <ipt_do_table+0x5f0>
    0.00 :	  75c:       mov     r7, r0
    0.00 :	  760:       add     r3, r4, #32
    0.00 :	  764:       str     r3, [fp, #-160] ; 0xffffff60
    0.00 :	  768:       ldrh    r3, [r5, #90]   ; 0x5a
    0.00 :	  76c:       add     r5, r5, r3
    0.00 :	  770:       cmp     r5, sl
    0.00 :	  774:       bcs     854 <ipt_do_table+0x6cc>
    0.00 :	  778:       ldrh    r9, [r5, #88]   ; 0x58
    0.00 :	  77c:       mov     r1, r8
    0.00 :	  780:       add     r4, r5, r9
    0.00 :	  784:       ldr     r6, [r4, #4]
    0.00 :	  788:       add     r0, r6, #8
    0.00 :	  78c:       bl      0 <strcmp>
    0.00 :	  790:       cmp     r0, #0
    0.00 :	  794:       beq     75c <ipt_do_table+0x5d4>
    0.00 :	  798:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  79c:       cmp     r3, r5
    0.00 :	  7a0:       beq     7c0 <ipt_do_table+0x638>
    0.00 :	  7a4:       add     r7, r7, #1
    0.00 :	  7a8:       b       768 <ipt_do_table+0x5e0>
    0.00 :	  7ac:       cmn     r3, #5
    0.00 :	  7b0:       beq     878 <ipt_do_table+0x6f0>
    0.00 :	  7b4:       mvn     r3, r3
    0.00 :	  7b8:       str     r3, [fp, #-92]  ; 0xffffffa4
    0.00 :	  7bc:       b       5dc <ipt_do_table+0x454>
    0.00 :	  7c0:       mov     r2, r9
    0.00 :	  7c4:       cmp     r2, #112        ; 0x70
    0.00 :	  7c8:       add     r2, r7, #1
    0.00 :	  7cc:       mov     r3, r4
    0.00 :	  7d0:       ldr     r8, [fp, #-168] ; 0xffffff58
    0.00 :	  7d4:       ldr     r4, [fp, #-164] ; 0xffffff5c
    0.00 :	  7d8:       mov     r5, r2
    0.00 :	  7dc:       str     r6, [fp, #-164] ; 0xffffff5c
    0.00 :	  7e0:       ldr     sl, [fp, #-172] ; 0xffffff54
    0.00 :	  7e4:       ldr     r6, [fp, #-176] ; 0xffffff50
    0.00 :	  7e8:       ldr     r9, [fp, #-180] ; 0xffffff4c
    0.00 :	  7ec:       beq     8ac <ipt_do_table+0x724>
    0.00 :	  7f0:       movw    r3, #0
    0.00 :	  7f4:       movt    r3, #0
    0.00 :	  7f8:       ldr     ip, [fp, #-148] ; 0xffffff6c
    0.00 :	  7fc:       ldr     r2, [fp, #-160] ; 0xffffff60
    0.00 :	  800:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  804:       str     ip, [sp, #12]
    0.00 :	  808:       ldr     ip, [fp, #-152] ; 0xffffff68
    0.00 :	  80c:       str     r5, [sp, #28]
    0.00 :	  810:       ldr     r0, [fp, #-184] ; 0xffffff48
    0.00 :	  814:       str     ip, [sp, #8]
    0.00 :	  818:       ldr     ip, [fp, #-192] ; 0xffffff40
    0.00 :	  81c:       str     r3, [sp, #24]
    0.00 :	  820:       mov     r3, r9
    0.00 :	  824:       str     r2, [sp, #20]
    0.00 :	  828:       str     ip, [sp, #4]
    0.00 :	  82c:       ldr     ip, [fp, #-188] ; 0xffffff44
    0.00 :	  830:       ldr     r2, [fp, #-112] ; 0xffffff90
    0.00 :	  834:       str     r1, [sp, #16]
    0.00 :	  838:       mov     r1, #2
    0.00 :	  83c:       str     ip, [sp]
    0.00 :	  840:       bl      0 <nf_log_trace>
    0.00 :	  844:       b       594 <ipt_do_table+0x40c>
    0.00 :	  848:       tst     r2, #32
    0.00 :	  84c:       bne     334 <ipt_do_table+0x1ac>
    0.00 :	  850:       b       4cc <ipt_do_table+0x344>
    0.00 :	  854:       movw    r3, #0
    0.00 :	  858:       ldr     r8, [fp, #-168] ; 0xffffff58
    0.00 :	  85c:       ldr     r4, [fp, #-164] ; 0xffffff5c
    0.00 :	  860:       mov     r5, r7
    0.00 :	  864:       ldr     sl, [fp, #-172] ; 0xffffff54
    0.00 :	  868:       movt    r3, #0
    0.00 :	  86c:       ldr     r6, [fp, #-176] ; 0xffffff50
    0.00 :	  870:       ldr     r9, [fp, #-180] ; 0xffffff4c
    0.00 :	  874:       b       7f8 <ipt_do_table+0x670>
    0.00 :	  878:       ldr     r3, [fp, #-132] ; 0xffffff7c
    0.00 :	  87c:       cmp     r3, #0
    0.00 :	  880:       ldrne   r3, [fp, #-132] ; 0xffffff7c
    0.00 :	  884:       ldrne   r2, [fp, #-108] ; 0xffffff94
    0.00 :	  888:       subne   r3, r3, #1
    0.00 :	  88c:       ldreq   r3, [fp, #-136] ; 0xffffff78
    0.00 :	  890:       strne   r3, [fp, #-132] ; 0xffffff7c
    0.00 :	  894:       ldrne   r4, [r2, r3, lsl #2]
    0.00 :	  898:       ldreq   r4, [r3, #32]
    0.00 :	  89c:       ldreq   r3, [fp, #-100] ; 0xffffff9c
    0.00 :	  8a0:       ldrhne  r3, [r4, #90]   ; 0x5a
    0.00 :	  8a4:       add     r4, r4, r3
    0.00 :	  8a8:       b       33c <ipt_do_table+0x1b4>
    0.00 :	  8ac:       mov     r2, #84 ; 0x54
    0.00 :	  8b0:       ldr     r1, [pc, #120]  ; 930 <ipt_do_table+0x7a8>
    0.00 :	  8b4:       mov     r0, r4
    0.00 :	  8b8:       str     r3, [fp, #-168] ; 0xffffff58
    0.00 :	  8bc:       bl      0 <memcmp>
    0.00 :	  8c0:       ldr     r3, [fp, #-168] ; 0xffffff58
    0.00 :	  8c4:       cmp     r0, #0
    0.00 :	  8c8:       bne     7f0 <ipt_do_table+0x668>
    0.00 :	  8cc:       ldr     r2, [fp, #-164] ; 0xffffff5c
    0.00 :	  8d0:       ldrb    r2, [r2, #8]
    0.00 :	  8d4:       cmp     r2, #0
    0.00 :	  8d8:       bne     7f0 <ipt_do_table+0x668>
    0.00 :	  8dc:       ldr     r3, [r3, #32]
    0.00 :	  8e0:       cmp     r3, #0
    0.00 :	  8e4:       bge     7f0 <ipt_do_table+0x668>
    0.00 :	  8e8:       ldr     r1, [fp, #-200] ; 0xffffff38
    0.00 :	  8ec:       movw    r2, #0
    0.00 :	  8f0:       ldr     r0, [fp, #-160] ; 0xffffff60
    0.00 :	  8f4:       movt    r2, #0
    0.00 :	  8f8:       movw    r3, #0
    0.00 :	  8fc:       movt    r3, #0
    0.00 :	  900:       cmp     r1, r0
    0.00 :	  904:       movne   r3, r2
    0.00 :	  908:       b       7f8 <ipt_do_table+0x670>
    0.00 :	  90c:       ldr     r3, [fp, #-200] ; 0xffffff38
    0.00 :	  910:       mov     r2, #0
    0.00 :	  914:       mov     r5, r2
    0.00 :	  918:       str     r3, [fp, #-160] ; 0xffffff60
    0.00 :	  91c:       movw    r3, #0
    0.00 :	  920:       movt    r3, #0
    0.00 :	  924:       b       7f8 <ipt_do_table+0x670>
    0.00 :	  928:       bl      0 <__stack_chk_fail>
    0.00 :	  92c:       .word   0x000005dc
    0.00 :	  930:       .word   0x00000010
 Percent |	Source code & Disassembly of nf_conntrack.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00001c0c <__nf_conntrack_find_get>:
         :	__nf_conntrack_find_get():
    0.00 :	  1c0c:       mov     ip, sp
    0.00 :	  1c10:       push    {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    0.00 :	  1c14:       sub     fp, ip, #4
    0.00 :	  1c18:       sub     sp, sp, #20
    0.00 :	  1c1c:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  1c20:       bl      0 <__gnu_mcount_nc>
    0.00 :	  1c24:       movw    r9, #0
    0.00 :	  1c28:       movt    r9, #0
    0.00 :	  1c2c:       mov     sl, r1
    0.00 :	  1c30:       str     r3, [fp, #-60]  ; 0xffffffc4
    0.00 :	  1c34:       str     r0, [fp, #-56]  ; 0xffffffc8
    0.00 :	  1c38:       mov     r5, r2
    0.00 :	  1c3c:       movw    r7, #0
    0.00 :	  1c40:       bl      0 <__rcu_read_lock>
    0.00 :	  1c44:       movt    r7, #0
    0.00 :	  1c48:       mov     r3, r9
    0.00 :	  1c4c:       mov     r9, sl
    0.00 :	  1c50:       mov     sl, r3
    0.00 :	  1c54:       mov     r8, #1
    0.00 :	  1c58:       ldr     r1, [r7, #20]
    0.00 :	  1c5c:       tst     r1, #1
    0.00 :	  1c60:       bne     1d40 <__nf_conntrack_find_get+0x134>
    0.00 :	  1c64:       dmb     ish
    0.00 :	  1c68:       ldr     r6, [r7, #24]
    0.00 :	  1c6c:       ldr     ip, [r7]
    0.00 :	  1c70:       dmb     ish
    0.00 :	  1c74:       ldr     r0, [r7, #20]
    0.00 :	  1c78:       cmp     r0, r1
    0.00 :	  1c7c:       bne     1c58 <__nf_conntrack_find_get+0x4c>
    0.00 :	  1c80:       ldr     r3, [fp, #-60]  ; 0xffffffc4
    0.00 :	  1c84:       umull   r2, r3, r6, r3
    0.00 :	  1c88:       strd    r2, [fp, #-52]  ; 0xffffffcc
    0.00 :	  1c8c:       lsl     r1, r3, #2
    0.00 :	  1c90:       ldr     r4, [ip, r1]
    0.00 :	  1c94:       tst     r4, #1
    0.00 :	  1c98:       beq     1cc8 <__nf_conntrack_find_get+0xbc>
    0.00 :	  1c9c:       b       1d00 <__nf_conntrack_find_get+0xf4>
    0.00 :	  1ca0:       ldr     r2, [r0, #112]  ; 0x70
    0.00 :	  1ca4:       tst     r2, #512        ; 0x200
    0.00 :	  1ca8:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1cac:       ldr     r1, [r5]
    0.00 :	  1cb0:       ldr     r2, [r4, #8]
    0.00 :	  1cb4:       cmp     r1, r2
    0.00 :	  1cb8:       beq     1d44 <__nf_conntrack_find_get+0x138>
    0.00 :	  1cbc:       ldr     r4, [r4]
    0.00 :	  1cc0:       tst     r4, #1
    0.00 :	  1cc4:       bne     1d00 <__nf_conntrack_find_get+0xf4>
    0.00 :	  1cc8:       ldrb    r3, [r4, #47]   ; 0x2f
    0.00 :	  1ccc:       ldr     r1, [sl]
    0.00 :	  1cd0:       add     r0, r3, r3, lsl #1
    0.00 :	  1cd4:       lsl     r0, r0, #4
    0.00 :	  1cd8:       add     r0, r0, #16
    0.00 :	  1cdc:       sub     r0, r4, r0
    0.00 :	  1ce0:       ldr     r2, [r0, #116]  ; 0x74
    0.00 :	  1ce4:       sub     r2, r2, r1
    0.00 :	  1ce8:       cmp     r2, #0
    0.00 :	  1cec:       bgt     1ca0 <__nf_conntrack_find_get+0x94>
    0.00 :	  1cf0:       bl      1b34 <nf_ct_gc_expired>
    0.00 :	  1cf4:       ldr     r4, [r4]
    0.00 :	  1cf8:       tst     r4, #1
    0.00 :	  1cfc:       beq     1cc8 <__nf_conntrack_find_get+0xbc>
    0.00 :	  1d00:       ldr     r3, [fp, #-48]  ; 0xffffffd0
    0.00 :	  1d04:       cmp     r3, r4, lsr #1
    0.00 :	  1d08:       beq     1eb4 <__nf_conntrack_find_get+0x2a8>
    0.00 :	  1d0c:       mrs     lr, CPSR
    0.00 :	  1d10:       cpsid   i
    0.00 :	  1d14:       ldr     r3, [fp, #-56]  ; 0xffffffc8
    0.00 :	  1d18:       mrc     15, 0, ip, cr13, cr0, {4}
    0.00 :	  1d1c:       ldr     r1, [r3, #2416] ; 0x970
    0.00 :	  1d20:       add     r1, r1, #44     ; 0x2c
    0.00 :	  1d24:       ldr     r0, [r1, ip]
    0.00 :	  1d28:       add     r0, r0, #1
    0.00 :	  1d2c:       str     r0, [r1, ip]
    0.00 :	  1d30:       msr     CPSR_c, lr
    0.00 :	  1d34:       ldr     r1, [r7, #20]
    0.00 :	  1d38:       tst     r1, #1
    0.00 :	  1d3c:       beq     1c64 <__nf_conntrack_find_get+0x58>
    0.00 :	  1d40:       b       1c58 <__nf_conntrack_find_get+0x4c>
  100.00 :	  1d44:       ldr     r1, [r5, #4]
    0.00 :	  1d48:       ldr     r2, [r4, #12]
    0.00 :	  1d4c:       cmp     r1, r2
    0.00 :	  1d50:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1d54:       ldr     r1, [r5, #8]
    0.00 :	  1d58:       ldr     r2, [r4, #16]
    0.00 :	  1d5c:       cmp     r1, r2
    0.00 :	  1d60:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1d64:       ldr     r1, [r5, #12]
    0.00 :	  1d68:       ldr     r2, [r4, #20]
    0.00 :	  1d6c:       cmp     r1, r2
    0.00 :	  1d70:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1d74:       ldr     r1, [r5, #16]
    0.00 :	  1d78:       ldr     r2, [r4, #24]
    0.00 :	  1d7c:       cmp     r1, r2
    0.00 :	  1d80:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1d84:       ldr     r1, [r5, #20]
    0.00 :	  1d88:       ldr     r2, [r4, #28]
    0.00 :	  1d8c:       cmp     r1, r2
    0.00 :	  1d90:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1d94:       ldr     r1, [r5, #24]
    0.00 :	  1d98:       ldr     r2, [r4, #32]
    0.00 :	  1d9c:       cmp     r1, r2
    0.00 :	  1da0:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1da4:       ldr     r1, [r5, #28]
    0.00 :	  1da8:       ldr     r2, [r4, #36]   ; 0x24
    0.00 :	  1dac:       cmp     r1, r2
    0.00 :	  1db0:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1db4:       ldr     r1, [r5, #32]
    0.00 :	  1db8:       ldr     r2, [r4, #40]   ; 0x28
    0.00 :	  1dbc:       cmp     r1, r2
    0.00 :	  1dc0:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1dc4:       ldr     r1, [r5, #36]   ; 0x24
    0.00 :	  1dc8:       ldr     r2, [r4, #44]   ; 0x2c
    0.00 :	  1dcc:       bic     r1, r1, #-16777216      ; 0xff000000
    0.00 :	  1dd0:       bic     r2, r2, #-16777216      ; 0xff000000
    0.00 :	  1dd4:       cmp     r1, r2
    0.00 :	  1dd8:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1ddc:       ldrb    r2, [r0, #13]
    0.00 :	  1de0:       lsl     r3, r8, r3
    0.00 :	  1de4:       ldrb    r1, [r9, #3]
    0.00 :	  1de8:       ands    r2, r2, r3
    0.00 :	  1dec:       beq     1ec8 <__nf_conntrack_find_get+0x2bc>
    0.00 :	  1df0:       ands    r3, r1, r3
    0.00 :	  1df4:       ldrh    r2, [r0, #10]
    0.00 :	  1df8:       beq     1e00 <__nf_conntrack_find_get+0x1f4>
    0.00 :	  1dfc:       ldrh    r3, [r9]
    0.00 :	  1e00:       cmp     r3, r2
    0.00 :	  1e04:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1e08:       ldr     r3, [r0, #112]  ; 0x70
    0.00 :	  1e0c:       tst     r3, #8
    0.00 :	  1e10:       beq     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1e14:       ldr     r3, [r0, #120]  ; 0x78
    0.00 :	  1e18:       ldr     r2, [fp, #-56]  ; 0xffffffc8
    0.00 :	  1e1c:       cmp     r2, r3
    0.00 :	  1e20:       bne     1cbc <__nf_conntrack_find_get+0xb0>
    0.00 :	  1e24:       cmp     r4, #0
    0.00 :	  1e28:       beq     1eb4 <__nf_conntrack_find_get+0x2a8>
    0.00 :	  1e2c:       ldr     r1, [r0, #112]  ; 0x70
    0.00 :	  1e30:       ands    r1, r1, #512    ; 0x200
    0.00 :	  1e34:       bne     1eb4 <__nf_conntrack_find_get+0x2a8>
    0.00 :	  1e38:       dmb     ish
    0.00 :	  1e3c:       pldw    [r0]
    0.00 :	  1e40:       mov     ip, #1
    0.00 :	  1e44:       ldrex   r14, [r0]
    0.00 :	  1e48:       teq     lr, r1
    0.00 :	  1e4c:       beq     1e60 <__nf_conntrack_find_get+0x254>
    0.00 :	  1e50:       add     r6, lr, ip
    0.00 :	  1e54:       strex   r3, r6, [r0]
    0.00 :	  1e58:       teq     r3, #0
    0.00 :	  1e5c:       bne     1e44 <__nf_conntrack_find_get+0x238>
    0.00 :	  1e60:       cmp     lr, #0
    0.00 :	  1e64:       beq     1eb4 <__nf_conntrack_find_get+0x2a8>
    0.00 :	  1e68:       dmb     ish
    0.00 :	  1e6c:       ldr     ip, [r5]
    0.00 :	  1e70:       ldr     r1, [r4, #8]
    0.00 :	  1e74:       cmp     ip, r1
    0.00 :	  1e78:       beq     1ed4 <__nf_conntrack_find_get+0x2c8>
    0.00 :	  1e7c:       cmp     r0, #0
    0.00 :	  1e80:       beq     1c54 <__nf_conntrack_find_get+0x48>
    0.00 :	  1e84:       dmb     ish
    0.00 :	  1e88:       pldw    [r0]
    0.00 :	  1e8c:       ldrex   r1, [r0]
    0.00 :	  1e90:       sub     r1, r1, #1
    0.00 :	  1e94:       strex   ip, r1, [r0]
    0.00 :	  1e98:       teq     ip, #0
    0.00 :	  1e9c:       bne     1e8c <__nf_conntrack_find_get+0x280>
    0.00 :	  1ea0:       dmb     ish
    0.00 :	  1ea4:       cmp     r1, #0
    0.00 :	  1ea8:       bne     1c54 <__nf_conntrack_find_get+0x48>
    0.00 :	  1eac:       bl      0 <nf_conntrack_destroy>
    0.00 :	  1eb0:       b       1c54 <__nf_conntrack_find_get+0x48>
    0.00 :	  1eb4:       mov     r4, #0
    0.00 :	  1eb8:       bl      0 <__rcu_read_unlock>
    0.00 :	  1ebc:       mov     r0, r4
    0.00 :	  1ec0:       sub     sp, fp, #40     ; 0x28
    0.00 :	  1ec4:       ldm     sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    0.00 :	  1ec8:       tst     r1, r3
    0.00 :	  1ecc:       bne     1dfc <__nf_conntrack_find_get+0x1f0>
    0.00 :	  1ed0:       b       1e08 <__nf_conntrack_find_get+0x1fc>
    0.00 :	  1ed4:       ldr     ip, [r5, #4]
    0.00 :	  1ed8:       ldr     r1, [r4, #12]
    0.00 :	  1edc:       cmp     ip, r1
    0.00 :	  1ee0:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1ee4:       ldr     ip, [r5, #8]
    0.00 :	  1ee8:       ldr     r1, [r4, #16]
    0.00 :	  1eec:       cmp     ip, r1
    0.00 :	  1ef0:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1ef4:       ldr     ip, [r5, #12]
    0.00 :	  1ef8:       ldr     r1, [r4, #20]
    0.00 :	  1efc:       cmp     ip, r1
    0.00 :	  1f00:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f04:       ldr     ip, [r5, #16]
    0.00 :	  1f08:       ldr     r1, [r4, #24]
    0.00 :	  1f0c:       cmp     ip, r1
    0.00 :	  1f10:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f14:       ldr     ip, [r5, #20]
    0.00 :	  1f18:       ldr     r1, [r4, #28]
    0.00 :	  1f1c:       cmp     ip, r1
    0.00 :	  1f20:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f24:       ldr     ip, [r5, #24]
    0.00 :	  1f28:       ldr     r1, [r4, #32]
    0.00 :	  1f2c:       cmp     ip, r1
    0.00 :	  1f30:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f34:       ldr     ip, [r5, #28]
    0.00 :	  1f38:       ldr     r1, [r4, #36]   ; 0x24
    0.00 :	  1f3c:       cmp     ip, r1
    0.00 :	  1f40:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f44:       ldr     ip, [r5, #32]
    0.00 :	  1f48:       ldr     r1, [r4, #40]   ; 0x28
    0.00 :	  1f4c:       cmp     ip, r1
    0.00 :	  1f50:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f54:       ldr     ip, [r5, #36]   ; 0x24
    0.00 :	  1f58:       ldr     r1, [r4, #44]   ; 0x2c
    0.00 :	  1f5c:       bic     ip, ip, #-16777216      ; 0xff000000
    0.00 :	  1f60:       bic     r1, r1, #-16777216      ; 0xff000000
    0.00 :	  1f64:       cmp     ip, r1
    0.00 :	  1f68:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1f6c:       ldrb    r1, [r4, #47]   ; 0x2f
    0.00 :	  1f70:       mov     ip, #1
    0.00 :	  1f74:       ldrb    r6, [r9, #3]
    0.00 :	  1f78:       lsl     ip, ip, r1
    0.00 :	  1f7c:       add     r1, r1, r1, lsl #1
    0.00 :	  1f80:       lsl     r1, r1, #4
    0.00 :	  1f84:       add     r1, r1, #16
    0.00 :	  1f88:       sub     r1, r4, r1
    0.00 :	  1f8c:       ldrb    lr, [r1, #13]
    0.00 :	  1f90:       ands    lr, lr, ip
    0.00 :	  1f94:       beq     1fd0 <__nf_conntrack_find_get+0x3c4>
    0.00 :	  1f98:       ands    ip, r6, ip
    0.00 :	  1f9c:       ldrh    lr, [r1, #10]
    0.00 :	  1fa0:       beq     1fa8 <__nf_conntrack_find_get+0x39c>
    0.00 :	  1fa4:       ldrh    ip, [r9]
    0.00 :	  1fa8:       cmp     ip, lr
    0.00 :	  1fac:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1fb0:       ldr     ip, [r1, #112]  ; 0x70
    0.00 :	  1fb4:       tst     ip, #8
    0.00 :	  1fb8:       beq     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1fbc:       ldr     r1, [r1, #120]  ; 0x78
    0.00 :	  1fc0:       ldr     r3, [fp, #-56]  ; 0xffffffc8
    0.00 :	  1fc4:       cmp     r3, r1
    0.00 :	  1fc8:       bne     1e7c <__nf_conntrack_find_get+0x270>
    0.00 :	  1fcc:       b       1eb8 <__nf_conntrack_find_get+0x2ac>
    0.00 :	  1fd0:       tst     r6, ip
    0.00 :	  1fd4:       bne     1fa4 <__nf_conntrack_find_get+0x398>
    0.00 :	  1fd8:       b       1fb0 <__nf_conntrack_find_get+0x3a4>
 Percent |	Source code & Disassembly of nf_conntrack.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000b514 <nf_ct_deliver_cached_events>:
         :	nf_ct_deliver_cached_events():
  100.00 :	  b514:       mov     ip, sp
    0.00 :	  b518:       push    {r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
    0.00 :	  b51c:       sub     fp, ip, #4
    0.00 :	  b520:       sub     sp, sp, #16
    0.00 :	  b524:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  b528:       bl      0 <__gnu_mcount_nc>
    0.00 :	  b52c:       movw    r5, #0
    0.00 :	  b530:       movt    r5, #0
    0.00 :	  b534:       ldr     r4, [r0, #120]  ; 0x78
    0.00 :	  b538:       mov     r6, r0
    0.00 :	  b53c:       ldr     r3, [r5]
    0.00 :	  b540:       str     r3, [fp, #-40]  ; 0xffffffd8
    0.00 :	  b544:       bl      0 <__rcu_read_lock>
    0.00 :	  b548:       ldr     r2, [r4, #2420] ; 0x974
    0.00 :	  b54c:       cmp     r2, #0
    0.00 :	  b550:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b554:       ldr     r3, [r6, #144]  ; 0x90
    0.00 :	  b558:       cmp     r3, #0
    0.00 :	  b55c:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b560:       ldrh    r4, [r3, #16]
    0.00 :	  b564:       cmp     r4, #0
    0.00 :	  b568:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b56c:       adds    r4, r3, r4
    0.00 :	  b570:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b574:       dmb     ish
    0.00 :	  b578:       pldw    [r4]
    0.00 :	  b57c:       mov     r3, #0
    0.00 :	  b580:       ldrex   r7, [r4]
    0.00 :	  b584:       strex   r1, r3, [r4]
    0.00 :	  b588:       teq     r1, #0
    0.00 :	  b58c:       bne     b580 <nf_ct_deliver_cached_events+0x6c>
    0.00 :	  b590:       dmb     ish
    0.00 :	  b594:       ldr     r3, [r6, #112]  ; 0x70
    0.00 :	  b598:       tst     r3, #8
    0.00 :	  b59c:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b5a0:       ldr     r3, [r6, #112]  ; 0x70
    0.00 :	  b5a4:       ubfx    r3, r3, #9, #1
    0.00 :	  b5a8:       cmp     r7, #0
    0.00 :	  b5ac:       orreq   r3, r3, #1
    0.00 :	  b5b0:       cmp     r3, #0
    0.00 :	  b5b4:       bne     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b5b8:       ldr     r8, [r4, #4]
    0.00 :	  b5bc:       ldrh    r1, [r4, #8]
    0.00 :	  b5c0:       orr     r0, r8, r7
    0.00 :	  b5c4:       tst     r1, r0
    0.00 :	  b5c8:       bne     b5e8 <nf_ct_deliver_cached_events+0xd4>
    0.00 :	  b5cc:       bl      0 <__rcu_read_unlock>
    0.00 :	  b5d0:       ldr     r2, [fp, #-40]  ; 0xffffffd8
    0.00 :	  b5d4:       ldr     r3, [r5]
    0.00 :	  b5d8:       cmp     r2, r3
    0.00 :	  b5dc:       bne     b640 <nf_ct_deliver_cached_events+0x12c>
    0.00 :	  b5e0:       sub     sp, fp, #36     ; 0x24
    0.00 :	  b5e4:       ldm     sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
    0.00 :	  b5e8:       str     r6, [fp, #-52]  ; 0xffffffcc
    0.00 :	  b5ec:       sub     r1, fp, #52     ; 0x34
    0.00 :	  b5f0:       str     r3, [fp, #-48]  ; 0xffffffd0
    0.00 :	  b5f4:       str     r3, [fp, #-44]  ; 0xffffffd4
    0.00 :	  b5f8:       ldr     r3, [r2]
    0.00 :	  b5fc:       blx     r3
    0.00 :	  b600:       cmp     r0, #0
    0.00 :	  b604:       cmpge   r8, #0
    0.00 :	  b608:       mov     r9, r0
    0.00 :	  b60c:       beq     b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b610:       add     r6, r6, #4
    0.00 :	  b614:       mov     r0, r6
    0.00 :	  b618:       bl      0 <_raw_spin_lock_bh>
    0.00 :	  b61c:       ldr     r3, [r4, #4]
    0.00 :	  b620:       cmp     r9, #0
    0.00 :	  b624:       mov     r0, r6
    0.00 :	  b628:       orrlt   r7, r3, r7
    0.00 :	  b62c:       bicge   r8, r3, r8
    0.00 :	  b630:       strlt   r7, [r4, #4]
    0.00 :	  b634:       strge   r8, [r4, #4]
    0.00 :	  b638:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  b63c:       b       b5cc <nf_ct_deliver_cached_events+0xb8>
    0.00 :	  b640:       bl      0 <__stack_chk_fail>
 Percent |	Source code & Disassembly of nf_conntrack.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000084f0 <tcp_error>:
         :	tcp_error():
    0.00 :	  84f0:       mov     ip, sp
    0.00 :	  84f4:       push    {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    0.00 :	  84f8:       sub     fp, ip, #4
    0.00 :	  84fc:       sub     sp, sp, #52     ; 0x34
    0.00 :	  8500:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  8504:       bl      0 <__gnu_mcount_nc>
    0.00 :	  8508:       movw    r5, #0
    0.00 :	  850c:       movt    r5, #0
    0.00 :	  8510:       ldr     sl, [r2, #92]   ; 0x5c
    0.00 :	  8514:       mov     r7, r3
    0.00 :	  8518:       mov     r6, r2
    0.00 :	  851c:       ldr     r3, [r5]
    0.00 :	  8520:       ldr     r2, [r2, #96]   ; 0x60
    0.00 :	  8524:       mov     r9, r0
    0.00 :	  8528:       sub     r2, sl, r2
    0.00 :	  852c:       str     r3, [fp, #-48]  ; 0xffffffd0
    0.00 :	  8530:       sub     r2, r2, r7
    0.00 :	  8534:       ldrb    r3, [fp, #8]
    0.00 :	  8538:       cmp     r2, #19
    0.00 :	  853c:       sub     sl, sl, r7
    0.00 :	  8540:       str     r3, [fp, #-72]  ; 0xffffffb8
    0.00 :	  8544:       ble     85a8 <tcp_error+0xb8>
    0.00 :	  8548:       ldr     r8, [r6, #176]  ; 0xb0
    0.00 :	  854c:       adds    r8, r8, r7
    0.00 :	  8550:       beq     85d0 <tcp_error+0xe0>
    0.00 :	  8554:       ldrb    r4, [r8, #12]
    0.00 :	  8558:       lsr     r4, r4, #4
    0.00 :	  855c:       lsl     r3, r4, #2
    0.00 :	  8560:       cmp     sl, r3
    0.00 :	  8564:       movcs   r4, #0
    0.00 :	  8568:       movcc   r4, #1
    0.00 :	  856c:       cmp     r3, #19
    0.00 :	  8570:       orrle   r4, r4, #1
    0.00 :	  8574:       cmp     r4, #0
    0.00 :	  8578:       beq     8600 <tcp_error+0x110>
    0.00 :	  857c:       ldr     r3, [r9, #2384] ; 0x950
    0.00 :	  8580:       cmp     r3, #255        ; 0xff
    0.00 :	  8584:       cmpne   r3, #6
    0.00 :	  8588:       beq     8684 <tcp_error+0x194>
    0.00 :	  858c:       mvn     r0, #0
    0.00 :	  8590:       ldr     r2, [fp, #-48]  ; 0xffffffd0
    0.00 :	  8594:       ldr     r3, [r5]
    0.00 :	  8598:       cmp     r2, r3
    0.00 :	  859c:       bne     874c <tcp_error+0x25c>
    0.00 :	  85a0:       sub     sp, fp, #40     ; 0x28
    0.00 :	  85a4:       ldm     sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    0.00 :	  85a8:       cmp     r6, #0
    0.00 :	  85ac:       beq     85d0 <tcp_error+0xe0>
    0.00 :	  85b0:       mov     r3, #20
    0.00 :	  85b4:       mov     r1, r7
    0.00 :	  85b8:       mov     r0, r6
    0.00 :	  85bc:       sub     r2, fp, #68     ; 0x44
    0.00 :	  85c0:       bl      0 <skb_copy_bits>
    0.00 :	  85c4:       cmp     r0, #0
    0.00 :	  85c8:       subge   r8, fp, #68     ; 0x44
    0.00 :	  85cc:       bge     8554 <tcp_error+0x64>
    0.00 :	  85d0:       ldr     r3, [r9, #2384] ; 0x950
    0.00 :	  85d4:       cmp     r3, #255        ; 0xff
    0.00 :	  85d8:       cmpne   r3, #6
    0.00 :	  85dc:       bne     858c <tcp_error+0x9c>
    0.00 :	  85e0:       mov     ip, #0
    0.00 :	  85e4:       movw    r2, #0
    0.00 :	  85e8:       mov     r3, r6
    0.00 :	  85ec:       ldr     r1, [fp, #-72]  ; 0xffffffb8
    0.00 :	  85f0:       mov     r0, r9
    0.00 :	  85f4:       str     ip, [sp, #8]
    0.00 :	  85f8:       movt    r2, #0
    0.00 :	  85fc:       b       86a0 <tcp_error+0x1b0>
    0.00 :	  8600:       ldr     r3, [r9, #2408] ; 0x968
    0.00 :	  8604:       ldr     r2, [fp, #12]
    0.00 :	  8608:       adds    r3, r3, #0
    0.00 :	  860c:       movne   r3, #1
    0.00 :	  8610:       cmp     r2, #0
    0.00 :	  8614:       movne   r3, #0
    0.00 :	  8618:       cmp     r3, #0
    0.00 :	  861c:       bne     86bc <tcp_error+0x1cc>
    0.00 :	  8620:       ldrb    r2, [r8, #13]
    0.00 :	  8624:       movw    r3, #0
    0.00 :	  8628:       movt    r3, #0
    0.00 :	  862c:       and     r2, r2, #55     ; 0x37
    0.00 :	  8630:       add     r3, r3, r2
    0.00 :	  8634:       ldrb    r1, [r3, #64]   ; 0x40
    0.00 :	  8638:       cmp     r1, #0
    0.00 :	  863c:       movne   r0, #1
    0.00 :	  8640:       bne     8590 <tcp_error+0xa0>
    0.00 :	  8644:       ldr     r3, [r9, #2384] ; 0x950
    0.00 :	  8648:       cmp     r3, #255        ; 0xff
    0.00 :	  864c:       cmpne   r3, #6
    0.00 :	  8650:       bne     858c <tcp_error+0x9c>
    0.00 :	  8654:       mov     r2, r1
    0.00 :	  8658:       str     r1, [sp, #8]
    0.00 :	  865c:       mov     r3, r6
    0.00 :	  8660:       str     r1, [sp, #4]
    0.00 :	  8664:       str     r1, [sp]
    0.00 :	  8668:       mov     r0, r9
    0.00 :	  866c:       ldr     r1, [fp, #-72]  ; 0xffffffb8
    0.00 :	  8670:       movw    ip, #0
    0.00 :	  8674:       movt    ip, #0
    0.00 :	  8678:       str     ip, [sp, #12]
    0.00 :	  867c:       bl      0 <nf_log_packet>
    0.00 :	  8680:       b       858c <tcp_error+0x9c>
    0.00 :	  8684:       ldr     r1, [fp, #-72]  ; 0xffffffb8
    0.00 :	  8688:       movw    r2, #0
    0.00 :	  868c:       movt    r2, #0
    0.00 :	  8690:       mov     r3, r6
    0.00 :	  8694:       mov     r0, r9
    0.00 :	  8698:       mov     ip, #0
    0.00 :	  869c:       str     ip, [sp, #8]
    0.00 :	  86a0:       str     r2, [sp, #12]
    0.00 :	  86a4:       mov     r2, ip
    0.00 :	  86a8:       str     ip, [sp, #4]
    0.00 :	  86ac:       str     ip, [sp]
    0.00 :	  86b0:       bl      0 <nf_log_packet>
    0.00 :	  86b4:       mvn     r0, #0
    0.00 :	  86b8:       b       8590 <tcp_error+0xa0>
    0.00 :	  86bc:       bl      0 <__rcu_read_lock>
    0.00 :	  86c0:       ldrsh   r2, [fp, #-72]  ; 0xffffffb8
    0.00 :	  86c4:       movw    r3, #0
    0.00 :	  86c8:       movt    r3, #0
    0.00 :	  86cc:       ldr     r3, [r3, r2, lsl #2]
    0.00 :	  86d0:       cmp     r3, #0
    0.00 :	  86d4:       beq     8744 <tcp_error+0x254>
    0.00 :	  86d8:       mov     r2, r7
    0.00 :	  86dc:       ldr     sl, [r3, #4]
    0.00 :	  86e0:       mov     r1, r4
  100.00 :	  86e4:       mov     r3, #6
    0.00 :	  86e8:       mov     r0, r6
    0.00 :	  86ec:       blx     sl
    0.00 :	  86f0:       mov     r7, r0
    0.00 :	  86f4:       bl      0 <__rcu_read_unlock>
    0.00 :	  86f8:       cmp     r7, #0
    0.00 :	  86fc:       beq     8620 <tcp_error+0x130>
    0.00 :	  8700:       ldr     r3, [r9, #2384] ; 0x950
    0.00 :	  8704:       cmp     r3, #255        ; 0xff
    0.00 :	  8708:       cmpne   r3, #6
    0.00 :	  870c:       bne     858c <tcp_error+0x9c>
    0.00 :	  8710:       mov     r0, r9
    0.00 :	  8714:       str     r4, [sp, #8]
    0.00 :	  8718:       mov     r3, r6
    0.00 :	  871c:       str     r4, [sp, #4]
    0.00 :	  8720:       mov     r2, r4
    0.00 :	  8724:       str     r4, [sp]
    0.00 :	  8728:       ldr     r1, [fp, #-72]  ; 0xffffffb8
    0.00 :	  872c:       movw    ip, #0
    0.00 :	  8730:       movt    ip, #0
    0.00 :	  8734:       str     ip, [sp, #12]
    0.00 :	  8738:       bl      0 <nf_log_packet>
    0.00 :	  873c:       mvn     r0, #0
    0.00 :	  8740:       b       8590 <tcp_error+0xa0>
    0.00 :	  8744:       bl      0 <__rcu_read_unlock>
    0.00 :	  8748:       b       8620 <tcp_error+0x130>
    0.00 :	  874c:       bl      0 <__stack_chk_fail>
 Percent |	Source code & Disassembly of nf_conntrack.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00008b0c <tcp_packet>:
         :	tcp_packet():
    0.00 :	  8b0c:       mov     ip, sp
    0.00 :	  8b10:       push    {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    0.00 :	  8b14:       sub     fp, ip, #4
    0.00 :	  8b18:       sub     sp, sp, #196    ; 0xc4
    0.00 :	  8b1c:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  8b20:       bl      0 <__gnu_mcount_nc>
    0.00 :	  8b24:       mov     r5, r1
    0.00 :	  8b28:       str     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  8b2c:       movw    r1, #0
    0.00 :	  8b30:       ldr     r3, [r0, #120]  ; 0x78
    0.00 :	  8b34:       mov     ip, r1
    0.00 :	  8b38:       movt    ip, #0
    0.00 :	  8b3c:       ldr     r1, [r5, #92]   ; 0x5c
    0.00 :	  8b40:       mov     r6, r2
    0.00 :	  8b44:       mov     lr, ip
    0.00 :	  8b48:       str     ip, [fp, #-160] ; 0xffffff60
    0.00 :	  8b4c:       str     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  8b50:       mov     r4, r0
    0.00 :	  8b54:       ldrb    r3, [fp, #4]
    0.00 :	  8b58:       ldr     ip, [r5, #96]   ; 0x60
    0.00 :	  8b5c:       ldr     r2, [lr]
    0.00 :	  8b60:       sub     r1, r1, ip
    0.00 :	  8b64:       str     r3, [fp, #-196] ; 0xffffff3c
    0.00 :	  8b68:       sub     r1, r1, r6
    0.00 :	  8b6c:       ldr     r3, [fp, #12]
    0.00 :	  8b70:       cmp     r1, #19
    0.00 :	  8b74:       str     r2, [fp, #-48]  ; 0xffffffd0
    0.00 :	  8b78:       str     r3, [fp, #-172] ; 0xffffff54
    0.00 :	  8b7c:       ble     8c30 <tcp_packet+0x124>
    0.00 :	  8b80:       ldr     r3, [r5, #176]  ; 0xb0
    0.00 :	  8b84:       adds    r9, r3, r6
    0.00 :	  8b88:       beq     8c58 <tcp_packet+0x14c>
    0.00 :	  8b8c:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  8b90:       add     r3, r4, #4
    0.00 :	  8b94:       str     r3, [fp, #-168] ; 0xffffff58
    0.00 :	  8b98:       cmp     r2, #2
    0.00 :	  8b9c:       mov     r0, r3
    0.00 :	  8ba0:       movls   sl, #0
    0.00 :	  8ba4:       movhi   sl, #1
    0.00 :	  8ba8:       bl      0 <_raw_spin_lock_bh>
    0.00 :	  8bac:       ldrb    r3, [r9, #13]
    0.00 :	  8bb0:       ldrb    r2, [r4, #192]  ; 0xc0
    0.00 :	  8bb4:       ands    r1, r3, #4
    0.00 :	  8bb8:       str     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  8bbc:       beq     8c5c <tcp_packet+0x150>
    0.00 :	  8bc0:       mov     r2, #4
    0.00 :	  8bc4:       str     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  8bc8:       ldr     ip, [fp, #-148] ; 0xffffff6c
    0.00 :	  8bcc:       mov     r0, #60 ; 0x3c
    0.00 :	  8bd0:       mul     r0, r0, sl
    0.00 :	  8bd4:       mov     r2, #10
    0.00 :	  8bd8:       mla     r2, r2, ip, r0
    0.00 :	  8bdc:       movw    r8, #0
    0.00 :	  8be0:       ldr     r0, [fp, #-136] ; 0xffffff78
    0.00 :	  8be4:       movt    r8, #0
    0.00 :	  8be8:       add     r2, r8, r2
    0.00 :	  8bec:       add     r2, r2, r0
    0.00 :	  8bf0:       ldrb    r7, [r2, #120]  ; 0x78
    0.00 :	  8bf4:       sub     r2, r7, #1
    0.00 :	  8bf8:       cmp     r2, #10
    0.00 :	  8bfc:       ldrls   pc, [pc, r2, lsl #2]
    0.00 :	  8c00:       b       9374 <tcp_packet+0x868>
    0.00 :	  8c04:       .word   0x00008e4c
    0.00 :	  8c08:       .word   0x00009374
    0.00 :	  8c0c:       .word   0x00009374
    0.00 :	  8c10:       .word   0x00009374
    0.00 :	  8c14:       .word   0x00009374
    0.00 :	  8c18:       .word   0x00009374
    0.00 :	  8c1c:       .word   0x000092c0
    0.00 :	  8c20:       .word   0x00009284
    0.00 :	  8c24:       .word   0x00009374
    0.00 :	  8c28:       .word   0x00008dbc
    0.00 :	  8c2c:       .word   0x00008cec
    0.00 :	  8c30:       cmp     r5, #0
    0.00 :	  8c34:       beq     8c58 <tcp_packet+0x14c>
    0.00 :	  8c38:       mov     r3, #20
    0.00 :	  8c3c:       mov     r1, r6
    0.00 :	  8c40:       mov     r0, r5
    0.00 :	  8c44:       sub     r2, fp, #128    ; 0x80
    0.00 :	  8c48:       bl      0 <skb_copy_bits>
    0.00 :	  8c4c:       cmp     r0, #0
    0.00 :	  8c50:       subge   r9, fp, #128    ; 0x80
    0.00 :	  8c54:       bge     8b8c <tcp_packet+0x80>
    0.00 :	  8c58:       .word   0xe7f001f2
    0.00 :	  8c5c:       tst     r3, #2
    0.00 :	  8c60:       ubfxne  r2, r3, #4, #1
    0.00 :	  8c64:       strne   r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  8c68:       bne     8c84 <tcp_packet+0x178>
    0.00 :	  8c6c:       tst     r3, #1
    0.00 :	  8c70:       bne     92b4 <tcp_packet+0x7a8>
    0.00 :	  8c74:       tst     r3, #16
    0.00 :	  8c78:       beq     99cc <tcp_packet+0xec0>
    0.00 :	  8c7c:       mov     r2, #3
    0.00 :	  8c80:       str     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  8c84:       ldr     ip, [fp, #-148] ; 0xffffff6c
    0.00 :	  8c88:       mov     r0, #60 ; 0x3c
    0.00 :	  8c8c:       mul     r0, r0, sl
    0.00 :	  8c90:       mov     r2, #10
    0.00 :	  8c94:       mla     r2, r2, ip, r0
    0.00 :	  8c98:       movw    r8, #0
    0.00 :	  8c9c:       ldr     r0, [fp, #-136] ; 0xffffff78
    0.00 :	  8ca0:       movt    r8, #0
    0.00 :	  8ca4:       add     r2, r8, r2
    0.00 :	  8ca8:       add     r2, r2, r0
    0.00 :	  8cac:       ldrb    r7, [r2, #120]  ; 0x78
    0.00 :	  8cb0:       sub     r2, r7, #1
    0.00 :	  8cb4:       cmp     r2, #10
    0.00 :	  8cb8:       ldrls   pc, [pc, r2, lsl #2]
    0.00 :	  8cbc:       b       9374 <tcp_packet+0x868>
    0.00 :	  8cc0:       .word   0x00008e4c
    0.00 :	  8cc4:       .word   0x00009374
    0.00 :	  8cc8:       .word   0x00009374
    0.00 :	  8ccc:       .word   0x00009374
    0.00 :	  8cd0:       .word   0x00009374
    0.00 :	  8cd4:       .word   0x00009374
    0.00 :	  8cd8:       .word   0x000092e4
    0.00 :	  8cdc:       .word   0x00009290
    0.00 :	  8ce0:       .word   0x00009374
    0.00 :	  8ce4:       .word   0x00008dbc
    0.00 :	  8ce8:       .word   0x00008cec
    0.00 :	  8cec:       ldr     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  8cf0:       cmp     r3, #2
    0.00 :	  8cf4:       movhi   r3, #0
    0.00 :	  8cf8:       movls   r3, #1
    0.00 :	  8cfc:       str     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  8d00:       ldr     r3, [fp, #-148] ; 0xffffff6c
    0.00 :	  8d04:       cmp     r3, #1
    0.00 :	  8d08:       beq     9aac <tcp_packet+0xfa0>
    0.00 :	  8d0c:       ldr     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  8d10:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  8d14:       strb    sl, [r4, #193]  ; 0xc1
    0.00 :	  8d18:       cmp     r2, #0
    0.00 :	  8d1c:       movne   r3, #0
    0.00 :	  8d20:       andeq   r3, r3, #1
    0.00 :	  8d24:       strb    r2, [r4, #195]  ; 0xc3
    0.00 :	  8d28:       cmp     r3, #0
    0.00 :	  8d2c:       ldr     r3, [r9, #4]
    0.00 :	  8d30:       rev     r3, r3
    0.00 :	  8d34:       str     r3, [r4, #196]  ; 0xc4
    0.00 :	  8d38:       ldrb    r2, [r9, #13]
    0.00 :	  8d3c:       ldr     r3, [r5, #92]   ; 0x5c
    0.00 :	  8d40:       ldrb    r1, [r9, #12]
    0.00 :	  8d44:       and     ip, r2, #1
    0.00 :	  8d48:       sub     r3, r3, r6
    0.00 :	  8d4c:       ubfx    r0, r2, #1, #1
    0.00 :	  8d50:       add     r3, r3, ip
    0.00 :	  8d54:       ldr     r2, [r9, #4]
    0.00 :	  8d58:       lsr     r1, r1, #4
    0.00 :	  8d5c:       add     r3, r3, r0
    0.00 :	  8d60:       rev     r2, r2
    0.00 :	  8d64:       sub     r3, r3, r1, lsl #2
    0.00 :	  8d68:       add     r3, r3, r2
    0.00 :	  8d6c:       str     r3, [r4, #204]  ; 0xcc
    0.00 :	  8d70:       ldrh    r3, [r9, #14]
    0.00 :	  8d74:       rev16   r3, r3
    0.00 :	  8d78:       strh    r3, [r4, #208]  ; 0xd0
    0.00 :	  8d7c:       bne     9a20 <tcp_packet+0xf14>
    0.00 :	  8d80:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  8d84:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  8d88:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  8d8c:       ldr     r3, [r3, #2384] ; 0x950
    0.00 :	  8d90:       cmp     r3, #255        ; 0xff
    0.00 :	  8d94:       cmpne   r3, #6
    0.00 :	  8d98:       beq     99d8 <tcp_packet+0xecc>
    0.00 :	  8d9c:       mov     r0, #1
    0.00 :	  8da0:       ldr     r3, [fp, #-160] ; 0xffffff60
    0.00 :	  8da4:       ldr     r2, [fp, #-48]  ; 0xffffffd0
    0.00 :	  8da8:       ldr     r3, [r3]
    0.00 :	  8dac:       cmp     r2, r3
    0.00 :	  8db0:       bne     9f94 <tcp_packet+0x1488>
    0.00 :	  8db4:       sub     sp, fp, #40     ; 0x28
    0.00 :	  8db8:       ldm     sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    0.00 :	  8dbc:       ldr     r2, [r4, #144]  ; 0x90
    0.00 :	  8dc0:       cmp     r2, #0
    0.00 :	  8dc4:       beq     9414 <tcp_packet+0x908>
    0.00 :	  8dc8:       ldrh    r0, [r2, #24]
    0.00 :	  8dcc:       cmp     r0, #0
    0.00 :	  8dd0:       beq     9414 <tcp_packet+0x908>
    0.00 :	  8dd4:       cmn     r2, r0
    0.00 :	  8dd8:       beq     9414 <tcp_packet+0x908>
    0.00 :	  8ddc:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  8de0:       ldr     r0, [fp, #-148] ; 0xffffff6c
    0.00 :	  8de4:       cmp     r2, #1
    0.00 :	  8de8:       cmpeq   r0, #3
    0.00 :	  8dec:       ldr     r0, [fp, #-144] ; 0xffffff70
    0.00 :	  8df0:       moveq   r2, #1
    0.00 :	  8df4:       movne   r2, #0
    0.00 :	  8df8:       cmp     r0, #2
    0.00 :	  8dfc:       movhi   r2, #0
    0.00 :	  8e00:       andls   r2, r2, #1
    0.00 :	  8e04:       cmp     r2, #0
    0.00 :	  8e08:       beq     9414 <tcp_packet+0x908>
    0.00 :	  8e0c:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  8e10:       cmp     r2, #0
    0.00 :	  8e14:       bne     9414 <tcp_packet+0x908>
    0.00 :	  8e18:       mov     r0, #20
    0.00 :	  8e1c:       ldr     r2, [r9, #4]
    0.00 :	  8e20:       mla     r4, r0, sl, r4
    0.00 :	  8e24:       rev     r2, r2
    0.00 :	  8e28:       ldr     r0, [r4, #152]  ; 0x98
    0.00 :	  8e2c:       sub     r0, r0, #1
    0.00 :	  8e30:       cmp     r0, r2
    0.00 :	  8e34:       bne     9414 <tcp_packet+0x908>
    0.00 :	  8e38:       nop     {0}
    0.00 :	  8e3c:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  8e40:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  8e44:       mov     r0, #1
    0.00 :	  8e48:       b       8da0 <tcp_packet+0x294>
    0.00 :	  8e4c:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  8e50:       cmp     r2, #6
    0.00 :	  8e54:       bhi     9904 <tcp_packet+0xdf8>
    0.00 :	  8e58:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  8e5c:       mov     r7, #20
    0.00 :	  8e60:       ldr     r8, [r9, #8]
    0.00 :	  8e64:       mov     r1, #1
    0.00 :	  8e68:       cmp     r2, #2
    0.00 :	  8e6c:       movhi   r2, #0
    0.00 :	  8e70:       movls   r2, #1
    0.00 :	  8e74:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  8e78:       mla     r2, r7, r2, r4
    0.00 :	  8e7c:       str     r1, [fp, #-156] ; 0xffffff64
    0.00 :	  8e80:       mul     r7, r7, sl
    0.00 :	  8e84:       rev     r8, r8
    0.00 :	  8e88:       ldrb    r2, [r2, #169]  ; 0xa9
    0.00 :	  8e8c:       ldrb    r1, [r9, #12]
    0.00 :	  8e90:       tst     r2, #2
    0.00 :	  8e94:       ldr     r0, [r9, #4]
    0.00 :	  8e98:       ldr     ip, [r5, #92]   ; 0x5c
    0.00 :	  8e9c:       rev     r0, r0
    0.00 :	  8ea0:       lsr     r1, r1, #4
    0.00 :	  8ea4:       sub     r2, ip, r6
    0.00 :	  8ea8:       str     r0, [fp, #-152] ; 0xffffff68
    0.00 :	  8eac:       mov     lr, r0
    0.00 :	  8eb0:       and     r0, r3, #1
    0.00 :	  8eb4:       str     r0, [fp, #-176] ; 0xffffff50
    0.00 :	  8eb8:       mov     r0, #4
    0.00 :	  8ebc:       mls     r2, r1, r0, r2
    0.00 :	  8ec0:       ldrh    r0, [r9, #14]
    0.00 :	  8ec4:       ubfx    r3, r3, #1, #1
    0.00 :	  8ec8:       rev16   r0, r0
    0.00 :	  8ecc:       add     r2, r2, lr
    0.00 :	  8ed0:       ldr     lr, [fp, #-176] ; 0xffffff50
    0.00 :	  8ed4:       add     r2, r2, lr
    0.00 :	  8ed8:       mov     lr, r2
    0.00 :	  8edc:       add     r2, r4, #152    ; 0x98
    0.00 :	  8ee0:       add     r3, lr, r3
    0.00 :	  8ee4:       str     r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  8ee8:       uxth    r3, r0
    0.00 :	  8eec:       str     r3, [fp, #-188] ; 0xffffff44
    0.00 :	  8ef0:       add     r3, r2, r7
    0.00 :	  8ef4:       str     r3, [fp, #-204] ; 0xffffff34
    0.00 :	  8ef8:       ldr     r3, [r4, #120]  ; 0x78
    0.00 :	  8efc:       str     r3, [fp, #-200] ; 0xffffff38
    0.00 :	  8f00:       bne     97dc <tcp_packet+0xcd0>
    0.00 :	  8f04:       str     r8, [fp, #-176] ; 0xffffff50
    0.00 :	  8f08:       sub     r2, r8, #1
    0.00 :	  8f0c:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  8f10:       mov     r0, r4
    0.00 :	  8f14:       bl      ab58 <nf_ct_seq_offset>
    0.00 :	  8f18:       sub     r3, r8, r0
    0.00 :	  8f1c:       str     r3, [fp, #-184] ; 0xffffff48
    0.00 :	  8f20:       ldr     r3, [fp, #-176] ; 0xffffff50
    0.00 :	  8f24:       mov     r7, r0
    0.00 :	  8f28:       sub     r3, r3, r0
    0.00 :	  8f2c:       str     r3, [fp, #-176] ; 0xffffff50
    0.00 :	  8f30:       nop     {0}
    0.00 :	  8f34:       nop     {0}
    0.00 :	  8f38:       nop     {0}
    0.00 :	  8f3c:       nop     {0}
    0.00 :	  8f40:       mov     r3, #20
    0.00 :	  8f44:       mla     r8, r3, sl, r4
    0.00 :	  8f48:       ldr     r3, [r8, #160]  ; 0xa0
    0.00 :	  8f4c:       cmp     r3, #0
    0.00 :	  8f50:       bne     9444 <tcp_packet+0x938>
    0.00 :	  8f54:       ldrb    r3, [r9, #13]
    0.00 :	  8f58:       tst     r3, #2
    0.00 :	  8f5c:       beq     98bc <tcp_packet+0xdb0>
    0.00 :	  8f60:       ldr     r2, [fp, #-188] ; 0xffffff44
    0.00 :	  8f64:       mov     r1, r6
    0.00 :	  8f68:       ldr     r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  8f6c:       cmp     r2, #0
    0.00 :	  8f70:       str     r3, [r8, #156]  ; 0x9c
    0.00 :	  8f74:       movne   r0, r2
    0.00 :	  8f78:       moveq   r0, #1
    0.00 :	  8f7c:       str     r3, [r8, #152]  ; 0x98
    0.00 :	  8f80:       str     r0, [r8, #160]  ; 0xa0
    0.00 :	  8f84:       mov     r2, r9
    0.00 :	  8f88:       ldr     r3, [fp, #-204] ; 0xffffff34
    0.00 :	  8f8c:       mov     r0, r5
    0.00 :	  8f90:       bl      8750 <tcp_options>
    0.00 :	  8f94:       ldrb    r3, [r8, #169]  ; 0xa9
    0.00 :	  8f98:       tst     r3, #1
    0.00 :	  8f9c:       beq     93ac <tcp_packet+0x8a0>
    0.00 :	  8fa0:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  8fa4:       mov     r2, #20
    0.00 :	  8fa8:       mla     r3, r2, r3, r4
    0.00 :	  8fac:       ldrb    r3, [r3, #169]  ; 0xa9
    0.00 :	  8fb0:       tst     r3, #1
    0.00 :	  8fb4:       beq     93ac <tcp_packet+0x8a0>
    0.00 :	  8fb8:       ldrb    r2, [r9, #13]
    0.00 :	  8fbc:       tst     r2, #16
    0.00 :	  8fc0:       beq     9cf0 <tcp_packet+0x11e4>
    0.00 :	  8fc4:       ldr     r3, [r9, #12]
    0.00 :	  8fc8:       ldr     r1, [fp, #-184] ; 0xffffff48
    0.00 :	  8fcc:       and     r3, r3, #5120   ; 0x1400
    0.00 :	  8fd0:       cmp     r3, #5120       ; 0x1400
    0.00 :	  8fd4:       cmpeq   r1, #0
    0.00 :	  8fd8:       bne     8ff4 <tcp_packet+0x4e8>
    0.00 :	  8fdc:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  8fe0:       mov     r3, #20
    0.00 :	  8fe4:       mla     r3, r3, r1, r4
    0.00 :	  8fe8:       ldr     r3, [r3, #152]  ; 0x98
    0.00 :	  8fec:       str     r3, [fp, #-184] ; 0xffffff48
    0.00 :	  8ff0:       str     r3, [fp, #-176] ; 0xffffff50
    0.00 :	  8ff4:       ldr     r3, [fp, #-152] ; 0xffffff68
    0.00 :	  8ff8:       clz     r3, r3
    0.00 :	  8ffc:       lsr     r3, r3, #5
    0.00 :	  9000:       ands    r3, r3, r2, lsr #2
    0.00 :	  9004:       beq     902c <tcp_packet+0x520>
    0.00 :	  9008:       ldrb    r3, [r4, #192]  ; 0xc0
    0.00 :	  900c:       cmp     r3, #1
    0.00 :	  9010:       moveq   r3, #20
    0.00 :	  9014:       movne   r3, #0
    0.00 :	  9018:       mlaeq   r3, r3, sl, r4
    0.00 :	  901c:       strne   r3, [fp, #-152] ; 0xffffff68
    0.00 :	  9020:       ldreq   r3, [r3, #152]  ; 0x98
    0.00 :	  9024:       streq   r3, [fp, #-152] ; 0xffffff68
    0.00 :	  9028:       streq   r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  902c:       nop     {0}
    0.00 :	  9030:       nop     {0}
    0.00 :	  9034:       nop     {0}
    0.00 :	  9038:       ldr     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  903c:       mov     r3, #20
    0.00 :	  9040:       mla     r2, r3, r2, r4
    0.00 :	  9044:       ldr     r2, [r2, #160]  ; 0xa0
    0.00 :	  9048:       cmp     r2, #0
    0.00 :	  904c:       mlane   r3, r3, sl, r4
    0.00 :	  9050:       moveq   r3, #1
    0.00 :	  9054:       moveq   r6, r3
    0.00 :	  9058:       ldrne   r6, [r3, #152]  ; 0x98
    0.00 :	  905c:       ldrne   r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  9060:       subne   r6, r6, #1
    0.00 :	  9064:       subne   r6, r6, r2
    0.00 :	  9068:       subne   r6, r6, r3
    0.00 :	  906c:       lsrne   r6, r6, #31
    0.00 :	  9070:       movne   r3, r6
    0.00 :	  9074:       nop     {0}
    0.00 :	  9078:       mov     r2, #20
    0.00 :	  907c:       ldr     r1, [fp, #-152] ; 0xffffff68
    0.00 :	  9080:       mla     r7, r2, sl, r4
    0.00 :	  9084:       ldr     r3, [r7, #156]  ; 0x9c
    0.00 :	  9088:       mvn     r3, r3
    0.00 :	  908c:       add     r3, r3, r1
    0.00 :	  9090:       ands    r1, r6, r3, lsr #31
    0.00 :	  9094:       beq     90b4 <tcp_packet+0x5a8>
    0.00 :	  9098:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  909c:       ldr     r0, [fp, #-176] ; 0xffffff50
    0.00 :	  90a0:       mla     r2, r2, r1, r4
    0.00 :	  90a4:       ldr     ip, [r2, #152]  ; 0x98
    0.00 :	  90a8:       mvn     r1, ip
    0.00 :	  90ac:       cmn     r1, r0
    0.00 :	  90b0:       bmi     9b94 <tcp_packet+0x1088>
    0.00 :	  90b4:       mov     r1, #20
    0.00 :	  90b8:       mla     r0, r1, sl, r4
    0.00 :	  90bc:       ldrb    r2, [r0, #169]  ; 0xa9
    0.00 :	  90c0:       tst     r2, #8
    0.00 :	  90c4:       bne     943c <tcp_packet+0x930>
    0.00 :	  90c8:       ldr     r2, [fp, #-200] ; 0xffffff38
    0.00 :	  90cc:       ldr     r2, [r2, #2516] ; 0x9d4
    0.00 :	  90d0:       cmp     r2, #0
    0.00 :	  90d4:       bne     943c <tcp_packet+0x930>
    0.00 :	  90d8:       ldr     r2, [fp, #-200] ; 0xffffff38
    0.00 :	  90dc:       ldr     r2, [r2, #2384] ; 0x950
    0.00 :	  90e0:       cmp     r2, #255        ; 0xff
    0.00 :	  90e4:       cmpne   r2, #6
    0.00 :	  90e8:       movne   r2, #0
    0.00 :	  90ec:       moveq   r2, #1
    0.00 :	  90f0:       movne   r6, r2
    0.00 :	  90f4:       bne     913c <tcp_packet+0x630>
    0.00 :	  90f8:       cmp     r3, #0
    0.00 :	  90fc:       movwge  r3, #0
    0.00 :	  9100:       movtge  r3, #0
    0.00 :	  9104:       blt     9dfc <tcp_packet+0x12f0>
    0.00 :	  9108:       mov     r6, #0
    0.00 :	  910c:       str     r3, [sp, #16]
    0.00 :	  9110:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  9114:       movw    r3, #0
    0.00 :	  9118:       ldr     r0, [fp, #-200] ; 0xffffff38
    0.00 :	  911c:       movt    r3, #0
    0.00 :	  9120:       str     r6, [sp, #8]
    0.00 :	  9124:       mov     r2, r6
    0.00 :	  9128:       str     r3, [sp, #12]
    0.00 :	  912c:       mov     r3, r5
    0.00 :	  9130:       str     r6, [sp, #4]
    0.00 :	  9134:       str     r6, [sp]
    0.00 :	  9138:       bl      0 <nf_log_packet>
  100.00 :	  913c:       nop     {0}
    0.00 :	  9140:       cmp     r6, #0
    0.00 :	  9144:       beq     9e88 <tcp_packet+0x137c>
    0.00 :	  9148:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  914c:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  9150:       sub     r8, r3, #4
    0.00 :	  9154:       clz     r8, r8
    0.00 :	  9158:       cmp     r3, r2
    0.00 :	  915c:       uxtb    r7, r3
    0.00 :	  9160:       lsl     r6, r3, #2
    0.00 :	  9164:       lsr     r8, r8, #5
    0.00 :	  9168:       moveq   r8, #0
    0.00 :	  916c:       ldrb    r3, [fp, #-148] ; 0xffffff6c
    0.00 :	  9170:       strb    sl, [r4, #193]  ; 0xc1
    0.00 :	  9174:       strb    r3, [r4, #195]  ; 0xc3
    0.00 :	  9178:       nop     {0}
    0.00 :	  917c:       nop     {0}
    0.00 :	  9180:       cmp     r8, #0
    0.00 :	  9184:       strb    r7, [r4, #192]  ; 0xc0
    0.00 :	  9188:       movne   r3, #20
    0.00 :	  918c:       mlane   r3, r3, sl, r4
    0.00 :	  9190:       ldrbne  r2, [r3, #169]  ; 0xa9
    0.00 :	  9194:       orrne   r2, r2, #4
    0.00 :	  9198:       strbne  r2, [r3, #169]  ; 0xa9
    0.00 :	  919c:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  91a0:       ldrb    r2, [r4, #194]  ; 0xc2
    0.00 :	  91a4:       ldr     r3, [r3, #2520] ; 0x9d8
    0.00 :	  91a8:       cmp     r2, r3
    0.00 :	  91ac:       ldr     r3, [fp, #-172] ; 0xffffff54
    0.00 :	  91b0:       ldr     r6, [r3, r6]
    0.00 :	  91b4:       bcc     91c8 <tcp_packet+0x6bc>
    0.00 :	  91b8:       ldr     r3, [r3, #48]   ; 0x30
    0.00 :	  91bc:       cmp     r6, r3
    0.00 :	  91c0:       movhi   r6, r3
    0.00 :	  91c4:       bhi     91ec <tcp_packet+0x6e0>
    0.00 :	  91c8:       ldrb    r3, [r4, #169]  ; 0xa9
    0.00 :	  91cc:       ldrb    r2, [r4, #189]  ; 0xbd
    0.00 :	  91d0:       orr     r3, r3, r2
    0.00 :	  91d4:       tst     r3, #16
    0.00 :	  91d8:       beq     91ec <tcp_packet+0x6e0>
    0.00 :	  91dc:       ldr     r3, [fp, #-172] ; 0xffffff54
    0.00 :	  91e0:       ldr     r3, [r3, #52]   ; 0x34
    0.00 :	  91e4:       cmp     r6, r3
    0.00 :	  91e8:       movcs   r6, r3
    0.00 :	  91ec:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  91f0:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  91f4:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  91f8:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  91fc:       cmp     r3, r2
    0.00 :	  9200:       beq     923c <tcp_packet+0x730>
    0.00 :	  9204:       ldr     r3, [r4, #120]  ; 0x78
    0.00 :	  9208:       ldr     r3, [r3, #2420] ; 0x974
    0.00 :	  920c:       cmp     r3, #0
    0.00 :	  9210:       beq     923c <tcp_packet+0x730>
    0.00 :	  9214:       ldr     r1, [r4, #144]  ; 0x90
    0.00 :	  9218:       cmp     r1, #0
    0.00 :	  921c:       beq     923c <tcp_packet+0x730>
    0.00 :	  9220:       ldrh    r3, [r1, #16]
    0.00 :	  9224:       cmp     r3, #0
    0.00 :	  9228:       beq     923c <tcp_packet+0x730>
    0.00 :	  922c:       adds    r1, r1, r3
    0.00 :	  9230:       beq     923c <tcp_packet+0x730>
    0.00 :	  9234:       mov     r0, #5
    0.00 :	  9238:       bl      0 <_set_bit>
    0.00 :	  923c:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  9240:       tst     r3, #2
    0.00 :	  9244:       bne     95fc <tcp_packet+0xaf0>
    0.00 :	  9248:       ldrb    r3, [r9, #13]
    0.00 :	  924c:       tst     r3, #4
    0.00 :	  9250:       bne     9b70 <tcp_packet+0x1064>
    0.00 :	  9254:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  9258:       cmp     r3, #3
    0.00 :	  925c:       beq     9a98 <tcp_packet+0xf8c>
    0.00 :	  9260:       mov     r0, r4
    0.00 :	  9264:       mov     r3, r6
    0.00 :	  9268:       mov     r4, #1
    0.00 :	  926c:       mov     r2, r5
    0.00 :	  9270:       ldr     r1, [fp, #-144] ; 0xffffff70
    0.00 :	  9274:       str     r4, [sp]
    0.00 :	  9278:       bl      85c <__nf_ct_refresh_acct>
    0.00 :	  927c:       mov     r0, r4
    0.00 :	  9280:       b       8da0 <tcp_packet+0x294>
    0.00 :	  9284:       ldr     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  9288:       cmp     r2, #4
    0.00 :	  928c:       beq     9d48 <tcp_packet+0x123c>
    0.00 :	  9290:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  9294:       mov     r7, #20
    0.00 :	  9298:       ldr     r8, [r9, #8]
    0.00 :	  929c:       mov     r1, #8
    0.00 :	  92a0:       cmp     r2, #2
    0.00 :	  92a4:       movhi   r2, #0
    0.00 :	  92a8:       movls   r2, #1
    0.00 :	  92ac:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  92b0:       b       8e78 <tcp_packet+0x36c>
    0.00 :	  92b4:       mov     r2, #2
    0.00 :	  92b8:       str     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  92bc:       b       8bc8 <tcp_packet+0xbc>
    0.00 :	  92c0:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  92c4:       mov     r7, #20
    0.00 :	  92c8:       ldr     r8, [r9, #8]
    0.00 :	  92cc:       mov     r1, #7
    0.00 :	  92d0:       cmp     r2, #2
    0.00 :	  92d4:       movhi   r2, #0
    0.00 :	  92d8:       movls   r2, #1
    0.00 :	  92dc:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  92e0:       b       8e78 <tcp_packet+0x36c>
    0.00 :	  92e4:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  92e8:       ldr     r1, [fp, #-148] ; 0xffffff6c
    0.00 :	  92ec:       cmp     r2, #6
    0.00 :	  92f0:       cmpeq   r1, #3
    0.00 :	  92f4:       bne     92c0 <tcp_packet+0x7b4>
    0.00 :	  92f8:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  92fc:       cmp     sl, r2
    0.00 :	  9300:       beq     93cc <tcp_packet+0x8c0>
    0.00 :	  9304:       ldrb    r7, [r4, #195]  ; 0xc3
    0.00 :	  9308:       cmp     r7, #0
    0.00 :	  930c:       bne     93cc <tcp_packet+0x8c0>
    0.00 :	  9310:       ldrb    r2, [r4, #211]  ; 0xd3
    0.00 :	  9314:       tst     r2, #64 ; 0x40
    0.00 :	  9318:       beq     93cc <tcp_packet+0x8c0>
    0.00 :	  931c:       bic     r2, r2, #64     ; 0x40
    0.00 :	  9320:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  9324:       strb    r2, [r4, #211]  ; 0xd3
    0.00 :	  9328:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  932c:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  9330:       ldr     r3, [r3, #2384] ; 0x950
    0.00 :	  9334:       cmp     r3, #255        ; 0xff
    0.00 :	  9338:       cmpne   r3, #6
    0.00 :	  933c:       bne     8d9c <tcp_packet+0x290>
    0.00 :	  9340:       ldr     r0, [fp, #-164] ; 0xffffff5c
    0.00 :	  9344:       mov     r3, r5
    0.00 :	  9348:       str     r7, [sp, #8]
    0.00 :	  934c:       mov     r2, r7
    0.00 :	  9350:       str     r7, [sp, #4]
    0.00 :	  9354:       movw    ip, #0
    0.00 :	  9358:       str     r7, [sp]
    0.00 :	  935c:       movt    ip, #0
    0.00 :	  9360:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  9364:       str     ip, [sp, #12]
    0.00 :	  9368:       bl      0 <nf_log_packet>
    0.00 :	  936c:       mov     r0, #1
    0.00 :	  9370:       b       8da0 <tcp_packet+0x294>
    0.00 :	  9374:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  9378:       ldr     r8, [r9, #8]
    0.00 :	  937c:       cmp     r2, #2
    0.00 :	  9380:       str     r7, [fp, #-156] ; 0xffffff64
    0.00 :	  9384:       rev     r8, r8
    0.00 :	  9388:       movhi   r2, #0
    0.00 :	  938c:       movls   r2, #1
    0.00 :	  9390:       mov     r1, r2
    0.00 :	  9394:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  9398:       mov     r2, #20
    0.00 :	  939c:       mla     r1, r2, r1, r4
    0.00 :	  93a0:       mul     r7, r2, sl
    0.00 :	  93a4:       ldrb    r2, [r1, #169]  ; 0xa9
    0.00 :	  93a8:       b       8e8c <tcp_packet+0x380>
    0.00 :	  93ac:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  93b0:       mov     r3, #20
    0.00 :	  93b4:       mov     r2, #0
    0.00 :	  93b8:       mla     r1, r3, r1, r4
    0.00 :	  93bc:       mla     r3, r3, sl, r4
    0.00 :	  93c0:       strb    r2, [r1, #168]  ; 0xa8
    0.00 :	  93c4:       strb    r2, [r3, #168]  ; 0xa8
    0.00 :	  93c8:       b       8fb8 <tcp_packet+0x4ac>
    0.00 :	  93cc:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  93d0:       mov     r7, #20
    0.00 :	  93d4:       ldr     r8, [r9, #8]
    0.00 :	  93d8:       mov     r1, #3
    0.00 :	  93dc:       cmp     r2, #2
    0.00 :	  93e0:       str     r1, [fp, #-148] ; 0xffffff6c
    0.00 :	  93e4:       rev     r8, r8
    0.00 :	  93e8:       mov     r1, #6
    0.00 :	  93ec:       movhi   r2, #0
    0.00 :	  93f0:       movls   r2, #1
    0.00 :	  93f4:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  93f8:       mla     r2, r7, r2, r4
    0.00 :	  93fc:       str     r1, [fp, #-136] ; 0xffffff78
    0.00 :	  9400:       mul     r7, r7, sl
    0.00 :	  9404:       mov     r1, #7
    0.00 :	  9408:       str     r1, [fp, #-156] ; 0xffffff64
    0.00 :	  940c:       ldrb    r2, [r2, #169]  ; 0xa9
    0.00 :	  9410:       b       8e8c <tcp_packet+0x380>
    0.00 :	  9414:       nop     {0}
    0.00 :	  9418:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  941c:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  9420:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  9424:       ldr     r3, [r3, #2384] ; 0x950
    0.00 :	  9428:       cmp     r3, #255        ; 0xff
    0.00 :	  942c:       cmpne   r3, #6
    0.00 :	  9430:       beq     9d14 <tcp_packet+0x1208>
    0.00 :	  9434:       mvn     r0, #0
    0.00 :	  9438:       b       8da0 <tcp_packet+0x294>
    0.00 :	  943c:       mov     r6, #1
    0.00 :	  9440:       b       913c <tcp_packet+0x630>
    0.00 :	  9444:       ldrb    r3, [r4, #192]  ; 0xc0
    0.00 :	  9448:       cmp     r3, #1
    0.00 :	  944c:       beq     9474 <tcp_packet+0x968>
    0.00 :	  9450:       cmp     r3, #2
    0.00 :	  9454:       movne   r3, #0
    0.00 :	  9458:       andeq   r3, sl, #1
    0.00 :	  945c:       cmp     r3, #0
    0.00 :	  9460:       bne     9480 <tcp_packet+0x974>
    0.00 :	  9464:       ldrb    r2, [r9, #13]
    0.00 :	  9468:       tst     r2, #16
    0.00 :	  946c:       beq     8fdc <tcp_packet+0x4d0>
    0.00 :	  9470:       b       8fc4 <tcp_packet+0x4b8>
    0.00 :	  9474:       ldr     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  9478:       cmp     r3, #2
    0.00 :	  947c:       bhi     9464 <tcp_packet+0x958>
    0.00 :	  9480:       mov     r2, #20
    0.00 :	  9484:       ldr     r1, [fp, #-180] ; 0xffffff4c
    0.00 :	  9488:       mla     r2, r2, sl, r4
    0.00 :	  948c:       ldr     r3, [r2, #152]  ; 0x98
    0.00 :	  9490:       sub     r3, r3, r1
    0.00 :	  9494:       cmp     r3, #0
    0.00 :	  9498:       bge     9464 <tcp_packet+0x958>
    0.00 :	  949c:       ldr     r0, [fp, #-188] ; 0xffffff44
    0.00 :	  94a0:       str     r1, [r2, #156]  ; 0x9c
    0.00 :	  94a4:       cmp     r0, #0
    0.00 :	  94a8:       str     r1, [r2, #152]  ; 0x98
    0.00 :	  94ac:       ldr     r3, [fp, #-204] ; 0xffffff34
    0.00 :	  94b0:       mov     r1, r6
    0.00 :	  94b4:       moveq   r0, #1
    0.00 :	  94b8:       str     r0, [r2, #160]  ; 0xa0
    0.00 :	  94bc:       mov     r2, r9
    0.00 :	  94c0:       mov     r0, r5
    0.00 :	  94c4:       bl      8750 <tcp_options>
    0.00 :	  94c8:       b       9464 <tcp_packet+0x958>
    0.00 :	  94cc:       mov     ip, #20
    0.00 :	  94d0:       movw    r1, #0
    0.00 :	  94d4:       mla     r3, ip, sl, r4
    0.00 :	  94d8:       movt    r1, #0
    0.00 :	  94dc:       ldr     r0, [pc, #2824] ; 9fec <tcp_packet+0x14e0>
    0.00 :	  94e0:       str     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  94e4:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  94e8:       mla     ip, ip, r3, r4
    0.00 :	  94ec:       ldr     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  94f0:       ldr     r3, [r3, #156]  ; 0x9c
    0.00 :	  94f4:       ldrb    r8, [ip, #168]  ; 0xa8
    0.00 :	  94f8:       mov     lr, r3
    0.00 :	  94fc:       ldr     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  9500:       ldr     r2, [r3, #152]  ; 0x98
    0.00 :	  9504:       ldr     r3, [ip, #160]  ; 0xa0
    0.00 :	  9508:       str     r3, [fp, #-208] ; 0xffffff30
    0.00 :	  950c:       mov     r3, lr
    0.00 :	  9510:       ldr     lr, [ip, #156]  ; 0x9c
    0.00 :	  9514:       ldr     ip, [ip, #152]  ; 0x98
    0.00 :	  9518:       str     r8, [sp, #20]
    0.00 :	  951c:       str     lr, [sp, #12]
    0.00 :	  9520:       ldr     r8, [fp, #-208] ; 0xffffff30
    0.00 :	  9524:       ldr     lr, [fp, #-192] ; 0xffffff40
    0.00 :	  9528:       str     r8, [sp, #16]
    0.00 :	  952c:       ldrb    r8, [lr, #168]  ; 0xa8
    0.00 :	  9530:       ldr     lr, [lr, #160]  ; 0xa0
    0.00 :	  9534:       stmib   sp, {r8, ip}
    0.00 :	  9538:       str     lr, [sp]
    0.00 :	  953c:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9540:       b       8f40 <tcp_packet+0x434>
    0.00 :	  9544:       ldr     r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  9548:       movw    r1, #0
    0.00 :	  954c:       ldr     r2, [fp, #-176] ; 0xffffff50
    0.00 :	  9550:       movt    r1, #0
    0.00 :	  9554:       str     r7, [sp, #8]
    0.00 :	  9558:       str     r3, [sp, #16]
    0.00 :	  955c:       ldr     r3, [fp, #-188] ; 0xffffff44
    0.00 :	  9560:       str     r2, [sp, #4]
    0.00 :	  9564:       str     r7, [sp]
    0.00 :	  9568:       str     r3, [sp, #12]
    0.00 :	  956c:       ldr     r2, [fp, #-152] ; 0xffffff68
    0.00 :	  9570:       ldr     r3, [fp, #-184] ; 0xffffff48
    0.00 :	  9574:       ldr     r0, [pc, #2676] ; 9ff0 <tcp_packet+0x14e4>
    0.00 :	  9578:       bl      0 <__dynamic_pr_debug>
    0.00 :	  957c:       b       8f3c <tcp_packet+0x430>
    0.00 :	  9580:       movw    r1, #0
    0.00 :	  9584:       ldr     r0, [pc, #2664] ; 9ff4 <tcp_packet+0x14e8>
    0.00 :	  9588:       movt    r1, #0
    0.00 :	  958c:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9590:       b       8f38 <tcp_packet+0x42c>
    0.00 :	  9594:       movw    r1, #0
    0.00 :	  9598:       ldr     r0, [pc, #2648] ; 9ff8 <tcp_packet+0x14ec>
    0.00 :	  959c:       movt    r1, #0
    0.00 :	  95a0:       bl      0 <__dynamic_pr_debug>
    0.00 :	  95a4:       b       8f34 <tcp_packet+0x428>
    0.00 :	  95a8:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  95ac:       movw    r1, #0
    0.00 :	  95b0:       ldrb    r2, [r9, #13]
    0.00 :	  95b4:       movt    r1, #0
    0.00 :	  95b8:       str     r3, [sp, #12]
    0.00 :	  95bc:       ubfx    r0, r2, #2, #1
    0.00 :	  95c0:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  95c4:       str     r0, [sp, #4]
    0.00 :	  95c8:       ldr     r0, [pc, #2604] ; 9ffc <tcp_packet+0x14f0>
    0.00 :	  95cc:       str     r3, [sp, #8]
    0.00 :	  95d0:       and     r3, r2, #1
    0.00 :	  95d4:       str     r3, [sp]
    0.00 :	  95d8:       ubfx    r3, r2, #4, #1
    0.00 :	  95dc:       ubfx    r2, r2, #1, #1
    0.00 :	  95e0:       bl      0 <__dynamic_pr_debug>
    0.00 :	  95e4:       b       9180 <tcp_packet+0x674>
    0.00 :	  95e8:       movw    r1, #0
    0.00 :	  95ec:       ldr     r0, [pc, #2572] ; a000 <tcp_packet+0x14f4>
    0.00 :	  95f0:       movt    r1, #0
    0.00 :	  95f4:       bl      0 <__dynamic_pr_debug>
    0.00 :	  95f8:       b       917c <tcp_packet+0x670>
    0.00 :	  95fc:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  9600:       tst     r3, #4
    0.00 :	  9604:       bne     9260 <tcp_packet+0x754>
    0.00 :	  9608:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  960c:       sub     r8, r3, #2
    0.00 :	  9610:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  9614:       cmp     r8, #1
    0.00 :	  9618:       cmpls   r3, #3
    0.00 :	  961c:       bne     9260 <tcp_packet+0x754>
    0.00 :	  9620:       add     r1, r4, #112    ; 0x70
    0.00 :	  9624:       mov     r0, #2
    0.00 :	  9628:       bl      0 <_set_bit>
    0.00 :	  962c:       ldr     r3, [r4, #120]  ; 0x78
    0.00 :	  9630:       ldr     r3, [r3, #2420] ; 0x974
    0.00 :	  9634:       cmp     r3, #0
    0.00 :	  9638:       beq     9260 <tcp_packet+0x754>
    0.00 :	  963c:       ldr     r3, [r4, #144]  ; 0x90
    0.00 :	  9640:       cmp     r3, #0
    0.00 :	  9644:       beq     9260 <tcp_packet+0x754>
    0.00 :	  9648:       ldrh    r1, [r3, #16]
    0.00 :	  964c:       cmp     r1, #0
    0.00 :	  9650:       beq     9260 <tcp_packet+0x754>
    0.00 :	  9654:       adds    r1, r3, r1
    0.00 :	  9658:       beq     9260 <tcp_packet+0x754>
    0.00 :	  965c:       mov     r0, #4
    0.00 :	  9660:       bl      0 <_set_bit>
    0.00 :	  9664:       b       9260 <tcp_packet+0x754>
    0.00 :	  9668:       movw    r1, #0
    0.00 :	  966c:       ldr     r0, [pc, #2448] ; a004 <tcp_packet+0x14f8>
    0.00 :	  9670:       movt    r1, #0
    0.00 :	  9674:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9678:       b       9030 <tcp_packet+0x524>
    0.00 :	  967c:       ldr     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  9680:       mov     r0, #20
    0.00 :	  9684:       ldr     r3, [r7, #152]  ; 0x98
    0.00 :	  9688:       movw    r1, #0
    0.00 :	  968c:       ldr     ip, [r7, #156]  ; 0x9c
    0.00 :	  9690:       movt    r1, #0
    0.00 :	  9694:       mla     r2, r0, r2, r4
    0.00 :	  9698:       mla     r0, r0, sl, r4
    0.00 :	  969c:       ldr     r7, [r2, #160]  ; 0xa0
    0.00 :	  96a0:       ldr     lr, [r2, #156]  ; 0x9c
    0.00 :	  96a4:       ldr     r2, [r2, #152]  ; 0x98
    0.00 :	  96a8:       str     r7, [sp, #16]
    0.00 :	  96ac:       str     lr, [sp, #12]
    0.00 :	  96b0:       str     r2, [sp, #8]
    0.00 :	  96b4:       mov     r2, r6
    0.00 :	  96b8:       ldr     lr, [r0, #160]  ; 0xa0
    0.00 :	  96bc:       str     ip, [sp]
    0.00 :	  96c0:       ldr     r0, [pc, #2368] ; a008 <tcp_packet+0x14fc>
    0.00 :	  96c4:       str     lr, [sp, #4]
    0.00 :	  96c8:       bl      0 <__dynamic_pr_debug>
    0.00 :	  96cc:       b       9140 <tcp_packet+0x634>
    0.00 :	  96d0:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  96d4:       mov     ip, #20
    0.00 :	  96d8:       mla     lr, ip, sl, r4
    0.00 :	  96dc:       movw    r1, #0
    0.00 :	  96e0:       mla     ip, ip, r3, r4
    0.00 :	  96e4:       movt    r1, #0
    0.00 :	  96e8:       ldr     r0, [pc, #2332] ; a00c <tcp_packet+0x1500>
    0.00 :	  96ec:       ldr     r3, [lr, #156]  ; 0x9c
    0.00 :	  96f0:       ldr     r2, [lr, #152]  ; 0x98
    0.00 :	  96f4:       ldrb    r8, [ip, #168]  ; 0xa8
    0.00 :	  96f8:       ldr     r7, [ip, #160]  ; 0xa0
    0.00 :	  96fc:       ldr     r6, [ip, #156]  ; 0x9c
    0.00 :	  9700:       ldr     ip, [ip, #152]  ; 0x98
    0.00 :	  9704:       str     r8, [sp, #20]
    0.00 :	  9708:       str     r7, [sp, #16]
    0.00 :	  970c:       str     r6, [sp, #12]
    0.00 :	  9710:       ldrb    r6, [lr, #168]  ; 0xa8
    0.00 :	  9714:       ldr     lr, [lr, #160]  ; 0xa0
    0.00 :	  9718:       stmib   sp, {r6, ip}
    0.00 :	  971c:       str     lr, [sp]
    0.00 :	  9720:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9724:       b       9038 <tcp_packet+0x52c>
    0.00 :	  9728:       ldr     r3, [fp, #-180] ; 0xffffff4c
    0.00 :	  972c:       movw    r1, #0
    0.00 :	  9730:       ldr     r2, [fp, #-176] ; 0xffffff50
    0.00 :	  9734:       movt    r1, #0
    0.00 :	  9738:       str     r7, [sp, #8]
    0.00 :	  973c:       str     r3, [sp, #16]
    0.00 :	  9740:       ldr     r3, [fp, #-188] ; 0xffffff44
    0.00 :	  9744:       str     r2, [sp, #4]
    0.00 :	  9748:       str     r7, [sp]
    0.00 :	  974c:       str     r3, [sp, #12]
    0.00 :	  9750:       ldr     r2, [fp, #-152] ; 0xffffff68
    0.00 :	  9754:       ldr     r3, [fp, #-184] ; 0xffffff48
    0.00 :	  9758:       ldr     r0, [pc, #2224] ; a010 <tcp_packet+0x1504>
    0.00 :	  975c:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9760:       b       9034 <tcp_packet+0x528>
    0.00 :	  9764:       mov     lr, #20
    0.00 :	  9768:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  976c:       mla     r2, lr, sl, r4
    0.00 :	  9770:       mov     r0, #464        ; 0x1d0
    0.00 :	  9774:       mla     lr, lr, r1, r4
    0.00 :	  9778:       movt    r0, #1
    0.00 :	  977c:       ldr     r7, [fp, #-152] ; 0xffffff68
    0.00 :	  9780:       movw    r1, #0
    0.00 :	  9784:       movt    r1, #0
    0.00 :	  9788:       ldr     ip, [r2, #160]  ; 0xa0
    0.00 :	  978c:       ldr     r2, [r2, #156]  ; 0x9c
    0.00 :	  9790:       cmp     ip, r0
    0.00 :	  9794:       ldr     lr, [lr, #152]  ; 0x98
    0.00 :	  9798:       movcc   ip, r0
    0.00 :	  979c:       mvn     r2, r2
    0.00 :	  97a0:       add     r2, r2, r7
    0.00 :	  97a4:       ldr     r7, [fp, #-176] ; 0xffffff50
    0.00 :	  97a8:       mvn     ip, ip
    0.00 :	  97ac:       add     ip, ip, lr
    0.00 :	  97b0:       sub     ip, ip, r7
    0.00 :	  97b4:       mvn     lr, lr
    0.00 :	  97b8:       add     lr, lr, r7
    0.00 :	  97bc:       ldr     r0, [pc, #2128] ; a014 <tcp_packet+0x1508>
    0.00 :	  97c0:       lsr     ip, ip, #31
    0.00 :	  97c4:       lsr     r2, r2, #31
    0.00 :	  97c8:       lsr     lr, lr, #31
    0.00 :	  97cc:       str     ip, [sp, #4]
    0.00 :	  97d0:       str     lr, [sp]
    0.00 :	  97d4:       bl      0 <__dynamic_pr_debug>
    0.00 :	  97d8:       b       9078 <tcp_packet+0x56c>
    0.00 :	  97dc:       mvn     r7, #19
    0.00 :	  97e0:       mov     r3, #4
    0.00 :	  97e4:       smlabb  r7, r3, r1, r7
    0.00 :	  97e8:       cmp     r7, #0
    0.00 :	  97ec:       beq     8f04 <tcp_packet+0x3f8>
    0.00 :	  97f0:       ldr     r3, [r5, #96]   ; 0x60
    0.00 :	  97f4:       add     r1, r6, #20
    0.00 :	  97f8:       sub     ip, ip, r3
    0.00 :	  97fc:       sub     ip, ip, r1
    0.00 :	  9800:       cmp     r7, ip
    0.00 :	  9804:       ble     9b84 <tcp_packet+0x1078>
    0.00 :	  9808:       cmp     r5, #0
    0.00 :	  980c:       beq     9b90 <tcp_packet+0x1084>
    0.00 :	  9810:       mov     r3, r7
    0.00 :	  9814:       mov     r0, r5
    0.00 :	  9818:       sub     r2, fp, #88     ; 0x58
    0.00 :	  981c:       bl      0 <skb_copy_bits>
    0.00 :	  9820:       cmp     r0, #0
    0.00 :	  9824:       subge   r1, fp, #88     ; 0x58
    0.00 :	  9828:       blt     9b90 <tcp_packet+0x1084>
    0.00 :	  982c:       cmp     r7, #12
    0.00 :	  9830:       beq     9e70 <tcp_packet+0x1364>
    0.00 :	  9834:       cmp     r7, #0
    0.00 :	  9838:       ble     8f04 <tcp_packet+0x3f8>
    0.00 :	  983c:       ldrb    r3, [r1]
    0.00 :	  9840:       cmp     r3, #0
    0.00 :	  9844:       beq     8f04 <tcp_packet+0x3f8>
    0.00 :	  9848:       cmp     r3, #1
    0.00 :	  984c:       addeq   r1, r1, #1
    0.00 :	  9850:       subeq   r7, r7, #1
    0.00 :	  9854:       beq     9834 <tcp_packet+0xd28>
    0.00 :	  9858:       cmp     r7, #1
    0.00 :	  985c:       beq     8f04 <tcp_packet+0x3f8>
    0.00 :	  9860:       ldrb    r2, [r1, #1]
    0.00 :	  9864:       cmp     r2, r7
    0.00 :	  9868:       movle   r0, #0
    0.00 :	  986c:       movgt   r0, #1
    0.00 :	  9870:       cmp     r2, #1
    0.00 :	  9874:       orrle   r0, r0, #1
    0.00 :	  9878:       cmp     r0, #0
    0.00 :	  987c:       bne     8f04 <tcp_packet+0x3f8>
    0.00 :	  9880:       sub     r3, r3, #5
    0.00 :	  9884:       cmp     r2, #9
    0.00 :	  9888:       clz     r3, r3
    0.00 :	  988c:       lsr     r3, r3, #5
    0.00 :	  9890:       movle   r3, #0
    0.00 :	  9894:       cmp     r3, #0
    0.00 :	  9898:       beq     98a8 <tcp_packet+0xd9c>
    0.00 :	  989c:       sub     r3, r2, #2
    0.00 :	  98a0:       ands    r0, r3, #7
    0.00 :	  98a4:       beq     9f64 <tcp_packet+0x1458>
    0.00 :	  98a8:       sub     r7, r7, r2
    0.00 :	  98ac:       add     r1, r1, r2
    0.00 :	  98b0:       cmp     r7, #0
    0.00 :	  98b4:       bgt     983c <tcp_packet+0xd30>
    0.00 :	  98b8:       b       8f04 <tcp_packet+0x3f8>
    0.00 :	  98bc:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  98c0:       mov     r2, #20
    0.00 :	  98c4:       ldr     r0, [fp, #-188] ; 0xffffff44
    0.00 :	  98c8:       ldr     r1, [fp, #-180] ; 0xffffff4c
    0.00 :	  98cc:       mla     r2, r2, r3, r4
    0.00 :	  98d0:       ldrb    r3, [r8, #168]  ; 0xa8
    0.00 :	  98d4:       str     r1, [r8, #152]  ; 0x98
    0.00 :	  98d8:       lsls    r3, r0, r3
    0.00 :	  98dc:       moveq   r3, #1
    0.00 :	  98e0:       str     r3, [r8, #160]  ; 0xa0
    0.00 :	  98e4:       add     r3, r1, r3
    0.00 :	  98e8:       str     r3, [r8, #156]  ; 0x9c
    0.00 :	  98ec:       ldr     r3, [r2, #160]  ; 0xa0
    0.00 :	  98f0:       cmp     r3, #0
    0.00 :	  98f4:       ldreq   r3, [fp, #-176] ; 0xffffff50
    0.00 :	  98f8:       streq   r3, [r2, #156]  ; 0x9c
    0.00 :	  98fc:       streq   r3, [r2, #152]  ; 0x98
    0.00 :	  9900:       b       9464 <tcp_packet+0x958>
    0.00 :	  9904:       ldr     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  9908:       cmp     r3, #2
    0.00 :	  990c:       movhi   r3, #0
    0.00 :	  9910:       movls   r3, #1
    0.00 :	  9914:       mov     r1, r3
    0.00 :	  9918:       str     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  991c:       mov     r3, #20
    0.00 :	  9920:       mla     r2, r3, sl, r4
    0.00 :	  9924:       mla     r3, r3, r1, r4
    0.00 :	  9928:       ldrb    r2, [r2, #169]  ; 0xa9
    0.00 :	  992c:       ldrb    r3, [r3, #169]  ; 0xa9
    0.00 :	  9930:       orr     r3, r2, r3
    0.00 :	  9934:       tst     r3, #4
    0.00 :	  9938:       bne     9954 <tcp_packet+0xe48>
    0.00 :	  993c:       ldrb    r3, [r4, #193]  ; 0xc1
    0.00 :	  9940:       cmp     sl, r3
    0.00 :	  9944:       bne     8d00 <tcp_packet+0x1f4>
    0.00 :	  9948:       ldrb    r3, [r4, #195]  ; 0xc3
    0.00 :	  994c:       cmp     r3, #4
    0.00 :	  9950:       bne     8d00 <tcp_packet+0x1f4>
    0.00 :	  9954:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  9958:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  995c:       mov     r2, #0
    0.00 :	  9960:       mov     r0, r4
    0.00 :	  9964:       mov     r1, r2
    0.00 :	  9968:       bl      1978 <nf_ct_delete>
    0.00 :	  996c:       cmp     r0, #0
    0.00 :	  9970:       moveq   r0, #0
    0.00 :	  9974:       mvnne   r0, #3
    0.00 :	  9978:       b       8da0 <tcp_packet+0x294>
    0.00 :	  997c:       cmp     r1, #0
    0.00 :	  9980:       movne   r3, #4
    0.00 :	  9984:       bne     99ac <tcp_packet+0xea0>
    0.00 :	  9988:       tst     r3, #2
    0.00 :	  998c:       ubfxne  r3, r3, #4, #1
    0.00 :	  9990:       bne     99ac <tcp_packet+0xea0>
    0.00 :	  9994:       tst     r3, #1
    0.00 :	  9998:       movne   r3, #2
    0.00 :	  999c:       bne     99ac <tcp_packet+0xea0>
    0.00 :	  99a0:       tst     r3, #16
    0.00 :	  99a4:       moveq   r3, #5
    0.00 :	  99a8:       movne   r3, #3
    0.00 :	  99ac:       ldr     r2, [fp, #-136] ; 0xffffff78
    0.00 :	  99b0:       movw    r1, #0
    0.00 :	  99b4:       ldr     r0, [pc, #1628] ; a018 <tcp_packet+0x150c>
    0.00 :	  99b8:       movt    r1, #0
    0.00 :	  99bc:       str     r2, [sp]
    0.00 :	  99c0:       mov     r2, sl
    0.00 :	  99c4:       bl      0 <__dynamic_pr_debug>
    0.00 :	  99c8:       b       9418 <tcp_packet+0x90c>
    0.00 :	  99cc:       mov     r2, #5
    0.00 :	  99d0:       str     r2, [fp, #-148] ; 0xffffff6c
    0.00 :	  99d4:       b       8bc8 <tcp_packet+0xbc>
    0.00 :	  99d8:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  99dc:       mov     ip, #0
    0.00 :	  99e0:       ldr     r0, [fp, #-164] ; 0xffffff5c
    0.00 :	  99e4:       movw    lr, #0
    0.00 :	  99e8:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  99ec:       movt    lr, #0
    0.00 :	  99f0:       add     r8, r8, r3, lsl #2
    0.00 :	  99f4:       str     ip, [sp, #8]
    0.00 :	  99f8:       mov     r3, r5
    0.00 :	  99fc:       str     ip, [sp, #4]
    0.00 :	  9a00:       ldr     r2, [r8, #24]
    0.00 :	  9a04:       str     lr, [sp, #12]
    0.00 :	  9a08:       str     ip, [sp]
    0.00 :	  9a0c:       str     r2, [sp, #16]
    0.00 :	  9a10:       mov     r2, ip
    0.00 :	  9a14:       bl      0 <nf_log_packet>
    0.00 :	  9a18:       mov     r0, #1
    0.00 :	  9a1c:       b       8da0 <tcp_packet+0x294>
    0.00 :	  9a20:       mov     ip, #0
    0.00 :	  9a24:       mov     r2, r9
    0.00 :	  9a28:       mov     r1, r6
    0.00 :	  9a2c:       sub     r3, fp, #108    ; 0x6c
    0.00 :	  9a30:       strb    ip, [r4, #210]  ; 0xd2
    0.00 :	  9a34:       mov     r0, r5
    0.00 :	  9a38:       strb    ip, [r4, #211]  ; 0xd3
    0.00 :	  9a3c:       str     ip, [fp, #-104] ; 0xffffff98
    0.00 :	  9a40:       str     ip, [fp, #-108] ; 0xffffff94
    0.00 :	  9a44:       str     ip, [fp, #-100] ; 0xffffff9c
    0.00 :	  9a48:       str     ip, [fp, #-96]  ; 0xffffffa0
    0.00 :	  9a4c:       str     ip, [fp, #-92]  ; 0xffffffa4
    0.00 :	  9a50:       bl      8750 <tcp_options>
    0.00 :	  9a54:       ldrb    r3, [fp, #-91]  ; 0xffffffa5
    0.00 :	  9a58:       tst     r3, #1
    0.00 :	  9a5c:       ldrbne  r2, [r4, #211]  ; 0xd3
    0.00 :	  9a60:       ldrbne  r1, [fp, #-92]  ; 0xffffffa4
    0.00 :	  9a64:       orrne   r2, r2, #1
    0.00 :	  9a68:       strbne  r1, [r4, #210]  ; 0xd2
    0.00 :	  9a6c:       strbne  r2, [r4, #211]  ; 0xd3
    0.00 :	  9a70:       tst     r3, #2
    0.00 :	  9a74:       ldrbne  r3, [r4, #211]  ; 0xd3
    0.00 :	  9a78:       orrne   r3, r3, #2
    0.00 :	  9a7c:       strbne  r3, [r4, #211]  ; 0xd3
    0.00 :	  9a80:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  9a84:       cmp     r3, #6
    0.00 :	  9a88:       ldrbeq  r3, [r4, #211]  ; 0xd3
    0.00 :	  9a8c:       orreq   r3, r3, #64     ; 0x40
    0.00 :	  9a90:       strbeq  r3, [r4, #211]  ; 0xd3
    0.00 :	  9a94:       b       8d80 <tcp_packet+0x274>
    0.00 :	  9a98:       ldr     r3, [fp, #-172] ; 0xffffff54
    0.00 :	  9a9c:       ldr     r3, [r3, #52]   ; 0x34
    0.00 :	  9aa0:       cmp     r6, r3
    0.00 :	  9aa4:       movcs   r6, r3
    0.00 :	  9aa8:       b       9260 <tcp_packet+0x754>
    0.00 :	  9aac:       ldrb    r3, [r4, #195]  ; 0xc3
    0.00 :	  9ab0:       cmp     r3, #0
    0.00 :	  9ab4:       bne     8d0c <tcp_packet+0x200>
    0.00 :	  9ab8:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  9abc:       cmp     sl, r2
    0.00 :	  9ac0:       beq     8d0c <tcp_packet+0x200>
    0.00 :	  9ac4:       ldr     r3, [r9, #8]
    0.00 :	  9ac8:       ldr     r1, [r4, #204]  ; 0xcc
    0.00 :	  9acc:       rev     r3, r3
    0.00 :	  9ad0:       cmp     r3, r1
    0.00 :	  9ad4:       bne     8d0c <tcp_packet+0x200>
    0.00 :	  9ad8:       mov     r8, #20
    0.00 :	  9adc:       ldr     r1, [fp, #-148] ; 0xffffff6c
    0.00 :	  9ae0:       mla     r2, r8, r2, r4
    0.00 :	  9ae4:       mov     r0, #2
    0.00 :	  9ae8:       mul     r7, r8, sl
    0.00 :	  9aec:       str     r0, [fp, #-156] ; 0xffffff64
    0.00 :	  9af0:       str     r1, [fp, #-136] ; 0xffffff78
    0.00 :	  9af4:       mov     r1, r8
    0.00 :	  9af8:       str     r3, [r2, #152]  ; 0x98
    0.00 :	  9afc:       add     r0, r7, #152    ; 0x98
    0.00 :	  9b00:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  9b04:       add     r0, r4, r0
    0.00 :	  9b08:       mla     r2, r8, r2, r4
    0.00 :	  9b0c:       str     r3, [r2, #156]  ; 0x9c
    0.00 :	  9b10:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  9b14:       ldrh    r3, [r4, #208]  ; 0xd0
    0.00 :	  9b18:       mla     r2, r8, r2, r4
    0.00 :	  9b1c:       cmp     r3, #0
    0.00 :	  9b20:       moveq   r3, #1
    0.00 :	  9b24:       str     r3, [r2, #160]  ; 0xa0
    0.00 :	  9b28:       ldrb    r3, [r4, #193]  ; 0xc1
    0.00 :	  9b2c:       ldrb    r2, [r4, #210]  ; 0xd2
    0.00 :	  9b30:       mla     r3, r8, r3, r4
    0.00 :	  9b34:       strb    r2, [r3, #168]  ; 0xa8
    0.00 :	  9b38:       ldrb    r2, [r4, #193]  ; 0xc1
    0.00 :	  9b3c:       ldrb    r3, [r4, #211]  ; 0xd3
    0.00 :	  9b40:       mla     r2, r8, r2, r4
    0.00 :	  9b44:       and     r3, r3, #191    ; 0xbf
    0.00 :	  9b48:       strb    r3, [r4, #211]  ; 0xd3
    0.00 :	  9b4c:       strb    r3, [r2, #169]  ; 0xa9
    0.00 :	  9b50:       bl      0 <__memzero>
    0.00 :	  9b54:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  9b58:       mla     r2, r8, r3, r4
    0.00 :	  9b5c:       ldr     r8, [r9, #8]
    0.00 :	  9b60:       ldrb    r3, [r9, #13]
    0.00 :	  9b64:       rev     r8, r8
    0.00 :	  9b68:       ldrb    r2, [r2, #169]  ; 0xa9
    0.00 :	  9b6c:       b       8e8c <tcp_packet+0x380>
    0.00 :	  9b70:       mov     r2, r5
    0.00 :	  9b74:       ldr     r1, [fp, #-144] ; 0xffffff70
    0.00 :	  9b78:       mov     r0, r4
    0.00 :	  9b7c:       bl      32f8 <nf_ct_kill_acct>
    0.00 :	  9b80:       b       8d9c <tcp_packet+0x290>
    0.00 :	  9b84:       ldr     r3, [r5, #176]  ; 0xb0
    0.00 :	  9b88:       adds    r1, r3, r1
    0.00 :	  9b8c:       bne     982c <tcp_packet+0xd20>
    0.00 :	  9b90:       .word   0xe7f001f2
    0.00 :	  9b94:       ldr     r0, [r7, #160]  ; 0xa0
    0.00 :	  9b98:       mov     r1, #464        ; 0x1d0
    0.00 :	  9b9c:       movt    r1, #1
    0.00 :	  9ba0:       cmp     r0, r1
    0.00 :	  9ba4:       movcs   r1, r0
    0.00 :	  9ba8:       mvn     r1, r1
    0.00 :	  9bac:       add     r1, r1, ip
    0.00 :	  9bb0:       ldr     ip, [fp, #-176] ; 0xffffff50
    0.00 :	  9bb4:       sub     r1, r1, ip
    0.00 :	  9bb8:       cmp     r1, #0
    0.00 :	  9bbc:       bge     90b4 <tcp_packet+0x5a8>
    0.00 :	  9bc0:       ldrb    r3, [r9, #13]
    0.00 :	  9bc4:       tst     r3, #2
    0.00 :	  9bc8:       ldrbeq  r3, [r7, #168]  ; 0xa8
    0.00 :	  9bcc:       ldreq   r1, [fp, #-188] ; 0xffffff44
    0.00 :	  9bd0:       lsleq   r3, r1, r3
    0.00 :	  9bd4:       ldr     r1, [fp, #-184] ; 0xffffff48
    0.00 :	  9bd8:       streq   r3, [fp, #-188] ; 0xffffff44
    0.00 :	  9bdc:       ldr     r3, [fp, #-176] ; 0xffffff50
    0.00 :	  9be0:       sub     r3, r3, r1
    0.00 :	  9be4:       ldr     r1, [fp, #-188] ; 0xffffff44
    0.00 :	  9be8:       add     r3, r3, r1
    0.00 :	  9bec:       cmp     r0, r3
    0.00 :	  9bf0:       movcc   r1, #20
    0.00 :	  9bf4:       mlacc   r1, r1, sl, r4
    0.00 :	  9bf8:       strcc   r3, [r1, #160]  ; 0xa0
    0.00 :	  9bfc:       ldr     r1, [fp, #-180] ; 0xffffff4c
    0.00 :	  9c00:       ldr     r3, [r7, #152]  ; 0x98
    0.00 :	  9c04:       sub     r3, r3, r1
    0.00 :	  9c08:       cmp     r3, #0
    0.00 :	  9c0c:       blt     9f14 <tcp_packet+0x1408>
    0.00 :	  9c10:       ldrb    r3, [r9, #13]
    0.00 :	  9c14:       tst     r3, #16
    0.00 :	  9c18:       beq     9c40 <tcp_packet+0x1134>
    0.00 :	  9c1c:       mov     r3, #20
    0.00 :	  9c20:       mla     r3, r3, sl, r4
    0.00 :	  9c24:       ldrb    r1, [r3, #169]  ; 0xa9
    0.00 :	  9c28:       tst     r1, #32
    0.00 :	  9c2c:       bne     9f48 <tcp_packet+0x143c>
    0.00 :	  9c30:       ldr     r0, [fp, #-184] ; 0xffffff48
    0.00 :	  9c34:       orr     r1, r1, #32
    0.00 :	  9c38:       strb    r1, [r3, #169]  ; 0xa9
    0.00 :	  9c3c:       str     r0, [r3, #164]  ; 0xa4
    0.00 :	  9c40:       ldr     r1, [fp, #-140] ; 0xffffff74
    0.00 :	  9c44:       mov     r3, #20
    0.00 :	  9c48:       mla     r3, r3, r1, r4
    0.00 :	  9c4c:       ldr     r1, [r3, #160]  ; 0xa0
    0.00 :	  9c50:       cmp     r1, #0
    0.00 :	  9c54:       beq     9c78 <tcp_packet+0x116c>
    0.00 :	  9c58:       ldr     r0, [r7, #156]  ; 0x9c
    0.00 :	  9c5c:       ldr     ip, [fp, #-180] ; 0xffffff4c
    0.00 :	  9c60:       sub     ip, r0, ip
    0.00 :	  9c64:       cmp     ip, #0
    0.00 :	  9c68:       sublt   r1, r1, r0
    0.00 :	  9c6c:       ldrlt   r0, [fp, #-180] ; 0xffffff4c
    0.00 :	  9c70:       addlt   r1, r1, r0
    0.00 :	  9c74:       strlt   r1, [r3, #160]  ; 0xa0
    0.00 :	  9c78:       ldr     r1, [fp, #-176] ; 0xffffff50
    0.00 :	  9c7c:       ldr     r3, [fp, #-188] ; 0xffffff44
    0.00 :	  9c80:       add     r3, r3, r1
    0.00 :	  9c84:       ldr     r1, [r2, #156]  ; 0x9c
    0.00 :	  9c88:       mvn     r0, r3
    0.00 :	  9c8c:       cmn     r0, r1
    0.00 :	  9c90:       bmi     9f30 <tcp_packet+0x1424>
    0.00 :	  9c94:       ldr     r3, [r2, #152]  ; 0x98
    0.00 :	  9c98:       ldr     r2, [fp, #-184] ; 0xffffff48
    0.00 :	  9c9c:       cmp     r2, r3
    0.00 :	  9ca0:       beq     9ef8 <tcp_packet+0x13ec>
    0.00 :	  9ca4:       ldr     r3, [fp, #-148] ; 0xffffff6c
    0.00 :	  9ca8:       cmp     r3, #3
    0.00 :	  9cac:       bne     943c <tcp_packet+0x930>
    0.00 :	  9cb0:       ldrb    r3, [r4, #193]  ; 0xc1
    0.00 :	  9cb4:       cmp     sl, r3
    0.00 :	  9cb8:       beq     9f98 <tcp_packet+0x148c>
    0.00 :	  9cbc:       ldr     r2, [fp, #-152] ; 0xffffff68
    0.00 :	  9cc0:       mov     r3, #0
    0.00 :	  9cc4:       strb    sl, [r4, #193]  ; 0xc1
    0.00 :	  9cc8:       mov     r6, #1
    0.00 :	  9ccc:       strb    r3, [r4, #194]  ; 0xc2
    0.00 :	  9cd0:       str     r2, [r4, #196]  ; 0xc4
    0.00 :	  9cd4:       ldr     r2, [fp, #-184] ; 0xffffff48
    0.00 :	  9cd8:       str     r2, [r4, #200]  ; 0xc8
    0.00 :	  9cdc:       ldr     r2, [fp, #-180] ; 0xffffff4c
    0.00 :	  9ce0:       str     r2, [r4, #204]  ; 0xcc
    0.00 :	  9ce4:       ldrh    r2, [fp, #-188] ; 0xffffff44
    0.00 :	  9ce8:       strh    r2, [r4, #208]  ; 0xd0
    0.00 :	  9cec:       b       913c <tcp_packet+0x630>
    0.00 :	  9cf0:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  9cf4:       ldr     r8, [fp, #-136] ; 0xffffff78
    0.00 :	  9cf8:       subs    r8, r3, r8
    0.00 :	  9cfc:       uxtb    r7, r3
    0.00 :	  9d00:       lsl     r6, r3, #2
    0.00 :	  9d04:       movne   r8, #1
    0.00 :	  9d08:       cmp     r3, #4
    0.00 :	  9d0c:       movne   r8, #0
    0.00 :	  9d10:       b       916c <tcp_packet+0x660>
    0.00 :	  9d14:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  9d18:       movw    r2, #0
    0.00 :	  9d1c:       ldr     r0, [fp, #-164] ; 0xffffff5c
    0.00 :	  9d20:       movt    r2, #0
    0.00 :	  9d24:       mov     r3, r5
    0.00 :	  9d28:       mov     ip, #0
    0.00 :	  9d2c:       str     ip, [sp, #8]
    0.00 :	  9d30:       str     ip, [sp, #4]
    0.00 :	  9d34:       str     r2, [sp, #12]
    0.00 :	  9d38:       mov     r2, ip
    0.00 :	  9d3c:       str     ip, [sp]
    0.00 :	  9d40:       bl      0 <nf_log_packet>
    0.00 :	  9d44:       b       9434 <tcp_packet+0x928>
    0.00 :	  9d48:       ldr     r2, [fp, #-144] ; 0xffffff70
    0.00 :	  9d4c:       mov     r1, #20
    0.00 :	  9d50:       cmp     r2, #2
    0.00 :	  9d54:       movhi   r2, #0
    0.00 :	  9d58:       movls   r2, #1
    0.00 :	  9d5c:       mla     r1, r1, r2, r4
    0.00 :	  9d60:       str     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  9d64:       ldrb    r2, [r1, #169]  ; 0xa9
    0.00 :	  9d68:       tst     r2, #32
    0.00 :	  9d6c:       beq     9d88 <tcp_packet+0x127c>
    0.00 :	  9d70:       ldr     r0, [r9, #4]
    0.00 :	  9d74:       ldr     ip, [r1, #164]  ; 0xa4
    0.00 :	  9d78:       rev     r1, r0
    0.00 :	  9d7c:       sub     r1, r1, ip
    0.00 :	  9d80:       cmp     r1, #0
    0.00 :	  9d84:       blt     9ea8 <tcp_packet+0x139c>
    0.00 :	  9d88:       ldr     r1, [r4, #112]  ; 0x70
    0.00 :	  9d8c:       tst     r1, #2
    0.00 :	  9d90:       beq     9dc8 <tcp_packet+0x12bc>
    0.00 :	  9d94:       ldrb    r1, [r4, #195]  ; 0xc3
    0.00 :	  9d98:       cmp     r1, #0
    0.00 :	  9d9c:       bne     9dc8 <tcp_packet+0x12bc>
    0.00 :	  9da0:       ldr     r8, [r9, #8]
    0.00 :	  9da4:       ldr     r1, [r4, #204]  ; 0xcc
    0.00 :	  9da8:       rev     r8, r8
    0.00 :	  9dac:       cmp     r8, r1
    0.00 :	  9db0:       beq     9e94 <tcp_packet+0x1388>
    0.00 :	  9db4:       mov     r7, #20
    0.00 :	  9db8:       mov     r1, #8
    0.00 :	  9dbc:       mul     r7, r7, sl
    0.00 :	  9dc0:       str     r1, [fp, #-156] ; 0xffffff64
    0.00 :	  9dc4:       b       8e8c <tcp_packet+0x380>
    0.00 :	  9dc8:       ldr     r1, [r4, #112]  ; 0x70
    0.00 :	  9dcc:       tst     r1, #4
    0.00 :	  9dd0:       bne     9de0 <tcp_packet+0x12d4>
    0.00 :	  9dd4:       ldrb    r1, [r4, #195]  ; 0xc3
    0.00 :	  9dd8:       cmp     r1, #3
    0.00 :	  9ddc:       beq     9da0 <tcp_packet+0x1294>
    0.00 :	  9de0:       ldr     r8, [r9, #8]
    0.00 :	  9de4:       mov     r7, #20
    0.00 :	  9de8:       mov     r1, #8
    0.00 :	  9dec:       str     r1, [fp, #-156] ; 0xffffff64
    0.00 :	  9df0:       mul     r7, r7, sl
    0.00 :	  9df4:       rev     r8, r8
    0.00 :	  9df8:       b       8e8c <tcp_packet+0x380>
    0.00 :	  9dfc:       cmp     r6, #0
    0.00 :	  9e00:       movweq  r3, #0
    0.00 :	  9e04:       movteq  r3, #0
    0.00 :	  9e08:       beq     9108 <tcp_packet+0x5fc>
    0.00 :	  9e0c:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  9e10:       ldr     r2, [fp, #-176] ; 0xffffff50
    0.00 :	  9e14:       mla     r1, r1, r3, r4
    0.00 :	  9e18:       ldr     r1, [r1, #152]  ; 0x98
    0.00 :	  9e1c:       mvn     r3, r1
    0.00 :	  9e20:       cmn     r3, r2
    0.00 :	  9e24:       movwpl  r3, #0
    0.00 :	  9e28:       movtpl  r3, #0
    0.00 :	  9e2c:       bpl     9108 <tcp_packet+0x5fc>
    0.00 :	  9e30:       ldr     r2, [r0, #160]  ; 0xa0
    0.00 :	  9e34:       mov     r0, #464        ; 0x1d0
    0.00 :	  9e38:       movt    r0, #1
    0.00 :	  9e3c:       movw    r3, #0
    0.00 :	  9e40:       cmp     r2, r0
    0.00 :	  9e44:       movt    r3, #0
    0.00 :	  9e48:       movcc   r2, r0
    0.00 :	  9e4c:       movw    r0, #0
    0.00 :	  9e50:       mvn     r2, r2
    0.00 :	  9e54:       add     r2, r2, r1
    0.00 :	  9e58:       ldr     r1, [fp, #-176] ; 0xffffff50
    0.00 :	  9e5c:       movt    r0, #0
    0.00 :	  9e60:       sub     r2, r2, r1
    0.00 :	  9e64:       cmp     r2, #0
    0.00 :	  9e68:       movlt   r3, r0
    0.00 :	  9e6c:       b       9108 <tcp_packet+0x5fc>
    0.00 :	  9e70:       ldr     r2, [r1]
    0.00 :	  9e74:       movw    r3, #257        ; 0x101
    0.00 :	  9e78:       movt    r3, #2568       ; 0xa08
    0.00 :	  9e7c:       cmp     r2, r3
    0.00 :	  9e80:       bne     983c <tcp_packet+0xd30>
    0.00 :	  9e84:       b       8f04 <tcp_packet+0x3f8>
    0.00 :	  9e88:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  9e8c:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  9e90:       b       9434 <tcp_packet+0x928>
    0.00 :	  9e94:       mov     r3, #8
    0.00 :	  9e98:       mov     r6, #32
    0.00 :	  9e9c:       mov     r8, #0
    0.00 :	  9ea0:       str     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  9ea4:       b       916c <tcp_packet+0x660>
    0.00 :	  9ea8:       ldr     r0, [fp, #-168] ; 0xffffff58
    0.00 :	  9eac:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  9eb0:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  9eb4:       ldr     r3, [r3, #2384] ; 0x950
    0.00 :	  9eb8:       cmp     r3, #255        ; 0xff
    0.00 :	  9ebc:       cmpne   r3, #6
    0.00 :	  9ec0:       bne     9434 <tcp_packet+0x928>
    0.00 :	  9ec4:       mov     ip, #0
    0.00 :	  9ec8:       movw    r2, #0
    0.00 :	  9ecc:       mov     r3, r5
    0.00 :	  9ed0:       ldr     r1, [fp, #-196] ; 0xffffff3c
    0.00 :	  9ed4:       ldr     r0, [fp, #-164] ; 0xffffff5c
    0.00 :	  9ed8:       movt    r2, #0
    0.00 :	  9edc:       str     ip, [sp, #8]
    0.00 :	  9ee0:       b       9d30 <tcp_packet+0x1224>
    0.00 :	  9ee4:       movw    r1, #0
    0.00 :	  9ee8:       ldr     r0, [pc, #300]  ; a01c <tcp_packet+0x1510>
    0.00 :	  9eec:       movt    r1, #0
    0.00 :	  9ef0:       bl      0 <__dynamic_pr_debug>
    0.00 :	  9ef4:       b       8e3c <tcp_packet+0x330>
    0.00 :	  9ef8:       ldr     r2, [fp, #-140] ; 0xffffff74
    0.00 :	  9efc:       mov     r3, #20
    0.00 :	  9f00:       mla     r3, r3, r2, r4
    0.00 :	  9f04:       ldrb    r2, [r3, #169]  ; 0xa9
    0.00 :	  9f08:       bic     r2, r2, #16
    0.00 :	  9f0c:       strb    r2, [r3, #169]  ; 0xa9
    0.00 :	  9f10:       b       9ca4 <tcp_packet+0x1198>
    0.00 :	  9f14:       mov     r3, #20
    0.00 :	  9f18:       str     r1, [r7, #152]  ; 0x98
    0.00 :	  9f1c:       mla     r3, r3, sl, r4
    0.00 :	  9f20:       ldrb    r1, [r3, #169]  ; 0xa9
    0.00 :	  9f24:       orr     r1, r1, #16
    0.00 :	  9f28:       strb    r1, [r3, #169]  ; 0xa9
    0.00 :	  9f2c:       b       9c10 <tcp_packet+0x1104>
    0.00 :	  9f30:       ldr     r1, [fp, #-188] ; 0xffffff44
    0.00 :	  9f34:       cmp     r1, #0
    0.00 :	  9f38:       ldreq   r3, [fp, #-176] ; 0xffffff50
    0.00 :	  9f3c:       addeq   r3, r3, #1
    0.00 :	  9f40:       str     r3, [r2, #156]  ; 0x9c
    0.00 :	  9f44:       b       9c94 <tcp_packet+0x1188>
    0.00 :	  9f48:       ldr     r1, [r3, #164]  ; 0xa4
    0.00 :	  9f4c:       ldr     r0, [fp, #-184] ; 0xffffff48
    0.00 :	  9f50:       sub     r1, r1, r0
    0.00 :	  9f54:       cmp     r1, #0
    0.00 :	  9f58:       movlt   r1, r0
    0.00 :	  9f5c:       strlt   r1, [r3, #164]  ; 0xa4
    0.00 :	  9f60:       b       9c40 <tcp_packet+0x1134>
    0.00 :	  9f64:       mov     ip, r8
    0.00 :	  9f68:       add     r2, r1, r0
    0.00 :	  9f6c:       add     r0, r0, #8
    0.00 :	  9f70:       ldr     r2, [r2, #6]
    0.00 :	  9f74:       rev     r2, r2
    0.00 :	  9f78:       sub     lr, ip, r2
    0.00 :	  9f7c:       cmp     lr, #0
    0.00 :	  9f80:       movlt   ip, r2
    0.00 :	  9f84:       cmp     r3, r0
    0.00 :	  9f88:       bgt     9f68 <tcp_packet+0x145c>
    0.00 :	  9f8c:       str     ip, [fp, #-176] ; 0xffffff50
    0.00 :	  9f90:       b       8f08 <tcp_packet+0x3fc>
    0.00 :	  9f94:       bl      0 <__stack_chk_fail>
    0.00 :	  9f98:       ldr     r3, [r4, #196]  ; 0xc4
    0.00 :	  9f9c:       ldr     r2, [fp, #-152] ; 0xffffff68
    0.00 :	  9fa0:       cmp     r2, r3
    0.00 :	  9fa4:       bne     9cbc <tcp_packet+0x11b0>
    0.00 :	  9fa8:       ldr     r3, [r4, #200]  ; 0xc8
    0.00 :	  9fac:       ldr     r2, [fp, #-184] ; 0xffffff48
    0.00 :	  9fb0:       cmp     r2, r3
    0.00 :	  9fb4:       bne     9cbc <tcp_packet+0x11b0>
    0.00 :	  9fb8:       ldr     r3, [r4, #204]  ; 0xcc
    0.00 :	  9fbc:       ldr     r2, [fp, #-180] ; 0xffffff4c
    0.00 :	  9fc0:       cmp     r2, r3
    0.00 :	  9fc4:       bne     9cbc <tcp_packet+0x11b0>
    0.00 :	  9fc8:       ldrh    r3, [r4, #208]  ; 0xd0
    0.00 :	  9fcc:       ldr     r2, [fp, #-188] ; 0xffffff44
    0.00 :	  9fd0:       cmp     r2, r3
    0.00 :	  9fd4:       bne     9cbc <tcp_packet+0x11b0>
    0.00 :	  9fd8:       ldrb    r3, [r4, #194]  ; 0xc2
    0.00 :	  9fdc:       mov     r6, #1
    0.00 :	  9fe0:       add     r3, r3, r6
    0.00 :	  9fe4:       strb    r3, [r4, #194]  ; 0xc2
    0.00 :	  9fe8:       b       913c <tcp_packet+0x630>
    0.00 :	  9fec:       .word   0x000002e0
    0.00 :	  9ff0:       .word   0x000002c0
    0.00 :	  9ff4:       .word   0x000002a0
    0.00 :	  9ff8:       .word   0x00000280
    0.00 :	  9ffc:       .word   0x000003c0
    0.00 :	  a000:       .word   0x000003a0
    0.00 :	  a004:       .word   0x00000300
    0.00 :	  a008:       .word   0x00000380
    0.00 :	  a00c:       .word   0x00000340
    0.00 :	  a010:       .word   0x00000320
    0.00 :	  a014:       .word   0x00000360
    0.00 :	  a018:       .word   0x00000240
    0.00 :	  a01c:       .word   0x00000260
 Percent |	Source code & Disassembly of nf_conntrack_ipv4.ko for cycles:ppp (1 samples)
--------------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000003dc <ipv4_confirm>:
         :	ipv4_confirm():
  100.00 :	  3dc:       mov     ip, sp
    0.00 :	  3e0:       push    {r4, r5, fp, ip, lr, pc}
    0.00 :	  3e4:       sub     fp, ip, #4
    0.00 :	  3e8:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  3ec:       bl      0 <__gnu_mcount_nc>
    0.00 :	  3f0:       ldrb    r2, [r1, #108]  ; 0x6c
    0.00 :	  3f4:       ldr     r4, [r1, #84]   ; 0x54
    0.00 :	  3f8:       mov     r5, r1
    0.00 :	  3fc:       lsr     r2, r2, #5
    0.00 :	  400:       cmp     r4, #0
    0.00 :	  404:       cmpne   r2, #4
    0.00 :	  408:       beq     490 <ipv4_confirm+0xb4>
    0.00 :	  40c:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  410:       tst     r3, #64 ; 0x40
    0.00 :	  414:       beq     43c <ipv4_confirm+0x60>
    0.00 :	  418:       ldr     r3, [r1, #20]
    0.00 :	  41c:       cmp     r3, #0
    0.00 :	  420:       beq     464 <ipv4_confirm+0x88>
    0.00 :	  424:       ldr     r1, [r1, #124]  ; 0x7c
    0.00 :	  428:       cmp     r1, #0
    0.00 :	  42c:       beq     464 <ipv4_confirm+0x88>
    0.00 :	  430:       ldr     r3, [r3, #336]  ; 0x150
    0.00 :	  434:       tst     r3, #8
    0.00 :	  438:       beq     464 <ipv4_confirm+0x88>
    0.00 :	  43c:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  440:       tst     r3, #4096       ; 0x1000
    0.00 :	  444:       bne     498 <ipv4_confirm+0xbc>
    0.00 :	  448:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  44c:       tst     r3, #8
    0.00 :	  450:       beq     4a0 <ipv4_confirm+0xc4>
    0.00 :	  454:       mov     r0, r4
    0.00 :	  458:       bl      0 <nf_ct_deliver_cached_events>
    0.00 :	  45c:       mov     r0, #1
    0.00 :	  460:       ldm     sp, {r4, r5, fp, sp, pc}
    0.00 :	  464:       ldrh    r3, [r5, #160]  ; 0xa0
    0.00 :	  468:       mov     r1, r4
    0.00 :	  46c:       ldr     ip, [r5, #172]  ; 0xac
    0.00 :	  470:       mov     r0, r5
    0.00 :	  474:       ldrb    r3, [ip, r3]
    0.00 :	  478:       and     r3, r3, #15
    0.00 :	  47c:       lsl     r3, r3, #2
    0.00 :	  480:       bl      0 <nf_ct_seq_adjust>
    0.00 :	  484:       cmp     r0, #0
    0.00 :	  488:       ldrne   r4, [r5, #84]   ; 0x54
    0.00 :	  48c:       beq     4b4 <ipv4_confirm+0xd8>
    0.00 :	  490:       cmp     r4, #0
    0.00 :	  494:       bne     43c <ipv4_confirm+0x60>
    0.00 :	  498:       mov     r0, #1
    0.00 :	  49c:       ldm     sp, {r4, r5, fp, sp, pc}
    0.00 :	  4a0:       mov     r0, r5
    0.00 :	  4a4:       bl      0 <__nf_conntrack_confirm>
    0.00 :	  4a8:       cmp     r0, #1
    0.00 :	  4ac:       beq     454 <ipv4_confirm+0x78>
    0.00 :	  4b0:       ldm     sp, {r4, r5, fp, sp, pc}
    0.00 :	  4b4:       mrs     ip, CPSR
    0.00 :	  4b8:       cpsid   i
    0.00 :	  4bc:       ldr     r3, [r4, #120]  ; 0x78
    0.00 :	  4c0:       mrc     15, 0, r1, cr13, cr0, {4}
    0.00 :	  4c4:       ldr     r3, [r3, #2416] ; 0x970
    0.00 :	  4c8:       add     r3, r3, #20
    0.00 :	  4cc:       ldr     r2, [r3, r1]
    0.00 :	  4d0:       add     r2, r2, #1
    0.00 :	  4d4:       str     r2, [r3, r1]
    0.00 :	  4d8:       msr     CPSR_c, ip
    0.00 :	  4dc:       ldm     sp, {r4, r5, fp, sp, pc}
 Percent |	Source code & Disassembly of nf_defrag_ipv4.ko for cycles:ppp (1 samples)
-----------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00000018 <ipv4_conntrack_defrag>:
         :	ipv4_conntrack_defrag():
    0.00 :	  18:   mov     ip, sp
    0.00 :	  1c:   push    {r4, r5, r6, r7, fp, ip, lr, pc}
    0.00 :	  20:   sub     fp, ip, #4
    0.00 :	  24:   push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  28:   bl      0 <__gnu_mcount_nc>
    0.00 :	  2c:   mov     r4, r1
    0.00 :	  30:   ldr     r1, [r1, #16]
    0.00 :	  34:   cmp     r1, #0
    0.00 :	  38:   beq     50 <ipv4_conntrack_defrag+0x38>
    0.00 :	  3c:   ldrb    r3, [r1, #18]
    0.00 :	  40:   mov     r0, #1
    0.00 :	  44:   lsl     r3, r0, r3
    0.00 :	  48:   bics    r3, r3, #4160   ; 0x1040
    0.00 :	  4c:   bne     74 <ipv4_conntrack_defrag+0x5c>
  100.00 :	  50:   ldrh    r1, [r4, #160]  ; 0xa0
    0.00 :	  54:   ldr     r3, [r4, #172]  ; 0xac
    0.00 :	  58:   add     r3, r3, r1
    0.00 :	  5c:   ldrh    r3, [r3, #6]
    0.00 :	  60:   bic     r3, r3, #192    ; 0xc0
    0.00 :	  64:   cmp     r3, #0
    0.00 :	  68:   bne     90 <ipv4_conntrack_defrag+0x78>
    0.00 :	  6c:   mov     r0, #1
    0.00 :	  70:   ldm     sp, {r4, r5, r6, r7, fp, sp, pc}
    0.00 :	  74:   ldrh    r3, [r1, #16]
    0.00 :	  78:   cmp     r3, #2
    0.00 :	  7c:   bne     50 <ipv4_conntrack_defrag+0x38>
    0.00 :	  80:   ldrb    r3, [r1, #540]  ; 0x21c
    0.00 :	  84:   lsrs    r3, r3, #7
    0.00 :	  88:   beq     50 <ipv4_conntrack_defrag+0x38>
    0.00 :	  8c:   ldm     sp, {r4, r5, r6, r7, fp, sp, pc}
    0.00 :	  90:   ldr     r1, [r4, #84]   ; 0x54
    0.00 :	  94:   ldr     ip, [r2]
    0.00 :	  98:   cmp     r1, #0
    0.00 :	  9c:   moveq   r5, r1
    0.00 :	  a0:   beq     c4 <ipv4_conntrack_defrag+0xac>
    0.00 :	  a4:   ldrb    r3, [r4, #108]  ; 0x6c
    0.00 :	  a8:   mov     r0, #1
    0.00 :	  ac:   ldrb    r5, [r1, #13]
    0.00 :	  b0:   cmp     r3, #95 ; 0x5f
    0.00 :	  b4:   movls   r3, #0
    0.00 :	  b8:   movhi   r3, #1
    0.00 :	  bc:   ands    r5, r5, r0, lsl r3
    0.00 :	  c0:   ldrhne  r5, [r1, #10]
    0.00 :	  c4:   ldr     r3, [r4, #88]   ; 0x58
    0.00 :	  c8:   cmp     r3, #0
    0.00 :	  cc:   beq     12c <ipv4_conntrack_defrag+0x114>
    0.00 :	  d0:   ldrb    r3, [r3, #5]
    0.00 :	  d4:   tst     r3, #2
    0.00 :	  d8:   addne   r5, r5, #131072 ; 0x20000
    0.00 :	  dc:   addne   r5, r5, #2
    0.00 :	  e0:   beq     12c <ipv4_conntrack_defrag+0x114>
    0.00 :	  e4:   mov     r0, #512        ; 0x200
    0.00 :	  e8:   ldr     r6, [r2, #24]
    0.00 :	  ec:   bl      0 <preempt_count_add>
    0.00 :	  f0:   mov     r2, r5
    0.00 :	  f4:   mov     r1, r4
    0.00 :	  f8:   mov     r0, r6
    0.00 :	  fc:   bl      0 <ip_defrag>
    0.00 :	  100:   mov     r1, #512        ; 0x200
    0.00 :	  104:   mov     r5, r0
    0.00 :	  108:   ldr     r0, [pc, #52]   ; 144 <ipv4_conntrack_defrag+0x12c>
    0.00 :	  10c:   bl      0 <__local_bh_enable_ip>
    0.00 :	  110:   cmp     r5, #0
    0.00 :	  114:   bne     13c <ipv4_conntrack_defrag+0x124>
    0.00 :	  118:   ldrb    r3, [r4, #108]  ; 0x6c
    0.00 :	  11c:   mov     r0, #1
    0.00 :	  120:   orr     r3, r3, #16
    0.00 :	  124:   strb    r3, [r4, #108]  ; 0x6c
    0.00 :	  128:   ldm     sp, {r4, r5, r6, r7, fp, sp, pc}
    0.00 :	  12c:   cmp     ip, #0
    0.00 :	  130:   addne   r5, r5, #65536  ; 0x10000
    0.00 :	  134:   add     r5, r5, #2
    0.00 :	  138:   b       e4 <ipv4_conntrack_defrag+0xcc>
    0.00 :	  13c:   mov     r0, #2
    0.00 :	  140:   ldm     sp, {r4, r5, r6, r7, fp, sp, pc}
    0.00 :	  144:   .word   0x000000e4
         :
         :	Disassembly of section .init.text:
         :
         :	00000018 <init_module+0x18>:
         :	init_module():
    0.00 :	  18:   bl      0 <nf_register_hooks>
    0.00 :	  1c:   ldm     sp, {fp, sp, pc}
         :
         :	Disassembly of section .exit.text:
         :
         :	00000018 <cleanup_module+0x18>:
         :	cleanup_module():
    0.00 :	  18:   bl      0 <nf_unregister_hooks>
  100.00 :	  1c:   ldm     sp, {fp, sp, pc}
 Percent |	Source code & Disassembly of nf_nat.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00000020 <nf_nat_bysource_hash>:
         :	nf_nat_bysource_hash():
    0.00 :	  20:       mov     ip, sp
    0.00 :	  24:       push    {r4, r5, fp, ip, lr, pc}
    0.00 :	  28:       sub     fp, ip, #4
    0.00 :	  2c:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  30:       bl      0 <__gnu_mcount_nc>
    0.00 :	  34:       ldr     ip, [r0, #120]  ; 0x78
    0.00 :	  38:       ldrb    r1, [r0, #62]   ; 0x3e
    0.00 :	  3c:       movw    r3, #48899      ; 0xbf03
    0.00 :	  40:       ldr     lr, [r0, #32]
    0.00 :	  44:       movt    r3, #57005      ; 0xdead
    0.00 :	  48:       eor     r1, r1, r2
    0.00 :	  4c:       ldr     r2, [r0, #24]
  100.00 :	  50:       eor     r1, r1, ip, lsr #6
    0.00 :	  54:       ldr     ip, [r0, #28]
    0.00 :	  58:       add     r3, r1, r3
    0.00 :	  5c:       sub     r2, r2, lr
    0.00 :	  60:       add     lr, r3, lr
    0.00 :	  64:       add     r3, r3, ip
    0.00 :	  68:       add     ip, r3, lr
    0.00 :	  6c:       ldr     r1, [r0, #40]   ; 0x28
    0.00 :	  70:       eor     r2, r2, lr, ror #28
    0.00 :	  74:       ldr     r4, [r0, #36]   ; 0x24
    0.00 :	  78:       sub     r3, r3, r2
    0.00 :	  7c:       add     r0, r2, ip
    0.00 :	  80:       eor     r2, r3, r2, ror #26
    0.00 :	  84:       sub     ip, ip, r2
    0.00 :	  88:       add     lr, r2, r0
    0.00 :	  8c:       eor     r3, ip, r2, ror #24
    0.00 :	  90:       sub     ip, r0, r3
    0.00 :	  94:       add     r2, r3, lr
    0.00 :	  98:       eor     ip, ip, r3, ror #16
    0.00 :	  9c:       sub     r3, lr, ip
    0.00 :	  a0:       add     r0, ip, r2
    0.00 :	  a4:       eor     ip, r3, ip, ror #13
    0.00 :	  a8:       add     r1, r0, r1
    0.00 :	  ac:       sub     r3, r2, ip
    0.00 :	  b0:       add     r2, r1, ip
    0.00 :	  b4:       eor     r3, r3, ip, ror #28
    0.00 :	  b8:       add     r0, r0, r4
    0.00 :	  bc:       eor     r3, r3, r2
    0.00 :	  c0:       sub     r3, r3, r2, ror #18
    0.00 :	  c4:       eor     r0, r0, r3
    0.00 :	  c8:       sub     r0, r0, r3, ror #21
    0.00 :	  cc:       eor     r2, r2, r0
    0.00 :	  d0:       sub     r2, r2, r0, ror #7
    0.00 :	  d4:       eor     r3, r3, r2
    0.00 :	  d8:       sub     r3, r3, r2, ror #16
    0.00 :	  dc:       eor     r0, r0, r3
    0.00 :	  e0:       sub     r0, r0, r3, ror #28
    0.00 :	  e4:       eor     r2, r2, r0
    0.00 :	  e8:       sub     r0, r2, r0, ror #18
    0.00 :	  ec:       eor     r3, r3, r0
    0.00 :	  f0:       sub     r0, r3, r0, ror #8
    0.00 :	  f4:       ldm     sp, {r4, r5, fp, sp, pc}
         :
         :	Disassembly of section .init.text:
         :
         :	00000020 <init_module+0x20>:
         :	init_module():
    0.00 :	  20:   subs    r4, r0, #0
    0.00 :	  24:   bne     e8 <init_module+0xe8>
    0.00 :	  28:   ldr     r0, [pc, #192]  ; f0 <init_module+0xf0>
    0.00 :	  2c:   bl      0 <nf_ct_extend_register>
    0.00 :	  30:   subs    r5, r0, #0
    0.00 :	  34:   bge     60 <init_module+0x60>
    0.00 :	  38:   mov     r2, r4
    0.00 :	  3c:   mov     r1, r4
    0.00 :	  40:   movw    r0, #0
    0.00 :	  44:   movt    r0, #0
    0.00 :	  48:   bl      0 <rhashtable_free_and_destroy>
    0.00 :	  4c:   movw    r0, #0
  100.00 :	  50:   movt    r0, #0
    0.00 :	  54:   mov     r4, r5
    0.00 :	  58:   bl      0 <printk>
    0.00 :	  5c:   b       e8 <init_module+0xe8>
    0.00 :	  60:   ldr     r0, [pc, #140]  ; f4 <init_module+0xf4>
    0.00 :	  64:   bl      0 <register_pernet_subsys>
    0.00 :	  68:   subs    r5, r0, #0
    0.00 :	  6c:   blt     c8 <init_module+0xc8>
    0.00 :	  70:   ldr     r0, [pc, #128]  ; f8 <init_module+0xf8>
    0.00 :	  74:   bl      0 <nf_ct_helper_expectfn_register>
    0.00 :	  78:   mov     r0, #384        ; 0x180
    0.00 :	  7c:   bl      0 <nf_ct_untracked_status_or>
    0.00 :	  80:   movw    r2, #0
    0.00 :	  84:   movt    r2, #0
    0.00 :	  88:   ldr     r3, [r2]
    0.00 :	  8c:   cmp     r3, #0
    0.00 :	  90:   beq     98 <init_module+0x98>
    0.00 :	  94:   .word   0xe7f001f2
    0.00 :	  98:   movw    r3, #0
    0.00 :	  9c:   movt    r3, #0
    0.00 :	  a0:   movw    r1, #0
    0.00 :	  a4:   movt    r1, #0
    0.00 :	  a8:   ldr     r0, [r3]
    0.00 :	  ac:   str     r1, [r2]
    0.00 :	  b0:   cmp     r0, #0
    0.00 :	  b4:   movweq  r2, #0
    0.00 :	  b8:   movteq  r2, #0
    0.00 :	  bc:   streq   r2, [r3]
    0.00 :	  c0:   beq     e8 <init_module+0xe8>
    0.00 :	  c4:   .word   0xe7f001f2
    0.00 :	  c8:   mov     r2, r4
    0.00 :	  cc:   mov     r1, r4
    0.00 :	  d0:   movw    r0, #0
    0.00 :	  d4:   movt    r0, #0
    0.00 :	  d8:   bl      0 <rhashtable_free_and_destroy>
    0.00 :	  dc:   ldr     r0, [pc, #12]   ; f0 <init_module+0xf0>
    0.00 :	  e0:   bl      0 <nf_ct_extend_unregister>
    0.00 :	  e4:   mov     r4, r5
    0.00 :	  e8:   mov     r0, r4
    0.00 :	  ec:   ldm     sp, {r4, r5, fp, sp, pc}
    0.00 :	  f0:   .word   0x00000068
    0.00 :	  f4:   .word   0x0000004c
         :
         :	Disassembly of section .exit.text:
         :
         :	00000020 <cleanup_module+0x20>:
         :	cleanup_module():
    0.00 :	  20:   .word   0xe59f0058
    0.00 :	  24:   bl      0 <nf_ct_helper_expectfn_unregister>
    0.00 :	  28:   movt    r5, #0
    0.00 :	  2c:   mov     r2, #0
    0.00 :	  30:   movw    r1, #0
    0.00 :	  34:   movw    r3, #0
    0.00 :	  38:   movt    r1, #0
    0.00 :	  3c:   movt    r3, #0
    0.00 :	  40:   mov     r4, r2
    0.00 :	  44:   str     r2, [r1]
    0.00 :	  48:   str     r2, [r3]
    0.00 :	  4c:   ldr     r0, [r5, r4, lsl #2]
  100.00 :	  50:   add     r4, r4, #1
    0.00 :	  54:   bl      0 <kfree>
    0.00 :	  58:   cmp     r4, #13
    0.00 :	  5c:   bne     4c <cleanup_module+0x4c>
    0.00 :	  60:   mov     r2, #0
    0.00 :	  64:   movw    r0, #0
    0.00 :	  68:   mov     r1, r2
    0.00 :	  6c:   movt    r0, #0
    0.00 :	  70:   bl      0 <rhashtable_free_and_destroy>
    0.00 :	  74:   ldm     sp, {r4, r5, fp, sp, pc}
    0.00 :	  78:   .word   0x0000004c
    0.00 :	  7c:   .word   0x00000068
    0.00 :	  80:   .word   0x00000068
 Percent |	Source code & Disassembly of nf_nat.ko for cycles:ppp (1 samples)
---------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000012ec <nf_nat_setup_info>:
         :	nf_nat_setup_info():
    0.00 :	  12ec:       mov     ip, sp
    0.00 :	  12f0:       push    {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
    0.00 :	  12f4:       sub     fp, ip, #4
    0.00 :	  12f8:       sub     sp, sp, #172    ; 0xac
    0.00 :	  12fc:       push    {lr}            ; (str lr, [sp, #-4]!)
    0.00 :	  1300:       bl      0 <__gnu_mcount_nc>
    0.00 :	  1304:       movw    r5, #0
    0.00 :	  1308:       movt    r5, #0
    0.00 :	  130c:       mov     r7, r1
    0.00 :	  1310:       mov     r6, r2
    0.00 :	  1314:       ldr     r3, [r5]
    0.00 :	  1318:       mov     r4, r0
    0.00 :	  131c:       str     r3, [fp, #-48]  ; 0xffffffd0
    0.00 :	  1320:       bl      1284 <nf_ct_nat_ext_add>
    0.00 :	  1324:       cmp     r0, #0
    0.00 :	  1328:       beq     1668 <nf_nat_setup_info+0x37c>
    0.00 :	  132c:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  1330:       cmp     r6, #0
    0.00 :	  1334:       andeq   r3, r3, #128    ; 0x80
    0.00 :	  1338:       andne   r3, r3, #256    ; 0x100
    0.00 :	  133c:       cmp     r3, #0
  100.00 :	  1340:       bne     1670 <nf_nat_setup_info+0x384>
    0.00 :	  1344:       add     r1, r4, #72     ; 0x48
    0.00 :	  1348:       sub     r0, fp, #168    ; 0xa8
    0.00 :	  134c:       bl      0 <nf_ct_invert_tuplepr>
    0.00 :	  1350:       mov     r2, r7
    0.00 :	  1354:       mov     r3, r4
    0.00 :	  1358:       sub     r1, fp, #168    ; 0xa8
    0.00 :	  135c:       sub     r0, fp, #128    ; 0x80
    0.00 :	  1360:       str     r6, [sp]
    0.00 :	  1364:       bl      a48 <get_unique_tuple>
    0.00 :	  1368:       ldr     r2, [fp, #-128] ; 0xffffff80
    0.00 :	  136c:       ldr     r3, [fp, #-168] ; 0xffffff58
    0.00 :	  1370:       cmp     r2, r3
    0.00 :	  1374:       beq     154c <nf_nat_setup_info+0x260>
    0.00 :	  1378:       sub     r1, fp, #128    ; 0x80
    0.00 :	  137c:       sub     r0, fp, #88     ; 0x58
    0.00 :	  1380:       bl      0 <nf_ct_invert_tuplepr>
    0.00 :	  1384:       sub     r1, fp, #88     ; 0x58
    0.00 :	  1388:       mov     r0, r4
    0.00 :	  138c:       bl      0 <nf_conntrack_alter_reply>
    0.00 :	  1390:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  1394:       cmp     r6, #0
    0.00 :	  1398:       orreq   r3, r3, #16
    0.00 :	  139c:       orrne   r3, r3, #32
    0.00 :	  13a0:       str     r3, [r4, #112]  ; 0x70
    0.00 :	  13a4:       ldr     r3, [r4, #144]  ; 0x90
    0.00 :	  13a8:       cmp     r3, #0
    0.00 :	  13ac:       beq     13e4 <nf_nat_setup_info+0xf8>
    0.00 :	  13b0:       ldrh    r2, [r3, #8]
    0.00 :	  13b4:       cmp     r2, #0
    0.00 :	  13b8:       beq     13e4 <nf_nat_setup_info+0xf8>
    0.00 :	  13bc:       cmn     r3, r2
    0.00 :	  13c0:       beq     13e4 <nf_nat_setup_info+0xf8>
    0.00 :	  13c4:       mov     r3, #32
    0.00 :	  13c8:       mov     r2, #0
    0.00 :	  13cc:       movt    r3, #520        ; 0x208
    0.00 :	  13d0:       mov     r1, #2
    0.00 :	  13d4:       mov     r0, r4
    0.00 :	  13d8:       bl      0 <__nf_ct_ext_add_length>
    0.00 :	  13dc:       cmp     r0, #0
    0.00 :	  13e0:       beq     1404 <nf_nat_setup_info+0x118>
    0.00 :	  13e4:       cmp     r6, #0
    0.00 :	  13e8:       beq     141c <nf_nat_setup_info+0x130>
    0.00 :	  13ec:       cmp     r6, #1
    0.00 :	  13f0:       beq     15e8 <nf_nat_setup_info+0x2fc>
    0.00 :	  13f4:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  13f8:       mov     r0, #1
    0.00 :	  13fc:       orr     r3, r3, #128    ; 0x80
    0.00 :	  1400:       str     r3, [r4, #112]  ; 0x70
    0.00 :	  1404:       ldr     r2, [fp, #-48]  ; 0xffffffd0
    0.00 :	  1408:       ldr     r3, [r5]
    0.00 :	  140c:       cmp     r2, r3
    0.00 :	  1410:       bne     178c <nf_nat_setup_info+0x4a0>
    0.00 :	  1414:       sub     sp, fp, #40     ; 0x28
    0.00 :	  1418:       ldm     sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, pc}
    0.00 :	  141c:       movw    r2, #0
    0.00 :	  1420:       movt    r2, #0
    0.00 :	  1424:       ldr     lr, [r4, #120]  ; 0x78
    0.00 :	  1428:       movw    r6, #0
    0.00 :	  142c:       ldr     r3, [r2, #8]
    0.00 :	  1430:       movt    r6, #0
    0.00 :	  1434:       ldr     sl, [r2, #44]   ; 0x2c
    0.00 :	  1438:       add     r0, r4, #10
    0.00 :	  143c:       ldr     r8, [r2, #4]
    0.00 :	  1440:       add     ip, r4, #24
    0.00 :	  1444:       str     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  1448:       add     r3, r4, #124    ; 0x7c
    0.00 :	  144c:       ldr     r9, [r2, #48]   ; 0x30
    0.00 :	  1450:       sub     r2, fp, #180    ; 0xb4
    0.00 :	  1454:       str     r3, [fp, #-196] ; 0xffffff3c
    0.00 :	  1458:       str     r0, [fp, #-172] ; 0xffffff54
    0.00 :	  145c:       str     r6, [fp, #-188] ; 0xffffff44
    0.00 :	  1460:       str     lr, [fp, #-180] ; 0xffffff4c
    0.00 :	  1464:       str     ip, [fp, #-176] ; 0xffffff50
    0.00 :	  1468:       str     r2, [fp, #-184] ; 0xffffff48
    0.00 :	  146c:       bl      0 <__rcu_read_lock>
    0.00 :	  1470:       ldr     r0, [r6, #28]
    0.00 :	  1474:       cmp     sl, #0
    0.00 :	  1478:       add     r3, r4, #124    ; 0x7c
    0.00 :	  147c:       ldr     r7, [r6]
    0.00 :	  1480:       sub     r0, r3, r0
    0.00 :	  1484:       beq     169c <nf_nat_setup_info+0x3b0>
    0.00 :	  1488:       cmp     r8, #0
    0.00 :	  148c:       ldr     r2, [r7, #8]
    0.00 :	  1490:       ldreq   r1, [r6, #20]
    0.00 :	  1494:       movne   r1, r8
    0.00 :	  1498:       blx     sl
    0.00 :	  149c:       ldr     r3, [r7]
    0.00 :	  14a0:       sub     r3, r3, #1
    0.00 :	  14a4:       and     sl, r3, r0, lsr #5
    0.00 :	  14a8:       ldr     r2, [r7, #12]
    0.00 :	  14ac:       ldr     r8, [r7, #16]
    0.00 :	  14b0:       and     r2, r2, sl
    0.00 :	  14b4:       add     r8, r8, r2, lsl #2
    0.00 :	  14b8:       mov     r0, r8
    0.00 :	  14bc:       bl      0 <_raw_spin_lock_bh>
    0.00 :	  14c0:       ldr     r2, [r7, #36]   ; 0x24
    0.00 :	  14c4:       cmp     r2, #0
    0.00 :	  14c8:       bne     1674 <nf_nat_setup_info+0x388>
    0.00 :	  14cc:       add     r3, r7, sl, lsl #2
    0.00 :	  14d0:       add     r2, sl, #16
    0.00 :	  14d4:       str     r2, [fp, #-200] ; 0xffffff38
    0.00 :	  14d8:       ldr     sl, [r3, #64]   ; 0x40
    0.00 :	  14dc:       ldr     r2, [r6, #12]
    0.00 :	  14e0:       tst     sl, #1
    0.00 :	  14e4:       str     r3, [fp, #-204] ; 0xffffff34
    0.00 :	  14e8:       str     r2, [fp, #-192] ; 0xffffff40
    0.00 :	  14ec:       bne     163c <nf_nat_setup_info+0x350>
    0.00 :	  14f0:       cmp     r9, #0
    0.00 :	  14f4:       beq     15fc <nf_nat_setup_info+0x310>
    0.00 :	  14f8:       ldr     r1, [r6, #28]
    0.00 :	  14fc:       sub     r0, fp, #188    ; 0xbc
    0.00 :	  1500:       sub     r1, sl, r1
    0.00 :	  1504:       blx     r9
    0.00 :	  1508:       cmp     r0, #0
    0.00 :	  150c:       bne     1624 <nf_nat_setup_info+0x338>
    0.00 :	  1510:       str     sl, [r4, #128]  ; 0x80
    0.00 :	  1514:       ldr     r3, [sl]
    0.00 :	  1518:       str     r3, [r4, #124]  ; 0x7c
    0.00 :	  151c:       dmb     ish
    0.00 :	  1520:       ldr     r3, [fp, #-200] ; 0xffffff38
    0.00 :	  1524:       mov     r6, #0
    0.00 :	  1528:       ldr     r2, [fp, #-196] ; 0xffffff3c
    0.00 :	  152c:       str     r2, [r7, r3, lsl #2]
    0.00 :	  1530:       mov     r0, r8
    0.00 :	  1534:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  1538:       bl      0 <__rcu_read_unlock>
    0.00 :	  153c:       cmp     r6, #0
    0.00 :	  1540:       movne   r0, #0
    0.00 :	  1544:       beq     13f4 <nf_nat_setup_info+0x108>
    0.00 :	  1548:       b       1404 <nf_nat_setup_info+0x118>
    0.00 :	  154c:       ldr     r2, [fp, #-124] ; 0xffffff84
    0.00 :	  1550:       ldr     r3, [fp, #-164] ; 0xffffff5c
    0.00 :	  1554:       cmp     r2, r3
    0.00 :	  1558:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  155c:       ldr     r2, [fp, #-120] ; 0xffffff88
    0.00 :	  1560:       ldr     r3, [fp, #-160] ; 0xffffff60
    0.00 :	  1564:       cmp     r2, r3
    0.00 :	  1568:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  156c:       ldr     r2, [fp, #-116] ; 0xffffff8c
    0.00 :	  1570:       ldr     r3, [fp, #-156] ; 0xffffff64
    0.00 :	  1574:       cmp     r2, r3
    0.00 :	  1578:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  157c:       ldr     r2, [fp, #-112] ; 0xffffff90
    0.00 :	  1580:       ldr     r3, [fp, #-152] ; 0xffffff68
    0.00 :	  1584:       cmp     r2, r3
    0.00 :	  1588:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  158c:       ldr     r2, [fp, #-108] ; 0xffffff94
    0.00 :	  1590:       ldr     r3, [fp, #-148] ; 0xffffff6c
    0.00 :	  1594:       cmp     r2, r3
    0.00 :	  1598:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  159c:       ldr     r2, [fp, #-104] ; 0xffffff98
    0.00 :	  15a0:       ldr     r3, [fp, #-144] ; 0xffffff70
    0.00 :	  15a4:       cmp     r2, r3
    0.00 :	  15a8:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  15ac:       ldr     r2, [fp, #-100] ; 0xffffff9c
    0.00 :	  15b0:       ldr     r3, [fp, #-140] ; 0xffffff74
    0.00 :	  15b4:       cmp     r2, r3
    0.00 :	  15b8:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  15bc:       ldr     r2, [fp, #-96]  ; 0xffffffa0
    0.00 :	  15c0:       ldr     r3, [fp, #-136] ; 0xffffff78
    0.00 :	  15c4:       cmp     r2, r3
    0.00 :	  15c8:       bne     1378 <nf_nat_setup_info+0x8c>
    0.00 :	  15cc:       ldr     r2, [fp, #-92]  ; 0xffffffa4
    0.00 :	  15d0:       ldr     r3, [fp, #-132] ; 0xffffff7c
    0.00 :	  15d4:       bic     r2, r2, #-16777216      ; 0xff000000
    0.00 :	  15d8:       bic     r3, r3, #-16777216      ; 0xff000000
    0.00 :	  15dc:       cmp     r2, r3
    0.00 :	  15e0:       beq     13e4 <nf_nat_setup_info+0xf8>
    0.00 :	  15e4:       b       1378 <nf_nat_setup_info+0x8c>
    0.00 :	  15e8:       ldr     r3, [r4, #112]  ; 0x70
    0.00 :	  15ec:       mov     r0, r6
    0.00 :	  15f0:       orr     r3, r3, #256    ; 0x100
    0.00 :	  15f4:       str     r3, [r4, #112]  ; 0x70
    0.00 :	  15f8:       b       1404 <nf_nat_setup_info+0x118>
    0.00 :	  15fc:       ldr     r2, [fp, #-188] ; 0xffffff44
    0.00 :	  1600:       ldr     ip, [r6, #28]
    0.00 :	  1604:       ldr     r1, [fp, #-184] ; 0xffffff48
    0.00 :	  1608:       ldr     r0, [r2, #24]
    0.00 :	  160c:       ldr     r2, [r2, #20]
    0.00 :	  1610:       sub     r0, r0, ip
    0.00 :	  1614:       add     r0, sl, r0
    0.00 :	  1618:       bl      0 <memcmp>
    0.00 :	  161c:       cmp     r0, #0
    0.00 :	  1620:       beq     1510 <nf_nat_setup_info+0x224>
    0.00 :	  1624:       ldr     sl, [sl]
    0.00 :	  1628:       ldr     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  162c:       tst     sl, #1
    0.00 :	  1630:       sub     r3, r3, #1
    0.00 :	  1634:       str     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  1638:       beq     14f0 <nf_nat_setup_info+0x204>
    0.00 :	  163c:       ldr     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  1640:       cmp     r3, #0
    0.00 :	  1644:       ble     1674 <nf_nat_setup_info+0x388>
    0.00 :	  1648:       ldr     r3, [r6, #32]
    0.00 :	  164c:       cmp     r3, #0
    0.00 :	  1650:       beq     16c4 <nf_nat_setup_info+0x3d8>
    0.00 :	  1654:       ldr     r2, [r6, #4]
    0.00 :	  1658:       cmp     r3, r2
    0.00 :	  165c:       bhi     16c4 <nf_nat_setup_info+0x3d8>
    0.00 :	  1660:       mvn     r6, #6
    0.00 :	  1664:       b       1530 <nf_nat_setup_info+0x244>
    0.00 :	  1668:       mov     r0, #1
    0.00 :	  166c:       b       1404 <nf_nat_setup_info+0x118>
    0.00 :	  1670:       .word   0xe7f001f2
    0.00 :	  1674:       mov     r0, r8
    0.00 :	  1678:       bl      0 <_raw_spin_unlock_bh>
    0.00 :	  167c:       bl      0 <__rcu_read_unlock>
    0.00 :	  1680:       ldr     r2, [fp, #-196] ; 0xffffff3c
    0.00 :	  1684:       sub     r1, fp, #180    ; 0xb4
    0.00 :	  1688:       movw    r0, #0
    0.00 :	  168c:       movt    r0, #0
    0.00 :	  1690:       bl      0 <rhashtable_insert_slow>
    0.00 :	  1694:       mov     r6, r0
    0.00 :	  1698:       b       153c <nf_nat_setup_info+0x250>
    0.00 :	  169c:       ldr     r3, [fp, #-192] ; 0xffffff40
    0.00 :	  16a0:       ldr     r2, [r7, #8]
    0.00 :	  16a4:       add     r0, r0, r3
    0.00 :	  16a8:       ldr     r1, [r6, #8]
    0.00 :	  16ac:       ldr     r3, [r6, #56]   ; 0x38
    0.00 :	  16b0:       blx     r3
    0.00 :	  16b4:       ldr     r3, [r7]
    0.00 :	  16b8:       sub     r3, r3, #1
    0.00 :	  16bc:       and     sl, r3, r0, lsr #5
    0.00 :	  16c0:       b       14a8 <nf_nat_setup_info+0x1bc>
    0.00 :	  16c4:       ldr     r3, [r6, #4]
    0.00 :	  16c8:       ldr     r2, [r7]
    0.00 :	  16cc:       cmp     r3, r2
    0.00 :	  16d0:       bls     16f0 <nf_nat_setup_info+0x404>
    0.00 :	  16d4:       ldr     r1, [r6, #36]   ; 0x24
    0.00 :	  16d8:       clz     r3, r1
    0.00 :	  16dc:       lsr     r3, r3, #5
    0.00 :	  16e0:       cmp     r2, r1
    0.00 :	  16e4:       orrcc   r3, r3, #1
    0.00 :	  16e8:       cmp     r3, #0
    0.00 :	  16ec:       bne     1674 <nf_nat_setup_info+0x388>
    0.00 :	  16f0:       ldr     r3, [fp, #-204] ; 0xffffff34
    0.00 :	  16f4:       ldr     r2, [r3, #64]   ; 0x40
    0.00 :	  16f8:       mov     r3, #0
    0.00 :	  16fc:       str     r2, [r4, #124]  ; 0x7c
    0.00 :	  1700:       str     r3, [r4, #128]  ; 0x80
    0.00 :	  1704:       dmb     ish
    0.00 :	  1708:       ldr     r1, [fp, #-200] ; 0xffffff38
    0.00 :	  170c:       ldr     r0, [fp, #-196] ; 0xffffff3c
    0.00 :	  1710:       ldr     r2, [pc, #120]  ; 1790 <nf_nat_setup_info+0x4a4>
    0.00 :	  1714:       str     r0, [r7, r1, lsl #2]
    0.00 :	  1718:       pldw    [r2]
    0.00 :	  171c:       ldrex   r1, [r2]
    0.00 :	  1720:       add     r1, r1, #1
    0.00 :	  1724:       strex   r0, r1, [r2]
    0.00 :	  1728:       teq     r0, #0
    0.00 :	  172c:       bne     171c <nf_nat_setup_info+0x430>
    0.00 :	  1730:       ldr     r0, [r7]
    0.00 :	  1734:       ldr     ip, [r6, #4]
    0.00 :	  1738:       lsr     r1, r0, #2
    0.00 :	  173c:       add     r1, r1, r1, lsl #1
    0.00 :	  1740:       cmp     ip, r1
    0.00 :	  1744:       movls   r6, r3
    0.00 :	  1748:       bls     1530 <nf_nat_setup_info+0x244>
    0.00 :	  174c:       ldr     r6, [r6, #36]   ; 0x24
    0.00 :	  1750:       clz     r1, r6
    0.00 :	  1754:       lsr     r1, r1, #5
    0.00 :	  1758:       cmp     r0, r6
    0.00 :	  175c:       orrcc   r1, r1, #1
    0.00 :	  1760:       cmp     r1, #0
    0.00 :	  1764:       moveq   r6, r1
    0.00 :	  1768:       beq     1530 <nf_nat_setup_info+0x244>
    0.00 :	  176c:       movw    r1, #0
    0.00 :	  1770:       movt    r1, #0
    0.00 :	  1774:       add     r2, r2, #68     ; 0x44
    0.00 :	  1778:       mov     r0, #2
    0.00 :	  177c:       ldr     r1, [r1]
    0.00 :	  1780:       mov     r6, r3
    0.00 :	  1784:       bl      0 <queue_work_on>
    0.00 :	  1788:       b       1530 <nf_nat_setup_info+0x244>
    0.00 :	  178c:       bl      0 <__stack_chk_fail>
    0.00 :	  1790:       .word   0x00000004
 Percent |	Source code & Disassembly of sg for cycles:ppp (1 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000126d4 <__acos_finite>:
         :	__ieee754_acos():
    0.00 :	  126d4:       push    {r4, r5, r6, r7, lr}
    0.00 :	  126d6:       movw    r2, #65535      ; 0xffff
    0.00 :	  126da:       vpush   {d8-d13}
    0.00 :	  126de:       movt    r2, #15495      ; 0x3c87
    0.00 :	  126e2:       sub     sp, #28
    0.00 :	  126e4:       vstr    d0, [sp]
    0.00 :	  126e8:       ldrd    r4, r5, [sp]
    0.00 :	  126ec:       bic.w   r3, r5, #2147483648     ; 0x80000000
    0.00 :	  126f0:       cmp     r3, r2
    0.00 :	  126f2:       ble.w   12a6c <__acos_finite+0x398>
    0.00 :	  126f6:       cmp.w   r3, #1069547520 ; 0x3fc00000
    0.00 :	  126fa:       vldr    d8, [sp]
    0.00 :	  126fe:       bge.w   128b2 <__acos_finite+0x1de>
    0.00 :	  12702:       vmul.f64        d7, d8, d8
    0.00 :	  12706:       movw    r2, #42136      ; 0xa498
    0.00 :	  1270a:       vldr    d5, [pc, #892]  ; 12a88 <__acos_finite+0x3b4>
    0.00 :	  1270e:       movt    r2, #6
    0.00 :	  12712:       movw    r3, #42128      ; 0xa490
    0.00 :	  12716:       movt    r3, #6
    0.00 :	  1271a:       vldr    d6, [pc, #884]  ; 12a90 <__acos_finite+0x3bc>
    0.00 :	  1271e:       vldr    d4, [pc, #888]  ; 12a98 <__acos_finite+0x3c4>
    0.00 :	  12722:       vldr    d9, [r2]
    0.00 :	  12726:       vldr    d3, [pc, #888]  ; 12aa0 <__acos_finite+0x3cc>
    0.00 :	  1272a:       vldr    d10, [r3]
    0.00 :	  1272e:       vmla.f64        d6, d7, d5
    0.00 :	  12732:       vldr    d5, [pc, #884]  ; 12aa8 <__acos_finite+0x3d4>
    0.00 :	  12736:       vmla.f64        d5, d6, d7
    0.00 :	  1273a:       vldr    d6, [pc, #884]  ; 12ab0 <__acos_finite+0x3dc>
    0.00 :	  1273e:       vmla.f64        d6, d5, d7
    0.00 :	  12742:       vmla.f64        d4, d6, d7
    0.00 :	  12746:       vsub.f64        d5, d9, d8
    0.00 :	  1274a:       vsub.f64        d6, d9, d5
    0.00 :	  1274e:       vmla.f64        d3, d4, d7
    0.00 :	  12752:       vldr    d4, [pc, #868]  ; 12ab8 <__acos_finite+0x3e4>
    0.00 :	  12756:       vsub.f64        d6, d6, d8
    0.00 :	  1275a:       vmul.f64        d2, d8, d7
    0.00 :	  1275e:       vadd.f64        d6, d6, d10
    0.00 :	  12762:       vmls.f64        d6, d3, d2
    0.00 :	  12766:       vadd.f64        d12, d5, d6
    0.00 :	  1276a:       vsub.f64        d5, d5, d12
    0.00 :	  1276e:       vadd.f64        d6, d5, d6
    0.00 :	  12772:       vmov.f64        d5, d12
    0.00 :	  12776:       vmla.f64        d5, d6, d4
    0.00 :	  1277a:       vcmp.f64        d12, d5
    0.00 :	  1277e:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12782:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12786:       vldr    d6, [pc, #824]  ; 12ac0 <__acos_finite+0x3ec>
    0.00 :	  1278a:       movw    r2, #42152      ; 0xa4a8
    0.00 :	  1278e:       movw    r3, #42144      ; 0xa4a0
    0.00 :	  12792:       movt    r2, #6
    0.00 :	  12796:       movt    r3, #6
    0.00 :	  1279a:       vldr    d3, [pc, #812]  ; 12ac8 <__acos_finite+0x3f4>
    0.00 :	  1279e:       vldr    d4, [pc, #816]  ; 12ad0 <__acos_finite+0x3fc>
    0.00 :	  127a2:       vmla.f64        d3, d7, d6
    0.00 :	  127a6:       vldr    d1, [pc, #816]  ; 12ad8 <__acos_finite+0x404>
    0.00 :	  127aa:       vldr    d5, [pc, #820]  ; 12ae0 <__acos_finite+0x40c>
    0.00 :	  127ae:       vldr    d6, [r2]
    0.00 :	  127b2:       vldr    d2, [r3]
    0.00 :	  127b6:       vldr    d11, [pc, #816] ; 12ae8 <__acos_finite+0x414>
    0.00 :	  127ba:       vldr    d12, [pc, #820] ; 12af0 <__acos_finite+0x41c>
    0.00 :	  127be:       vldr    d13, [pc, #824] ; 12af8 <__acos_finite+0x424>
    0.00 :	  127c2:       vmla.f64        d4, d3, d7
    0.00 :	  127c6:       vmla.f64        d5, d4, d7
    0.00 :	  127ca:       vadd.f64        d4, d8, d1
    0.00 :	  127ce:       vsub.f64        d1, d4, d1
    0.00 :	  127d2:       vmov.f64        d4, #96 ; 0x3f000000  0.5
    0.00 :	  127d6:       vmul.f64        d4, d1, d4
    0.00 :	  127da:       vmla.f64        d11, d5, d7
    0.00 :	  127de:       vadd.f64        d3, d6, d2
    0.00 :	  127e2:       vsub.f64        d5, d8, d1
    0.00 :	  127e6:       vmul.f64        d4, d4, d8
    0.00 :	  127ea:       vmul.f64        d3, d3, d5
    0.00 :	  127ee:       vmla.f64        d4, d3, d5
    0.00 :	  127f2:       vmla.f64        d12, d11, d7
    0.00 :	  127f6:       vmov.f64        d3, d4
    0.00 :	  127fa:       vmul.f64        d4, d1, d1
    0.00 :	  127fe:       vmul.f64        d12, d12, d7
    0.00 :	  12802:       vmul.f64        d1, d4, d1
    0.00 :	  12806:       vmul.f64        d12, d12, d7
    0.00 :	  1280a:       vmul.f64        d4, d3, d5
    0.00 :	  1280e:       vmul.f64        d6, d1, d6
    0.00 :	  12812:       vmla.f64        d4, d12, d8
    0.00 :	  12816:       vadd.f64        d12, d8, d6
    0.00 :	  1281a:       vsub.f64        d11, d9, d12
    0.00 :	  1281e:       vmla.f64        d4, d1, d2
    0.00 :	  12822:       vsub.f64        d5, d8, d12
    0.00 :	  12826:       vsub.f64        d7, d9, d11
    0.00 :	  1282a:       vadd.f64        d6, d5, d6
    0.00 :	  1282e:       vsub.f64        d7, d7, d12
    0.00 :	  12832:       vadd.f64        d4, d6, d4
    0.00 :	  12836:       vadd.f64        d7, d7, d10
    0.00 :	  1283a:       vsub.f64        d7, d7, d4
    0.00 :	  1283e:       vadd.f64        d12, d11, d7
    0.00 :	  12842:       vsub.f64        d11, d11, d12
    0.00 :	  12846:       vadd.f64        d7, d11, d7
    0.00 :	  1284a:       vmov.f64        d6, d12
    0.00 :	  1284e:       vmla.f64        d6, d7, d13
    0.00 :	  12852:       vcmp.f64        d12, d6
    0.00 :	  12856:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1285a:       beq.n   128a6 <__acos_finite+0x1d2>
    0.00 :	  1285c:       add     r0, sp, #8
    0.00 :	  1285e:       vldr    d1, [pc, #672]  ; 12b00 <__acos_finite+0x42c>
    0.00 :	  12862:       bl      1b000 <__doasin>
    0.00 :	  12866:       vldr    d4, [sp, #8]
    0.00 :	  1286a:       vldr    d7, [sp, #16]
    0.00 :	  1286e:       vsub.f64        d5, d9, d4
    0.00 :	  12872:       vldr    d6, [pc, #660]  ; 12b08 <__acos_finite+0x434>
    0.00 :	  12876:       vsub.f64        d9, d9, d5
    0.00 :	  1287a:       vsub.f64        d10, d10, d7
    0.00 :	  1287e:       vsub.f64        d9, d9, d4
    0.00 :	  12882:       vadd.f64        d9, d10, d9
    0.00 :	  12886:       vadd.f64        d12, d5, d9
    0.00 :	  1288a:       vsub.f64        d5, d5, d12
    0.00 :	  1288e:       vadd.f64        d9, d5, d9
    0.00 :	  12892:       vmov.f64        d7, d12
    0.00 :	  12896:       vmla.f64        d7, d9, d6
    0.00 :	  1289a:       vcmp.f64        d12, d7
    0.00 :	  1289e:       vmrs    APSR_nzcv, fpscr
    0.00 :	  128a2:       bne.w   1300c <__acos_finite+0x938>
    0.00 :	  128a6:       vmov.f64        d0, d12
    0.00 :	  128aa:       add     sp, #28
    0.00 :	  128ac:       vpop    {d8-d13}
    0.00 :	  128b0:       pop     {r4, r5, r6, r7, pc}
    0.00 :	  128b2:       movw    r2, #65535      ; 0xffff
    0.00 :	  128b6:       movt    r2, #16351      ; 0x3fdf
    0.00 :	  128ba:       cmp     r3, r2
    0.00 :	  128bc:       mov     r1, r5
    0.00 :	  128be:       movw    r2, #65535      ; 0xffff
    0.00 :	  128c2:       bgt.w   12b50 <__acos_finite+0x47c>
    0.00 :	  128c6:       movt    r2, #16335      ; 0x3fcf
    0.00 :	  128ca:       cmp     r3, r2
    0.00 :	  128cc:       itete   gt
    0.00 :	  128ce:       ubfxgt  r2, r3, #14, #6
    0.00 :	  128d2:       ubfxle  r3, r3, #15, #5
    0.00 :	  128d6:       movgt   r3, #11
    0.00 :	  128d8:       movle   r2, #11
    0.00 :	  128da:       ite     gt
    0.00 :	  128dc:       mulgt   r3, r2
    0.00 :	  128de:       mulle   r3, r2
    0.00 :	  128e0:       movw    r2, #20336      ; 0x4f70
    0.00 :	  128e4:       it      gt
    0.00 :	  128e6:       addgt.w r3, r3, #352    ; 0x160
    0.00 :	  128ea:       cmp     r5, #0
    0.00 :	  128ec:       movt    r2, #6
    0.00 :	  128f0:       add.w   r0, r2, r3, lsl #3
    0.00 :	  128f4:       ble.w   1303c <__acos_finite+0x968>
    0.00 :	  128f8:       vldr    d5, [r0]
    0.00 :	  128fc:       vsub.f64        d5, d8, d5
    0.00 :	  12900:       add.w   r4, r2, r3, lsl #3
    0.00 :	  12904:       add.w   r0, r3, #8
    0.00 :	  12908:       movw    r5, #42136      ; 0xa498
    0.00 :	  1290c:       cmp     r1, #0
    0.00 :	  1290e:       vldr    d7, [r4, #48]   ; 0x30
    0.00 :	  12912:       movt    r5, #6
    0.00 :	  12916:       add.w   r6, r2, r0, lsl #3
    0.00 :	  1291a:       vldr    d3, [r4, #40]   ; 0x28
    0.00 :	  1291e:       vldr    d4, [r4, #32]
    0.00 :	  12922:       vmla.f64        d3, d5, d7
    0.00 :	  12926:       vldr    d6, [r4, #24]
    0.00 :	  1292a:       vldr    d7, [r4, #16]
    0.00 :	  1292e:       vldr    d2, [r4, #56]   ; 0x38
    0.00 :	  12932:       vldr    d1, [r4, #8]
    0.00 :	  12936:       movw    r4, #42128      ; 0xa490
    0.00 :	  1293a:       movt    r4, #6
    0.00 :	  1293e:       vmla.f64        d4, d3, d5
    0.00 :	  12942:       vmla.f64        d6, d4, d5
    0.00 :	  12946:       vmla.f64        d7, d6, d5
    0.00 :	  1294a:       vmul.f64        d6, d5, d5
    0.00 :	  1294e:       vmla.f64        d2, d7, d6
    0.00 :	  12952:       vmov.f64        d7, d2
    0.00 :	  12956:       vmla.f64        d7, d5, d1
    0.00 :	  1295a:       vmov.f64        d1, d7
    0.00 :	  1295e:       vldr    d7, [r5]
    0.00 :	  12962:       ble.w   1302a <__acos_finite+0x956>
    0.00 :	  12966:       vldr    d4, [r6]
    0.00 :	  1296a:       vldr    d6, [r4]
    0.00 :	  1296e:       vsub.f64        d7, d7, d4
    0.00 :	  12972:       vsub.f64        d1, d6, d1
    0.00 :	  12976:       vldr    d4, [pc, #408]  ; 12b10 <__acos_finite+0x43c>
    0.00 :	  1297a:       vadd.f64        d12, d1, d7
    0.00 :	  1297e:       vsub.f64        d7, d7, d12
    0.00 :	  12982:       vadd.f64        d7, d7, d1
    0.00 :	  12986:       vmov.f64        d6, d12
    0.00 :	  1298a:       vmla.f64        d6, d7, d4
    0.00 :	  1298e:       vcmp.f64        d12, d6
    0.00 :	  12992:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12996:       beq.n   128a6 <__acos_finite+0x1d2>
    0.00 :	  12998:       add.w   r6, r2, r3, lsl #3
    0.00 :	  1299c:       add.w   r0, r2, r0, lsl #3
    0.00 :	  129a0:       cmp     r1, #0
    0.00 :	  129a2:       vldr    d4, [r6, #72]   ; 0x48
    0.00 :	  129a6:       vldr    d6, [r0]
    0.00 :	  129aa:       vmul.f64        d4, d5, d4
    0.00 :	  129ae:       vldr    d3, [r6, #80]   ; 0x50
    0.00 :	  129b2:       vadd.f64        d7, d6, d4
    0.00 :	  129b6:       vmla.f64        d2, d5, d3
    0.00 :	  129ba:       vsub.f64        d6, d6, d7
    0.00 :	  129be:       vadd.f64        d6, d6, d4
    0.00 :	  129c2:       vadd.f64        d2, d2, d6
    0.00 :	  129c6:       ble.w   1304a <__acos_finite+0x976>
    0.00 :	  129ca:       vldr    d6, [r5]
    0.00 :	  129ce:       vldr    d5, [r4]
    0.00 :	  129d2:       vsub.f64        d4, d6, d7
    0.00 :	  129d6:       vsub.f64        d6, d6, d4
    0.00 :	  129da:       vsub.f64        d7, d6, d7
    0.00 :	  129de:       vsub.f64        d7, d7, d2
    0.00 :	  129e2:       vadd.f64        d7, d7, d5
    0.00 :	  129e6:       vldr    d6, [pc, #304]  ; 12b18 <__acos_finite+0x444>
    0.00 :	  129ea:       vadd.f64        d12, d4, d7
    0.00 :	  129ee:       vsub.f64        d4, d4, d12
    0.00 :	  129f2:       vadd.f64        d7, d4, d7
    0.00 :	  129f6:       vmov.f64        d5, d12
    0.00 :	  129fa:       vmla.f64        d5, d7, d6
    0.00 :	  129fe:       vcmp.f64        d12, d5
    0.00 :	  12a02:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12a06:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12a0a:       vldr    d5, [pc, #276]  ; 12b20 <__acos_finite+0x44c>
    0.00 :	  12a0e:       add     r0, sp, #8
    0.00 :	  12a10:       vmov.f64        d9, d12
    0.00 :	  12a14:       vmla.f64        d9, d7, d5
    0.00 :	  12a18:       vmov.f64        d6, #96 ; 0x3f000000  0.5
    0.00 :	  12a1c:       vsub.f64        d1, d9, d12
    0.00 :	  12a20:       vmov.f64        d0, d12
    0.00 :	  12a24:       vmul.f64        d1, d1, d6
    0.00 :	  12a28:       bl      1c274 <__docos>
    0.00 :	  12a2c:       vldr    d7, [sp, #8]
    0.00 :	  12a30:       vldr    d6, [sp, #16]
    0.00 :	  12a34:       vldr    d5, [pc, #240]  ; 12b28 <__acos_finite+0x454>
    0.00 :	  12a38:       vsub.f64        d7, d7, d8
    0.00 :	  12a3c:       vadd.f64        d7, d7, d6
    0.00 :	  12a40:       vcmpe.f64       d7, d5
    0.00 :	  12a44:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12a48:       bgt.w   12ffc <__acos_finite+0x928>
    0.00 :	  12a4c:       vldr    d6, [pc, #224]  ; 12b30 <__acos_finite+0x45c>
    0.00 :	  12a50:       vcmpe.f64       d7, d6
    0.00 :	  12a54:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12a58:       bpl.w   133b2 <__acos_finite+0xcde>
    0.00 :	  12a5c:       vcmp.f64        d12, d9
    0.00 :	  12a60:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12a64:       it      gt
    0.00 :	  12a66:       vmovgt.f64      d12, d9
    0.00 :	  12a6a:       b.n     128a6 <__acos_finite+0x1d2>
    0.00 :	  12a6c:       movw    r3, #42136      ; 0xa498
    0.00 :	  12a70:       movt    r3, #6
    0.00 :	  12a74:       vldr    d12, [r3]
    0.00 :	  12a78:       vmov.f64        d0, d12
    0.00 :	  12a7c:       add     sp, #28
    0.00 :	  12a7e:       vpop    {d8-d13}
    0.00 :	  12a82:       pop     {r4, r5, r6, r7, pc}
    0.00 :	  12a84:       nop.w
    0.00 :	  12a88:       .word   0x0f453c72
    0.00 :	  12a8c:       .word   0x3f9292d8
    0.00 :	  12a90:       .word   0xc822d419
    0.00 :	  12a94:       .word   0x3f96e442
    0.00 :	  12a98:       .word   0x3336127d
    0.00 :	  12a9c:       .word   0x3fb33333
    0.00 :	  12aa0:       .word   0x555554f9
    0.00 :	  12aa4:       .word   0x3fc55555
    0.00 :	  12aa8:       .word   0x04f4ad99
    0.00 :	  12aac:       .word   0x3f9f1c7e
    0.00 :	  12ab0:       .word   0xae42c0e4
    0.00 :	  12ab4:       .word   0x3fa6db6d
    0.00 :	  12ab8:       .word   0x4dd2f1aa
    0.00 :	  12abc:       .word   0x3ff01062
    0.00 :	  12ac0:       .word   0x7c52ca64
    0.00 :	  12ac4:       .word   0x3f8e2077
    0.00 :	  12ac8:       .word   0x3c1e2c9b
    0.00 :	  12acc:       .word   0x3f91bfe8
    0.00 :	  12ad0:       .word   0x40cbd654
    0.00 :	  12ad4:       .word   0x3f96e8cb
    0.00 :	  12ad8:       .word   0x00000000
    0.00 :	  12adc:       .word   0x42380000
    0.00 :	  12ae0:       .word   0xa6fd9132
    0.00 :	  12ae4:       .word   0x3f9f1c71
    0.00 :	  12ae8:       .word   0xb6ebd269
    0.00 :	  12aec:       .word   0x3fa6db6d
    0.00 :	  12af0:       .word   0x33332f18
    0.00 :	  12af4:       .word   0x3fb33333
    0.00 :	  12af8:       .word   0xf16b11c7
    0.00 :	  12afc:       .word   0x3ff00029
         :	        ...
    0.00 :	  12b08:       .word   0x02af31dc
    0.00 :	  12b0c:       .word   0x3ff00000
    0.00 :	  12b10:       .word   0x851eb852
    0.00 :	  12b14:       .word   0x3ff051eb
    0.00 :	  12b18:       .word   0xb71758e2
    0.00 :	  12b1c:       .word   0x3ff000d1
    0.00 :	  12b20:       .word   0x9999999a
    0.00 :	  12b24:       .word   0x3ff19999
    0.00 :	  12b28:       .word   0x36f23c10
    0.00 :	  12b2c:       .word   0x3a53ce9a
    0.00 :	  12b30:       .word   0x36f23c10
    0.00 :	  12b34:       .word   0xba53ce9a
    0.00 :	  12b38:       .word   0x6e2eb1c4
    0.00 :	  12b3c:       .word   0x3ff001a3
    0.00 :	  12b40:       .word   0xba5e353f
    0.00 :	  12b44:       .word   0x3ff00c49
    0.00 :	  12b48:       .word   0x0a3d70a4
    0.00 :	  12b4c:       .word   0x3ff0a3d7
    0.00 :	  12b50:       movt    r2, #16359      ; 0x3fe7
    0.00 :	  12b54:       cmp     r3, r2
    0.00 :	  12b56:       bgt.w   12ce0 <__acos_finite+0x60c>
    0.00 :	  12b5a:       asrs    r3, r3, #11
    0.00 :	  12b5c:       cmp     r5, #0
    0.00 :	  12b5e:       and.w   r3, r3, #508    ; 0x1fc
    0.00 :	  12b62:       movw    r2, #20336      ; 0x4f70
    0.00 :	  12b66:       movt    r2, #6
    0.00 :	  12b6a:       add.w   r3, r3, r3, lsl #1
    0.00 :	  12b6e:       add.w   r0, r3, #1056   ; 0x420
    0.00 :	  12b72:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12b76:       ble.w   1307a <__acos_finite+0x9a6>
    0.00 :	  12b7a:       vldr    d7, [r0]
    0.00 :	  12b7e:       vldr    d1, [pc, #-56]  ; 12b48 <__acos_finite+0x474>
    0.00 :	  12b82:       vsub.f64        d7, d8, d7
    0.00 :	  12b86:       addw    r0, r3, #1063   ; 0x427
    0.00 :	  12b8a:       addw    r4, r3, #1062   ; 0x426
    0.00 :	  12b8e:       addw    lr, r3, #1061   ; 0x425
    0.00 :	  12b92:       addw    r6, r3, #1060   ; 0x424
    0.00 :	  12b96:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12b9a:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12b9e:       add.w   lr, r2, lr, lsl #3
    0.00 :	  12ba2:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12ba6:       vldr    d6, [r0]
    0.00 :	  12baa:       addw    r7, r3, #1059   ; 0x423
    0.00 :	  12bae:       addw    r5, r3, #1058   ; 0x422
    0.00 :	  12bb2:       addw    r0, r3, #1057   ; 0x421
    0.00 :	  12bb6:       add.w   r7, r2, r7, lsl #3
    0.00 :	  12bba:       cmp     r1, #0
    0.00 :	  12bbc:       vldr    d0, [r4]
    0.00 :	  12bc0:       add.w   r5, r2, r5, lsl #3
    0.00 :	  12bc4:       add.w   r4, r3, #1064   ; 0x428
    0.00 :	  12bc8:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12bcc:       vldr    d2, [lr]
    0.00 :	  12bd0:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12bd4:       vmla.f64        d0, d7, d6
    0.00 :	  12bd8:       vldr    d3, [r6]
    0.00 :	  12bdc:       vldr    d5, [r7]
    0.00 :	  12be0:       vldr    d6, [r5]
    0.00 :	  12be4:       movw    r5, #42136      ; 0xa498
    0.00 :	  12be8:       movt    r5, #6
    0.00 :	  12bec:       vldr    d4, [r4]
    0.00 :	  12bf0:       movw    r4, #42128      ; 0xa490
    0.00 :	  12bf4:       movt    r4, #6
    0.00 :	  12bf8:       vldr    d9, [r0]
    0.00 :	  12bfc:       addw    r0, r3, #1065   ; 0x429
    0.00 :	  12c00:       add.w   r6, r2, r0, lsl #3
    0.00 :	  12c04:       vmla.f64        d2, d0, d7
    0.00 :	  12c08:       vmla.f64        d3, d2, d7
    0.00 :	  12c0c:       vmla.f64        d5, d3, d7
    0.00 :	  12c10:       vmla.f64        d6, d5, d7
    0.00 :	  12c14:       vmul.f64        d5, d7, d7
    0.00 :	  12c18:       vmla.f64        d4, d6, d5
    0.00 :	  12c1c:       vmov.f64        d6, d4
    0.00 :	  12c20:       vmla.f64        d6, d7, d9
    0.00 :	  12c24:       vmov.f64        d9, d6
    0.00 :	  12c28:       vldr    d6, [r5]
    0.00 :	  12c2c:       ble.w   13068 <__acos_finite+0x994>
    0.00 :	  12c30:       vldr    d3, [r6]
    0.00 :	  12c34:       vldr    d5, [r4]
    0.00 :	  12c38:       vsub.f64        d6, d6, d3
    0.00 :	  12c3c:       vsub.f64        d9, d5, d9
    0.00 :	  12c40:       vadd.f64        d12, d9, d6
    0.00 :	  12c44:       vsub.f64        d6, d6, d12
    0.00 :	  12c48:       vadd.f64        d6, d6, d9
    0.00 :	  12c4c:       vmov.f64        d5, d12
    0.00 :	  12c50:       vmla.f64        d5, d6, d1
    0.00 :	  12c54:       vcmp.f64        d12, d5
    0.00 :	  12c58:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12c5c:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12c60:       addw    r6, r3, #1066   ; 0x42a
    0.00 :	  12c64:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12c68:       addw    r3, r3, #1067   ; 0x42b
    0.00 :	  12c6c:       cmp     r1, #0
    0.00 :	  12c6e:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12c72:       vldr    d6, [r0]
    0.00 :	  12c76:       add.w   r3, r2, r3, lsl #3
    0.00 :	  12c7a:       vldr    d5, [r6]
    0.00 :	  12c7e:       vldr    d3, [r3]
    0.00 :	  12c82:       vmul.f64        d5, d7, d5
    0.00 :	  12c86:       vadd.f64        d2, d6, d5
    0.00 :	  12c8a:       vmla.f64        d4, d7, d3
    0.00 :	  12c8e:       vsub.f64        d6, d6, d2
    0.00 :	  12c92:       vadd.f64        d6, d6, d5
    0.00 :	  12c96:       vadd.f64        d4, d4, d6
    0.00 :	  12c9a:       ble.w   1322a <__acos_finite+0xb56>
    0.00 :	  12c9e:       vldr    d7, [r5]
    0.00 :	  12ca2:       vldr    d1, [r4]
    0.00 :	  12ca6:       vldr    d3, [pc, #-368] ; 12b38 <__acos_finite+0x464>
    0.00 :	  12caa:       vsub.f64        d5, d7, d2
    0.00 :	  12cae:       vsub.f64        d7, d7, d5
    0.00 :	  12cb2:       vsub.f64        d7, d7, d2
    0.00 :	  12cb6:       vsub.f64        d7, d7, d4
    0.00 :	  12cba:       vadd.f64        d7, d7, d1
    0.00 :	  12cbe:       vadd.f64        d12, d5, d7
    0.00 :	  12cc2:       vsub.f64        d5, d5, d12
    0.00 :	  12cc6:       vadd.f64        d7, d5, d7
    0.00 :	  12cca:       vmov.f64        d6, d12
    0.00 :	  12cce:       vmla.f64        d6, d3, d7
    0.00 :	  12cd2:       vcmp.f64        d12, d6
    0.00 :	  12cd6:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12cda:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12cde:       b.n     12a0a <__acos_finite+0x336>
    0.00 :	  12ce0:       movw    r2, #32767      ; 0x7fff
    0.00 :	  12ce4:       movt    r2, #16365      ; 0x3fed
    0.00 :	  12ce8:       cmp     r3, r2
    0.00 :	  12cea:       ble.w   12e9e <__acos_finite+0x7ca>
    0.00 :	  12cee:       movw    r2, #32767      ; 0x7fff
    0.00 :	  12cf2:       movt    r2, #16366      ; 0x3fee
    0.00 :	  12cf6:       cmp     r3, r2
    0.00 :	  12cf8:       bgt.w   1308c <__acos_finite+0x9b8>
    0.00 :	  12cfc:       ubfx    r3, r3, #13, #7
    0.00 :	  12d00:       movs    r2, #14
    0.00 :	  12d02:       cmp     r5, #0
    0.00 :	  12d04:       mul.w   r3, r2, r3
    0.00 :	  12d08:       movw    r2, #20336      ; 0x4f70
    0.00 :	  12d0c:       movt    r2, #6
    0.00 :	  12d10:       add.w   r0, r3, #884    ; 0x374
    0.00 :	  12d14:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12d18:       ble.w   134a0 <__acos_finite+0xdcc>
    0.00 :	  12d1c:       vldr    d7, [r0]
    0.00 :	  12d20:       vldr    d11, [pc, #-476]        ; 12b48 <__acos_finite+0x474>
    0.00 :	  12d24:       vsub.f64        d7, d8, d7
    0.00 :	  12d28:       addw    r5, r3, #893    ; 0x37d
    0.00 :	  12d2c:       add.w   r4, r3, #892    ; 0x37c
    0.00 :	  12d30:       addw    r0, r3, #891    ; 0x37b
    0.00 :	  12d34:       addw    r7, r3, #890    ; 0x37a
    0.00 :	  12d38:       add.w   r5, r2, r5, lsl #3
    0.00 :	  12d3c:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12d40:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12d44:       add.w   r7, r2, r7, lsl #3
    0.00 :	  12d48:       vldr    d6, [r5]
    0.00 :	  12d4c:       addw    r6, r3, #889    ; 0x379
    0.00 :	  12d50:       add.w   r5, r3, #888    ; 0x378
    0.00 :	  12d54:       cmp     r1, #0
    0.00 :	  12d56:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12d5a:       vldr    d9, [r4]
    0.00 :	  12d5e:       add.w   r5, r2, r5, lsl #3
    0.00 :	  12d62:       addw    r4, r3, #887    ; 0x377
    0.00 :	  12d66:       vldr    d0, [r0]
    0.00 :	  12d6a:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12d6e:       addw    r0, r3, #886    ; 0x376
    0.00 :	  12d72:       vmla.f64        d9, d7, d6
    0.00 :	  12d76:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12d7a:       vldr    d1, [r7]
    0.00 :	  12d7e:       addw    r7, r3, #894    ; 0x37e
    0.00 :	  12d82:       add.w   r7, r2, r7, lsl #3
    0.00 :	  12d86:       vldr    d2, [r6]
    0.00 :	  12d8a:       addw    r6, r3, #885    ; 0x375
    0.00 :	  12d8e:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12d92:       vldr    d3, [r5]
    0.00 :	  12d96:       movw    r5, #42136      ; 0xa498
    0.00 :	  12d9a:       movt    r5, #6
    0.00 :	  12d9e:       vldr    d4, [r4]
    0.00 :	  12da2:       movw    r4, #42128      ; 0xa490
    0.00 :	  12da6:       movt    r4, #6
    0.00 :	  12daa:       vldr    d5, [r0]
    0.00 :	  12dae:       addw    r0, r3, #895    ; 0x37f
    0.00 :	  12db2:       vldr    d6, [r7]
    0.00 :	  12db6:       vldr    d10, [r6]
    0.00 :	  12dba:       add.w   r6, r2, r0, lsl #3
    0.00 :	  12dbe:       vmla.f64        d0, d9, d7
    0.00 :	  12dc2:       vmla.f64        d1, d0, d7
    0.00 :	  12dc6:       vmla.f64        d2, d1, d7
    0.00 :	  12dca:       vmla.f64        d3, d2, d7
    0.00 :	  12dce:       vmla.f64        d4, d3, d7
    0.00 :	  12dd2:       vmla.f64        d5, d4, d7
    0.00 :	  12dd6:       vmul.f64        d4, d7, d7
    0.00 :	  12dda:       vmla.f64        d6, d5, d4
    0.00 :	  12dde:       vldr    d5, [r5]
    0.00 :	  12de2:       vmov.f64        d1, d6
    0.00 :	  12de6:       vmla.f64        d1, d7, d10
    0.00 :	  12dea:       ble.w   1348e <__acos_finite+0xdba>
    0.00 :	  12dee:       vldr    d3, [r6]
    0.00 :	  12df2:       vldr    d4, [r4]
    0.00 :	  12df6:       vsub.f64        d5, d5, d3
    0.00 :	  12dfa:       vsub.f64        d1, d4, d1
    0.00 :	  12dfe:       vadd.f64        d12, d1, d5
    0.00 :	  12e02:       vsub.f64        d5, d5, d12
    0.00 :	  12e06:       vadd.f64        d5, d5, d1
    0.00 :	  12e0a:       vmov.f64        d4, d12
    0.00 :	  12e0e:       vmla.f64        d4, d5, d11
    0.00 :	  12e12:       vcmp.f64        d12, d4
    0.00 :	  12e16:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12e1a:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12e1e:       add.w   r6, r3, #896    ; 0x380
    0.00 :	  12e22:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12e26:       addw    r3, r3, #897    ; 0x381
    0.00 :	  12e2a:       cmp     r1, #0
    0.00 :	  12e2c:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12e30:       vldr    d5, [r0]
    0.00 :	  12e34:       add.w   r3, r2, r3, lsl #3
    0.00 :	  12e38:       vldr    d3, [r6]
    0.00 :	  12e3c:       vldr    d2, [r3]
    0.00 :	  12e40:       vmul.f64        d3, d7, d3
    0.00 :	  12e44:       vadd.f64        d4, d5, d3
    0.00 :	  12e48:       vmla.f64        d6, d7, d2
    0.00 :	  12e4c:       vldr    d7, [r5]
    0.00 :	  12e50:       vldr    d2, [r4]
    0.00 :	  12e54:       vsub.f64        d5, d5, d4
    0.00 :	  12e58:       vadd.f64        d3, d5, d3
    0.00 :	  12e5c:       vadd.f64        d3, d6, d3
    0.00 :	  12e60:       ble.w   134ee <__acos_finite+0xe1a>
    0.00 :	  12e64:       vldr    d5, [pc, #-808] ; 12b40 <__acos_finite+0x46c>
    0.00 :	  12e68:       vsub.f64        d6, d7, d4
    0.00 :	  12e6c:       vsub.f64        d7, d7, d6
    0.00 :	  12e70:       vsub.f64        d7, d7, d4
    0.00 :	  12e74:       vsub.f64        d7, d7, d3
    0.00 :	  12e78:       vadd.f64        d7, d7, d2
    0.00 :	  12e7c:       vadd.f64        d12, d6, d7
    0.00 :	  12e80:       vsub.f64        d6, d6, d12
    0.00 :	  12e84:       vadd.f64        d7, d6, d7
    0.00 :	  12e88:       vmov.f64        d6, d12
    0.00 :	  12e8c:       vmla.f64        d6, d5, d7
    0.00 :	  12e90:       vcmp.f64        d12, d6
    0.00 :	  12e94:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12e98:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12e9c:       b.n     12a0a <__acos_finite+0x336>
    0.00 :	  12e9e:       ubfx    r3, r3, #13, #7
    0.00 :	  12ea2:       movs    r2, #13
    0.00 :	  12ea4:       cmp     r5, #0
    0.00 :	  12ea6:       mul.w   r3, r2, r3
    0.00 :	  12eaa:       movw    r2, #20336      ; 0x4f70
    0.00 :	  12eae:       movt    r2, #6
    0.00 :	  12eb2:       add.w   r0, r3, #992    ; 0x3e0
    0.00 :	  12eb6:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12eba:       ble.w   13262 <__acos_finite+0xb8e>
    0.00 :	  12ebe:       vldr    d7, [r0]
    0.00 :	  12ec2:       vldr    d1, [pc, #-892] ; 12b48 <__acos_finite+0x474>
    0.00 :	  12ec6:       vsub.f64        d7, d8, d7
    0.00 :	  12eca:       add.w   r5, r3, #1000   ; 0x3e8
    0.00 :	  12ece:       addw    r4, r3, #999    ; 0x3e7
    0.00 :	  12ed2:       addw    r0, r3, #998    ; 0x3e6
    0.00 :	  12ed6:       addw    r7, r3, #997    ; 0x3e5
    0.00 :	  12eda:       add.w   r5, r2, r5, lsl #3
    0.00 :	  12ede:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12ee2:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12ee6:       add.w   r7, r2, r7, lsl #3
    0.00 :	  12eea:       vldr    d6, [r5]
    0.00 :	  12eee:       add.w   r6, r3, #996    ; 0x3e4
    0.00 :	  12ef2:       addw    r5, r3, #995    ; 0x3e3
    0.00 :	  12ef6:       cmp     r1, #0
    0.00 :	  12ef8:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12efc:       vldr    d10, [r4]
    0.00 :	  12f00:       add.w   r5, r2, r5, lsl #3
    0.00 :	  12f04:       addw    r4, r3, #994    ; 0x3e2
    0.00 :	  12f08:       vldr    d9, [r0]
    0.00 :	  12f0c:       add.w   r4, r2, r4, lsl #3
    0.00 :	  12f10:       addw    r0, r3, #1001   ; 0x3e9
    0.00 :	  12f14:       vmla.f64        d10, d7, d6
    0.00 :	  12f18:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12f1c:       vldr    d0, [r7]
    0.00 :	  12f20:       addw    r7, r3, #993    ; 0x3e1
    0.00 :	  12f24:       add.w   r7, r2, r7, lsl #3
    0.00 :	  12f28:       vldr    d3, [r6]
    0.00 :	  12f2c:       vldr    d5, [r5]
    0.00 :	  12f30:       movw    r5, #42136      ; 0xa498
    0.00 :	  12f34:       movt    r5, #6
    0.00 :	  12f38:       vldr    d6, [r4]
    0.00 :	  12f3c:       movw    r4, #42128      ; 0xa490
    0.00 :	  12f40:       movt    r4, #6
    0.00 :	  12f44:       vldr    d4, [r0]
    0.00 :	  12f48:       addw    r0, r3, #1002   ; 0x3ea
    0.00 :	  12f4c:       add.w   r6, r2, r0, lsl #3
    0.00 :	  12f50:       vldr    d2, [r7]
    0.00 :	  12f54:       vmla.f64        d9, d10, d7
    0.00 :	  12f58:       vmla.f64        d0, d9, d7
    0.00 :	  12f5c:       vmla.f64        d3, d0, d7
    0.00 :	  12f60:       vmla.f64        d5, d3, d7
    0.00 :	  12f64:       vmla.f64        d6, d5, d7
    0.00 :	  12f68:       vmul.f64        d5, d7, d7
    0.00 :	  12f6c:       vmla.f64        d4, d6, d5
    0.00 :	  12f70:       vmov.f64        d0, d4
    0.00 :	  12f74:       vmla.f64        d0, d7, d2
    0.00 :	  12f78:       ble.w   1324c <__acos_finite+0xb78>
    0.00 :	  12f7c:       vldr    d6, [r5]
    0.00 :	  12f80:       vldr    d3, [r6]
    0.00 :	  12f84:       vldr    d5, [r4]
    0.00 :	  12f88:       vsub.f64        d6, d6, d3
    0.00 :	  12f8c:       vsub.f64        d0, d5, d0
    0.00 :	  12f90:       vadd.f64        d12, d0, d6
    0.00 :	  12f94:       vsub.f64        d6, d6, d12
    0.00 :	  12f98:       vadd.f64        d6, d6, d0
    0.00 :	  12f9c:       vmov.f64        d5, d12
    0.00 :	  12fa0:       vmla.f64        d5, d6, d1
    0.00 :	  12fa4:       vcmp.f64        d12, d5
    0.00 :	  12fa8:       vmrs    APSR_nzcv, fpscr
    0.00 :	  12fac:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  12fb0:       addw    r6, r3, #1003   ; 0x3eb
    0.00 :	  12fb4:       add.w   r0, r2, r0, lsl #3
    0.00 :	  12fb8:       add.w   r3, r3, #1004   ; 0x3ec
    0.00 :	  12fbc:       cmp     r1, #0
    0.00 :	  12fbe:       add.w   r6, r2, r6, lsl #3
    0.00 :	  12fc2:       vldr    d6, [r0]
    0.00 :	  12fc6:       add.w   r3, r2, r3, lsl #3
    0.00 :	  12fca:       vldr    d5, [r6]
    0.00 :	  12fce:       vldr    d3, [r3]
    0.00 :	  12fd2:       vmul.f64        d5, d7, d5
    0.00 :	  12fd6:       vadd.f64        d2, d6, d5
    0.00 :	  12fda:       vmla.f64        d4, d7, d3
    0.00 :	  12fde:       vsub.f64        d6, d6, d2
    0.00 :	  12fe2:       vadd.f64        d6, d6, d5
    0.00 :	  12fe6:       vadd.f64        d4, d4, d6
    0.00 :	  12fea:       ble.w   1346c <__acos_finite+0xd98>
    0.00 :	  12fee:       vldr    d7, [r5]
    0.00 :	  12ff2:       vldr    d1, [r4]
    0.00 :	  12ff6:       vldr    d3, [pc, #984]  ; 133d0 <__acos_finite+0xcfc>
    0.00 :	  12ffa:       b.n     12caa <__acos_finite+0x5d6>
    0.00 :	  12ffc:       vcmp.f64        d12, d9
    0.00 :	  13000:       vmrs    APSR_nzcv, fpscr
    0.00 :	  13004:       it      mi
    0.00 :	  13006:       vmovmi.f64      d12, d9
    0.00 :	  1300a:       b.n     128a6 <__acos_finite+0x1d2>
    0.00 :	  1300c:       vldr    d7, [pc, #968]  ; 133d8 <__acos_finite+0xd04>
    0.00 :	  13010:       vmov.f64        d2, d12
    0.00 :	  13014:       vmov.f64        d1, d12
    0.00 :	  13018:       vmla.f64        d2, d9, d7
    0.00 :	  1301c:       vmov.f64        d0, d8
    0.00 :	  13020:       bl      1da2c <__cos32>
    0.00 :	  13024:       vmov.f64        d12, d0
    0.00 :	  13028:       b.n     128a6 <__acos_finite+0x1d2>
    0.00 :	  1302a:       vldr    d6, [r6]
    0.00 :	  1302e:       vldr    d4, [r4]
    0.00 :	  13032:       vadd.f64        d7, d6, d7
    0.00 :	  13036:       vadd.f64        d1, d1, d4
    0.00 :	  1303a:       b.n     12976 <__acos_finite+0x2a2>
    0.00 :	  1303c:       vldr    d7, [r0]
    0.00 :	  13040:       vneg.f64        d5, d8
    0.00 :	  13044:       vsub.f64        d5, d5, d7
    0.00 :	  13048:       b.n     12900 <__acos_finite+0x22c>
    0.00 :	  1304a:       vldr    d5, [r5]
    0.00 :	  1304e:       vldr    d6, [r4]
    0.00 :	  13052:       vadd.f64        d4, d7, d5
    0.00 :	  13056:       vsub.f64        d5, d5, d4
    0.00 :	  1305a:       vadd.f64        d2, d2, d6
    0.00 :	  1305e:       vadd.f64        d7, d5, d7
    0.00 :	  13062:       vadd.f64        d7, d7, d2
    0.00 :	  13066:       b.n     129e6 <__acos_finite+0x312>
    0.00 :	  13068:       vldr    d0, [r6]
    0.00 :	  1306c:       vldr    d3, [r4]
    0.00 :	  13070:       vadd.f64        d6, d0, d6
    0.00 :	  13074:       vadd.f64        d9, d9, d3
    0.00 :	  13078:       b.n     12c40 <__acos_finite+0x56c>
    0.00 :	  1307a:       vldr    d6, [r0]
    0.00 :	  1307e:       vneg.f64        d7, d8
    0.00 :	  13082:       vldr    d1, [pc, #860]  ; 133e0 <__acos_finite+0xd0c>
    0.00 :	  13086:       vsub.f64        d7, d7, d6
    0.00 :	  1308a:       b.n     12b86 <__acos_finite+0x4b2>
    0.00 :	  1308c:       movw    r2, #65535      ; 0xffff
    0.00 :	  13090:       movt    r2, #16366      ; 0x3fee
    0.00 :	  13094:       cmp     r3, r2
    0.00 :	  13096:       bgt.w   13274 <__acos_finite+0xba0>
    0.00 :	  1309a:       ubfx    r3, r3, #13, #7
    0.00 :	  1309e:       cmp     r5, #0
    0.00 :	  130a0:       movw    r2, #20336      ; 0x4f70
    0.00 :	  130a4:       movt    r2, #6
    0.00 :	  130a8:       rsb     r3, r3, r3, lsl #4
    0.00 :	  130ac:       add.w   r0, r3, #768    ; 0x300
    0.00 :	  130b0:       add.w   r0, r2, r0, lsl #3
    0.00 :	  130b4:       ble.w   1351a <__acos_finite+0xe46>
    0.00 :	  130b8:       vldr    d7, [r0]
    0.00 :	  130bc:       vldr    d9, [pc, #808]  ; 133e8 <__acos_finite+0xd14>
    0.00 :	  130c0:       vsub.f64        d7, d8, d7
    0.00 :	  130c4:       addw    r0, r3, #778    ; 0x30a
    0.00 :	  130c8:       addw    r4, r3, #777    ; 0x309
    0.00 :	  130cc:       add.w   lr, r3, #776    ; 0x308
    0.00 :	  130d0:       addw    r7, r3, #775    ; 0x307
    0.00 :	  130d4:       add.w   r0, r2, r0, lsl #3
    0.00 :	  130d8:       add.w   r4, r2, r4, lsl #3
    0.00 :	  130dc:       add.w   lr, r2, lr, lsl #3
    0.00 :	  130e0:       add.w   r7, r2, r7, lsl #3
    0.00 :	  130e4:       vldr    d5, [r0]
    0.00 :	  130e8:       addw    r6, r3, #774    ; 0x306
    0.00 :	  130ec:       addw    r5, r3, #773    ; 0x305
    0.00 :	  130f0:       addw    r0, r3, #771    ; 0x303
    0.00 :	  130f4:       add.w   r6, r2, r6, lsl #3
    0.00 :	  130f8:       cmp     r1, #0
    0.00 :	  130fa:       vldr    d6, [r4]
    0.00 :	  130fe:       add.w   r5, r2, r5, lsl #3
    0.00 :	  13102:       add.w   r4, r3, #772    ; 0x304
    0.00 :	  13106:       add.w   r0, r2, r0, lsl #3
    0.00 :	  1310a:       vldr    d10, [lr]
    0.00 :	  1310e:       add.w   r4, r2, r4, lsl #3
    0.00 :	  13112:       vmla.f64        d6, d7, d5
    0.00 :	  13116:       vldr    d0, [r7]
    0.00 :	  1311a:       addw    r7, r3, #770    ; 0x302
    0.00 :	  1311e:       add.w   r7, r2, r7, lsl #3
    0.00 :	  13122:       vldr    d1, [r6]
    0.00 :	  13126:       addw    r6, r3, #779    ; 0x30b
    0.00 :	  1312a:       add.w   r6, r2, r6, lsl #3
    0.00 :	  1312e:       vldr    d2, [r5]
    0.00 :	  13132:       addw    r5, r3, #769    ; 0x301
    0.00 :	  13136:       add.w   r5, r2, r5, lsl #3
    0.00 :	  1313a:       vldr    d3, [r4]
    0.00 :	  1313e:       movw    r4, #42128      ; 0xa490
    0.00 :	  13142:       movt    r4, #6
    0.00 :	  13146:       vldr    d4, [r0]
    0.00 :	  1314a:       add.w   r0, r3, #780    ; 0x30c
    0.00 :	  1314e:       vldr    d5, [r7]
    0.00 :	  13152:       vldr    d11, [r5]
    0.00 :	  13156:       movw    r5, #42136      ; 0xa498
    0.00 :	  1315a:       movt    r5, #6
    0.00 :	  1315e:       vmla.f64        d10, d6, d7
    0.00 :	  13162:       vldr    d6, [r6]
    0.00 :	  13166:       add.w   r6, r2, r0, lsl #3
    0.00 :	  1316a:       vmla.f64        d0, d10, d7
    0.00 :	  1316e:       vmla.f64        d1, d0, d7
    0.00 :	  13172:       vmla.f64        d2, d1, d7
    0.00 :	  13176:       vmla.f64        d3, d2, d7
    0.00 :	  1317a:       vmla.f64        d4, d3, d7
    0.00 :	  1317e:       vmla.f64        d5, d4, d7
    0.00 :	  13182:       vmul.f64        d4, d7, d7
    0.00 :	  13186:       vmla.f64        d6, d5, d4
    0.00 :	  1318a:       vldr    d5, [r5]
    0.00 :	  1318e:       vmov.f64        d1, d6
    0.00 :	  13192:       vmla.f64        d1, d7, d11
    0.00 :	  13196:       ble.w   13508 <__acos_finite+0xe34>
    0.00 :	  1319a:       vldr    d3, [r6]
    0.00 :	  1319e:       vldr    d4, [r4]
    0.00 :	  131a2:       vsub.f64        d5, d5, d3
    0.00 :	  131a6:       vsub.f64        d1, d4, d1
    0.00 :	  131aa:       vadd.f64        d12, d1, d5
    0.00 :	  131ae:       vsub.f64        d5, d5, d12
    0.00 :	  131b2:       vadd.f64        d5, d5, d1
    0.00 :	  131b6:       vmov.f64        d4, d12
    0.00 :	  131ba:       vmla.f64        d4, d5, d9
    0.00 :	  131be:       vcmp.f64        d12, d4
    0.00 :	  131c2:       vmrs    APSR_nzcv, fpscr
    0.00 :	  131c6:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  131ca:       addw    r6, r3, #781    ; 0x30d
    0.00 :	  131ce:       add.w   r0, r2, r0, lsl #3
    0.00 :	  131d2:       addw    r3, r3, #782    ; 0x30e
    0.00 :	  131d6:       cmp     r1, #0
    0.00 :	  131d8:       add.w   r6, r2, r6, lsl #3
    0.00 :	  131dc:       vldr    d5, [r0]
    0.00 :	  131e0:       add.w   r3, r2, r3, lsl #3
    0.00 :	  131e4:       vldr    d4, [r6]
    0.00 :	  131e8:       vldr    d2, [r3]
    0.00 :	  131ec:       vmul.f64        d4, d7, d4
    0.00 :	  131f0:       vadd.f64        d3, d5, d4
    0.00 :	  131f4:       vmla.f64        d6, d7, d2
    0.00 :	  131f8:       vldr    d7, [r5]
    0.00 :	  131fc:       vldr    d2, [r4]
    0.00 :	  13200:       vsub.f64        d5, d5, d3
    0.00 :	  13204:       vadd.f64        d4, d5, d4
    0.00 :	  13208:       vadd.f64        d4, d6, d4
    0.00 :	  1320c:       ble.w   13538 <__acos_finite+0xe64>
    0.00 :	  13210:       vldr    d5, [pc, #476]  ; 133f0 <__acos_finite+0xd1c>
    0.00 :	  13214:       vsub.f64        d6, d7, d3
    0.00 :	  13218:       vsub.f64        d7, d7, d6
    0.00 :	  1321c:       vsub.f64        d7, d7, d3
    0.00 :	  13220:       vsub.f64        d7, d7, d4
    0.00 :	  13224:       vadd.f64        d7, d7, d2
    0.00 :	  13228:       b.n     12e7c <__acos_finite+0x7a8>
    0.00 :	  1322a:       vldr    d6, [r5]
    0.00 :	  1322e:       vldr    d7, [r4]
    0.00 :	  13232:       vadd.f64        d5, d2, d6
    0.00 :	  13236:       vldr    d3, [pc, #448]  ; 133f8 <__acos_finite+0xd24>
    0.00 :	  1323a:       vsub.f64        d6, d6, d5
    0.00 :	  1323e:       vadd.f64        d4, d4, d7
    0.00 :	  13242:       vadd.f64        d7, d6, d2
    0.00 :	  13246:       vadd.f64        d7, d7, d4
    0.00 :	  1324a:       b.n     12cbe <__acos_finite+0x5ea>
    0.00 :	  1324c:       vldr    d2, [r5]
    0.00 :	  13250:       vldr    d6, [r6]
    0.00 :	  13254:       vldr    d3, [r4]
    0.00 :	  13258:       vadd.f64        d6, d6, d2
    0.00 :	  1325c:       vadd.f64        d0, d0, d3
    0.00 :	  13260:       b.n     12f90 <__acos_finite+0x8bc>
    0.00 :	  13262:       vldr    d6, [r0]
    0.00 :	  13266:       vneg.f64        d7, d8
    0.00 :	  1326a:       vldr    d1, [pc, #404]  ; 13400 <__acos_finite+0xd2c>
    0.00 :	  1326e:       vsub.f64        d7, d7, d6
    0.00 :	  13272:       b.n     12eca <__acos_finite+0x7f6>
    0.00 :	  13274:       movw    r2, #65535      ; 0xffff
    0.00 :	  13278:       movt    r2, #16367      ; 0x3fef
    0.00 :	  1327c:       cmp     r3, r2
    0.00 :	  1327e:       bgt.w   134b2 <__acos_finite+0xdde>
    0.00 :	  13282:       vmov.f64        d7, #112        ; 0x3f800000  1.0
    0.00 :	  13286:       cmp     r5, #0
    0.00 :	  13288:       movw    r0, #511        ; 0x1ff
    0.00 :	  1328c:       vldr    d3, [pc, #376]  ; 13408 <__acos_finite+0xd34>
    0.00 :	  13290:       vldr    d4, [pc, #380]  ; 13410 <__acos_finite+0xd3c>
    0.00 :	  13294:       vldr    d9, [pc, #384]  ; 13418 <__acos_finite+0xd44>
    0.00 :	  13298:       vmov.f64        d6, #96 ; 0x3f000000  0.5
    0.00 :	  1329c:       vldr    d5, [pc, #384]  ; 13420 <__acos_finite+0xd4c>
    0.00 :	  132a0:       ite     gt
    0.00 :	  132a2:       vsubgt.f64      d7, d7, d8
    0.00 :	  132a6:       vaddle.f64      d7, d8, d7
    0.00 :	  132aa:       cmp     r5, #0
    0.00 :	  132ac:       vmul.f64        d7, d7, d6
    0.00 :	  132b0:       vldr    d6, [pc, #372]  ; 13428 <__acos_finite+0xd54>
    0.00 :	  132b4:       vstr    d7, [sp]
    0.00 :	  132b8:       ldrd    r2, r3, [sp]
    0.00 :	  132bc:       ldr     r2, [pc, #424]  ; (13468 <__acos_finite+0xd94>)
    0.00 :	  132be:       ubfx    r4, r3, #14, #7
    0.00 :	  132c2:       vmov.f64        d2, #112        ; 0x3f800000  1.0
    0.00 :	  132c6:       sub.w   r0, r0, r3, asr #21
    0.00 :	  132ca:       movw    r3, #42056      ; 0xa448
    0.00 :	  132ce:       movt    r3, #6
    0.00 :	  132d2:       add.w   r2, r2, r4, lsl #3
    0.00 :	  132d6:       add.w   r3, r3, r0, lsl #3
    0.00 :	  132da:       vldr    d1, [sp]
    0.00 :	  132de:       vldr    d7, [r3, #-152] ; 0xffffff68
    0.00 :	  132e2:       vldr    d0, [r2]
    0.00 :	  132e6:       vmul.f64        d0, d0, d7
    0.00 :	  132ea:       vmul.f64        d7, d0, d0
    0.00 :	  132ee:       vmls.f64        d2, d7, d1
    0.00 :	  132f2:       vldr    d7, [pc, #316]  ; 13430 <__acos_finite+0xd5c>
    0.00 :	  132f6:       vldr    d1, [pc, #320]  ; 13438 <__acos_finite+0xd64>
    0.00 :	  132fa:       vmla.f64        d6, d2, d3
    0.00 :	  132fe:       vldr    d3, [pc, #320]  ; 13440 <__acos_finite+0xd6c>
    0.00 :	  13302:       vmla.f64        d4, d6, d2
    0.00 :	  13306:       vldr    d6, [sp]
    0.00 :	  1330a:       vmla.f64        d7, d4, d2
    0.00 :	  1330e:       vldr    d4, [sp]
    0.00 :	  13312:       vldr    d2, [pc, #308]  ; 13448 <__acos_finite+0xd74>
    0.00 :	  13316:       vmla.f64        d5, d6, d9
    0.00 :	  1331a:       vldr    d9, [sp]
    0.00 :	  1331e:       vldr    d6, [pc, #304]  ; 13450 <__acos_finite+0xd7c>
    0.00 :	  13322:       vmul.f64        d7, d7, d0
    0.00 :	  13326:       vmla.f64        d3, d5, d4
    0.00 :	  1332a:       vldr    d5, [pc, #300]  ; 13458 <__acos_finite+0xd84>
    0.00 :	  1332e:       vmul.f64        d4, d4, d7
    0.00 :	  13332:       vmov.f64        d0, #96 ; 0x3f000000  0.5
    0.00 :	  13336:       vmla.f64        d1, d3, d9
    0.00 :	  1333a:       vmul.f64        d7, d7, d0
    0.00 :	  1333e:       vmul.f64        d6, d4, d6
    0.00 :	  13342:       vmov.f64        d3, #120        ; 0x3fc00000  1.5
    0.00 :	  13346:       vmls.f64        d3, d7, d4
    0.00 :	  1334a:       vadd.f64        d7, d4, d6
    0.00 :	  1334e:       vmla.f64        d2, d1, d9
    0.00 :	  13352:       vsub.f64        d7, d7, d6
    0.00 :	  13356:       vmov.f64        d6, d5
    0.00 :	  1335a:       vmov.f64        d5, d7
    0.00 :	  1335e:       vmla.f64        d5, d4, d3
    0.00 :	  13362:       vmov.f64        d4, d9
    0.00 :	  13366:       vmla.f64        d6, d2, d9
    0.00 :	  1336a:       vmls.f64        d4, d7, d7
    0.00 :	  1336e:       vmul.f64        d6, d6, d9
    0.00 :	  13372:       vdiv.f64        d1, d4, d5
    0.00 :	  13376:       blt.w   135a4 <__acos_finite+0xed0>
    0.00 :	  1337a:       vldr    d4, [pc, #228]  ; 13460 <__acos_finite+0xd8c>
    0.00 :	  1337e:       vadd.f64        d0, d7, d1
    0.00 :	  13382:       vmov.f64        d5, d1
    0.00 :	  13386:       vmla.f64        d5, d6, d0
    0.00 :	  1338a:       vadd.f64        d12, d7, d5
    0.00 :	  1338e:       vsub.f64        d6, d7, d12
    0.00 :	  13392:       vadd.f64        d6, d6, d5
    0.00 :	  13396:       vmov.f64        d5, d12
    0.00 :	  1339a:       vmla.f64        d5, d6, d4
    0.00 :	  1339e:       vcmp.f64        d12, d5
    0.00 :	  133a2:       vmrs    APSR_nzcv, fpscr
  100.00 :	  133a6:       bne.w   13552 <__acos_finite+0xe7e>
    0.00 :	  133aa:       vadd.f64        d12, d12, d12
    0.00 :	  133ae:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  133b2:       vmov.f64        d1, d12
    0.00 :	  133b6:       vmov.f64        d2, d9
    0.00 :	  133ba:       vmov.f64        d0, d8
    0.00 :	  133be:       bl      1da2c <__cos32>
    0.00 :	  133c2:       vmov.f64        d12, d0
    0.00 :	  133c6:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  133ca:       nop
    0.00 :	  133cc:       nop.w
    0.00 :	  133d0:       .word   0x71758e22
    0.00 :	  133d4:       .word   0x3ff00d1b
    0.00 :	  133d8:       .word   0x9999999a
    0.00 :	  133dc:       .word   0x3ff19999
    0.00 :	  133e0:       .word   0x851eb852
    0.00 :	  133e4:       .word   0x3ff051eb
    0.00 :	  133e8:       .word   0x0a3d70a4
    0.00 :	  133ec:       .word   0x3ff0a3d7
    0.00 :	  133f0:       .word   0xba5e353f
    0.00 :	  133f4:       .word   0x3ff00c49
    0.00 :	  133f8:       .word   0xb71758e2
    0.00 :	  133fc:       .word   0x3ff000d1
    0.00 :	  13400:       .word   0xc28f5c29
    0.00 :	  13404:       .word   0x3ff028f5
    0.00 :	  13408:       .word   0x18d1dab9
    0.00 :	  1340c:       .word   0x3fd40063
    0.00 :	  13410:       .word   0xff757304
    0.00 :	  13414:       .word   0x3fdfffff
    0.00 :	  13418:       .word   0x0f453c72
    0.00 :	  1341c:       .word   0x3f9292d8
    0.00 :	  13420:       .word   0xc822d419
    0.00 :	  13424:       .word   0x3f96e442
    0.00 :	  13428:       .word   0x6769c91a
    0.00 :	  1342c:       .word   0x3fd80049
    0.00 :	  13430:       .word   0xffecc1dd
    0.00 :	  13434:       .word   0x3fefffff
    0.00 :	  13438:       .word   0xae42c0e4
    0.00 :	  1343c:       .word   0x3fa6db6d
    0.00 :	  13440:       .word   0x04f4ad99
    0.00 :	  13444:       .word   0x3f9f1c7e
    0.00 :	  13448:       .word   0x3336127d
    0.00 :	  1344c:       .word   0x3fb33333
    0.00 :	  13450:       .word   0x00000000
    0.00 :	  13454:       .word   0x41a00000
    0.00 :	  13458:       .word   0x555554f9
    0.00 :	  1345c:       .word   0x3fc55555
    0.00 :	  13460:       .word   0x47ae147b
    0.00 :	  13464:       .word   0x3ff07ae1
    0.00 :	  13468:       .word   0x00069fb0
    0.00 :	  1346c:       vldr    d6, [r5]
    0.00 :	  13470:       vldr    d7, [r4]
    0.00 :	  13474:       vadd.f64        d5, d2, d6
    0.00 :	  13478:       vldr    d3, [pc, #492]  ; 13668 <__acos_finite+0xf94>
    0.00 :	  1347c:       vsub.f64        d6, d6, d5
    0.00 :	  13480:       vadd.f64        d4, d4, d7
    0.00 :	  13484:       vadd.f64        d7, d6, d2
    0.00 :	  13488:       vadd.f64        d7, d7, d4
    0.00 :	  1348c:       b.n     12cbe <__acos_finite+0x5ea>
    0.00 :	  1348e:       vldr    d2, [r6]
    0.00 :	  13492:       vldr    d3, [r4]
    0.00 :	  13496:       vadd.f64        d5, d2, d5
    0.00 :	  1349a:       vadd.f64        d1, d1, d3
    0.00 :	  1349e:       b.n     12dfe <__acos_finite+0x72a>
    0.00 :	  134a0:       vldr    d6, [r0]
    0.00 :	  134a4:       vneg.f64        d7, d8
    0.00 :	  134a8:       vldr    d11, [pc, #452] ; 13670 <__acos_finite+0xf9c>
    0.00 :	  134ac:       vsub.f64        d7, d7, d6
    0.00 :	  134b0:       b.n     12d28 <__acos_finite+0x654>
    0.00 :	  134b2:       movs    r2, #0
    0.00 :	  134b4:       movt    r2, #16368      ; 0x3ff0
    0.00 :	  134b8:       cmp     r3, r2
    0.00 :	  134ba:       beq.w   13644 <__acos_finite+0xf70>
    0.00 :	  134be:       movs    r2, #0
    0.00 :	  134c0:       movt    r2, #32752      ; 0x7ff0
    0.00 :	  134c4:       cmp     r3, r2
    0.00 :	  134c6:       bgt.n   13530 <__acos_finite+0xe5c>
    0.00 :	  134c8:       movs    r2, #0
    0.00 :	  134ca:       movt    r2, #32752      ; 0x7ff0
    0.00 :	  134ce:       cmp     r3, r2
    0.00 :	  134d0:       beq.n   1352c <__acos_finite+0xe58>
    0.00 :	  134d2:       movs    r5, #0
    0.00 :	  134d4:       movt    r5, #32752      ; 0x7ff0
    0.00 :	  134d8:       movs    r4, #0
    0.00 :	  134da:       mov     r3, r5
    0.00 :	  134dc:       mov     r2, r4
    0.00 :	  134de:       vmov    d7, r4, r5
    0.00 :	  134e2:       vmov    d6, r2, r3
    0.00 :	  134e6:       vdiv.f64        d12, d7, d6
    0.00 :	  134ea:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  134ee:       vadd.f64        d6, d4, d7
    0.00 :	  134f2:       vldr    d5, [pc, #388]  ; 13678 <__acos_finite+0xfa4>
    0.00 :	  134f6:       vsub.f64        d7, d7, d6
    0.00 :	  134fa:       vadd.f64        d3, d3, d2
    0.00 :	  134fe:       vadd.f64        d7, d7, d4
    0.00 :	  13502:       vadd.f64        d7, d7, d3
    0.00 :	  13506:       b.n     12e7c <__acos_finite+0x7a8>
    0.00 :	  13508:       vldr    d2, [r6]
    0.00 :	  1350c:       vldr    d3, [r4]
    0.00 :	  13510:       vadd.f64        d5, d2, d5
    0.00 :	  13514:       vadd.f64        d1, d1, d3
    0.00 :	  13518:       b.n     131aa <__acos_finite+0xad6>
    0.00 :	  1351a:       vldr    d6, [r0]
    0.00 :	  1351e:       vneg.f64        d7, d8
    0.00 :	  13522:       vldr    d9, [pc, #332]  ; 13670 <__acos_finite+0xf9c>
    0.00 :	  13526:       vsub.f64        d7, d7, d6
    0.00 :	  1352a:       b.n     130c4 <__acos_finite+0x9f0>
    0.00 :	  1352c:       cmp     r4, #0
    0.00 :	  1352e:       beq.n   134d2 <__acos_finite+0xdfe>
    0.00 :	  13530:       vadd.f64        d12, d8, d8
    0.00 :	  13534:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  13538:       vadd.f64        d6, d3, d7
    0.00 :	  1353c:       vldr    d5, [pc, #312]  ; 13678 <__acos_finite+0xfa4>
    0.00 :	  13540:       vsub.f64        d7, d7, d6
    0.00 :	  13544:       vadd.f64        d4, d4, d2
    0.00 :	  13548:       vadd.f64        d7, d7, d3
    0.00 :	  1354c:       vadd.f64        d7, d7, d4
    0.00 :	  13550:       b.n     12e7c <__acos_finite+0x7a8>
    0.00 :	  13552:       vsub.f64        d7, d7, d0
    0.00 :	  13556:       add     r0, sp, #8
    0.00 :	  13558:       vadd.f64        d1, d7, d1
    0.00 :	  1355c:       bl      1b000 <__doasin>
    0.00 :	  13560:       vldr    d12, [sp, #8]
    0.00 :	  13564:       vldr    d6, [pc, #280]  ; 13680 <__acos_finite+0xfac>
    0.00 :	  13568:       vldr    d7, [sp, #16]
    0.00 :	  1356c:       vmov.f64        d5, d12
    0.00 :	  13570:       vmla.f64        d5, d7, d6
    0.00 :	  13574:       vcmp.f64        d12, d5
    0.00 :	  13578:       vadd.f64        d12, d12, d12
    0.00 :	  1357c:       vmrs    APSR_nzcv, fpscr
    0.00 :	  13580:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  13584:       vldr    d6, [pc, #256]  ; 13688 <__acos_finite+0xfb4>
    0.00 :	  13588:       vmov.f64        d2, d12
    0.00 :	  1358c:       vmov.f64        d1, d12
    0.00 :	  13590:       vmov.f64        d0, d8
    0.00 :	  13594:       vmla.f64        d2, d7, d6
    0.00 :	  13598:       bl      1da2c <__cos32>
    0.00 :	  1359c:       vmov.f64        d12, d0
    0.00 :	  135a0:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  135a4:       movw    r2, #42128      ; 0xa490
    0.00 :	  135a8:       movt    r2, #6
    0.00 :	  135ac:       vadd.f64        d0, d7, d1
    0.00 :	  135b0:       movw    r3, #42136      ; 0xa498
    0.00 :	  135b4:       vldr    d9, [r2]
    0.00 :	  135b8:       movt    r3, #6
    0.00 :	  135bc:       vldr    d10, [r3]
    0.00 :	  135c0:       vldr    d5, [pc, #204]  ; 13690 <__acos_finite+0xfbc>
    0.00 :	  135c4:       vsub.f64        d4, d9, d1
    0.00 :	  135c8:       vmls.f64        d4, d6, d0
    0.00 :	  135cc:       vsub.f64        d6, d10, d7
    0.00 :	  135d0:       vadd.f64        d12, d4, d6
    0.00 :	  135d4:       vsub.f64        d6, d6, d12
    0.00 :	  135d8:       vadd.f64        d6, d6, d4
    0.00 :	  135dc:       vmov.f64        d4, d12
    0.00 :	  135e0:       vmla.f64        d4, d6, d5
    0.00 :	  135e4:       vcmp.f64        d12, d4
    0.00 :	  135e8:       vmrs    APSR_nzcv, fpscr
    0.00 :	  135ec:       beq.w   133aa <__acos_finite+0xcd6>
    0.00 :	  135f0:       vsub.f64        d7, d7, d0
    0.00 :	  135f4:       add     r0, sp, #8
    0.00 :	  135f6:       vadd.f64        d1, d7, d1
    0.00 :	  135fa:       bl      1b000 <__doasin>
    0.00 :	  135fe:       vldr    d3, [sp, #8]
    0.00 :	  13602:       vldr    d6, [sp, #16]
    0.00 :	  13606:       vldr    d5, [pc, #120]  ; 13680 <__acos_finite+0xfac>
    0.00 :	  1360a:       vsub.f64        d7, d10, d3
    0.00 :	  1360e:       vsub.f64        d4, d10, d7
    0.00 :	  13612:       vsub.f64        d6, d9, d6
    0.00 :	  13616:       vsub.f64        d4, d4, d3
    0.00 :	  1361a:       vadd.f64        d6, d6, d4
    0.00 :	  1361e:       vadd.f64        d12, d7, d6
    0.00 :	  13622:       vsub.f64        d7, d7, d12
    0.00 :	  13626:       vadd.f64        d7, d7, d6
    0.00 :	  1362a:       vmov.f64        d6, d12
    0.00 :	  1362e:       vmla.f64        d6, d7, d5
    0.00 :	  13632:       vcmp.f64        d12, d6
    0.00 :	  13636:       vadd.f64        d12, d12, d12
    0.00 :	  1363a:       vmrs    APSR_nzcv, fpscr
    0.00 :	  1363e:       beq.w   128a6 <__acos_finite+0x1d2>
    0.00 :	  13642:       b.n     13584 <__acos_finite+0xeb0>
    0.00 :	  13644:       cmp     r4, #0
    0.00 :	  13646:       bne.w   134d2 <__acos_finite+0xdfe>
    0.00 :	  1364a:       cmp     r5, #0
    0.00 :	  1364c:       ble.n   13656 <__acos_finite+0xf82>
    0.00 :	  1364e:       vldr    d12, [pc, #72]  ; 13698 <__acos_finite+0xfc4>
    0.00 :	  13652:       b.w     128a6 <__acos_finite+0x1d2>
    0.00 :	  13656:       movw    r3, #42136      ; 0xa498
    0.00 :	  1365a:       movt    r3, #6
    0.00 :	  1365e:       vldr    d12, [r3]
    0.00 :	  13662:       b.n     133aa <__acos_finite+0xcd6>
    0.00 :	  13664:       nop.w
    0.00 :	  13668:       .word   0xdc5d6388
    0.00 :	  1366c:       .word   0x3ff00346
    0.00 :	  13670:       .word   0xe147ae14
    0.00 :	  13674:       .word   0x3ff0147a
    0.00 :	  13678:       .word   0x49ba5e35
    0.00 :	  1367c:       .word   0x3ff0020c
    0.00 :	  13680:       .word   0x0c6f7a0b
    0.00 :	  13684:       .word   0x3ff00001
    0.00 :	  13688:       .word   0x33333333
    0.00 :	  1368c:       .word   0x3ff33333
    0.00 :	  13690:       .word   0x26e978d5
    0.00 :	  13694:       .word   0x3ff00831
         :	        ...
 Percent |	Source code & Disassembly of sg for cycles:ppp (1 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0003ebf4 <__printf_fp_l>:
         :	__printf_fp_l():
    0.00 :	  3ebf4:       stmdb   sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    0.00 :	  3ebf8:       mov     sl, r2
    0.00 :	  3ebfa:       sub     sp, #164        ; 0xa4
    0.00 :	  3ebfc:       ldrb    r2, [r2, #13]
    0.00 :	  3ebfe:       add     r7, sp, #8
    0.00 :	  3ec00:       mov     r4, r0
    0.00 :	  3ec02:       mov     r5, r1
    0.00 :	  3ec04:       ubfx    r0, r2, #2, #1
    0.00 :	  3ec08:       ands.w  r2, r2, #1
    0.00 :	  3ec0c:       str     r1, [r7, #88]   ; 0x58
    0.00 :	  3ec0e:       mov.w   r1, #0
    0.00 :	  3ec12:       str     r0, [r7, #92]   ; 0x5c
    0.00 :	  3ec14:       str     r1, [r7, #96]   ; 0x60
    0.00 :	  3ec16:       str     r1, [r7, #116]  ; 0x74
    0.00 :	  3ec18:       bne.w   3ed9c <__printf_fp_l+0x1a8>
    0.00 :	  3ec1c:       ldr     r0, [r5, #4]
    0.00 :	  3ec1e:       ldrb.w  r1, [sl, #12]
    0.00 :	  3ec22:       ldr     r5, [r0, #36]   ; 0x24
    0.00 :	  3ec24:       str     r5, [r7, #80]   ; 0x50
    0.00 :	  3ec26:       ldr     r5, [r0, #48]   ; 0x30
    0.00 :	  3ec28:       str     r5, [r7, #84]   ; 0x54
    0.00 :	  3ec2a:       lsls    r5, r1, #24
    0.00 :	  3ec2c:       bmi.w   3f07e <__printf_fp_l+0x48a>
    0.00 :	  3ec30:       mov.w   fp, #0
    0.00 :	  3ec34:       str.w   fp, [r7, #72]   ; 0x48
    0.00 :	  3ec38:       str.w   fp, [r7, #76]   ; 0x4c
    0.00 :	  3ec3c:       ldr     r3, [r3, #0]
    0.00 :	  3ec3e:       vldr    d0, [r3]
    0.00 :	  3ec42:       vcmp.f64        d0, d0
    0.00 :	  3ec46:       vmrs    APSR_nzcv, fpscr
    0.00 :	  3ec4a:       bvs.w   3f0ae <__printf_fp_l+0x4ba>
    0.00 :	  3ec4e:       vabs.f64        d7, d0
    0.00 :	  3ec52:       vldr    d6, [pc, #756]  ; 3ef48 <__printf_fp_l+0x354>
    0.00 :	  3ec56:       vcmp.f64        d7, d6
    0.00 :	  3ec5a:       vmrs    APSR_nzcv, fpscr
    0.00 :	  3ec5e:       ble.w   3ee64 <__printf_fp_l+0x270>
    0.00 :	  3ec62:       vmov    r5, s1
    0.00 :	  3ec66:       mrc     15, 0, r0, cr13, cr0, {3}
    0.00 :	  3ec6a:       ldr     r2, [pc, #740]  ; (3ef50 <__printf_fp_l+0x35c>)
    0.00 :	  3ec6c:       movw    r6, #26392      ; 0x6718
    0.00 :	  3ec70:       ldr.w   r3, [sl, #8]
    0.00 :	  3ec74:       movt    r6, #8
    0.00 :	  3ec78:       movw    r8, #26352      ; 0x66f0
    0.00 :	  3ec7c:       movt    r8, #8
    0.00 :	  3ec80:       and.w   r5, r5, #2147483648     ; 0x80000000
    0.00 :	  3ec84:       str     r5, [r7, #96]   ; 0x60
    0.00 :	  3ec86:       add     r2, pc
    0.00 :	  3ec88:       ldr     r2, [r2, #0]
    0.00 :	  3ec8a:       ldr     r0, [r0, r2]
    0.00 :	  3ec8c:       movw    r2, #26360      ; 0x66f8
    0.00 :	  3ec90:       movt    r2, #8
    0.00 :	  3ec94:       ldrh.w  r3, [r0, r3, lsl #1]
    0.00 :	  3ec98:       and.w   r3, r3, #256    ; 0x100
    0.00 :	  3ec9c:       cmp     r3, #0
    0.00 :	  3ec9e:       movw    r3, #26344      ; 0x66e8
    0.00 :	  3eca2:       movt    r3, #8
    0.00 :	  3eca6:       itt     ne
    0.00 :	  3eca8:       movne   r6, r2
    0.00 :	  3ecaa:       movne   r8, r3
    0.00 :	  3ecac:       ldr.w   r3, [sl, #4]
    0.00 :	  3ecb0:       cmp     r5, #0
    0.00 :	  3ecb2:       bne.w   3ee00 <__printf_fp_l+0x20c>
    0.00 :	  3ecb6:       tst.w   r1, #80 ; 0x50
    0.00 :	  3ecba:       it      ne
    0.00 :	  3ecbc:       subne.w r9, r3, #4
    0.00 :	  3ecc0:       bne.n   3ecc6 <__printf_fp_l+0xd2>
    0.00 :	  3ecc2:       sub.w   r9, r3, #3
    0.00 :	  3ecc6:       cmp.w   r9, #0
    0.00 :	  3ecca:       eor.w   r3, r1, #32
    0.00 :	  3ecce:       ite     le
    0.00 :	  3ecd0:       movle.w fp, #0
    0.00 :	  3ecd4:       movgt.w fp, #1
    0.00 :	  3ecd8:       ands.w  r3, fp, r3, lsr #5
    0.00 :	  3ecdc:       beq.n   3ed0a <__printf_fp_l+0x116>
    0.00 :	  3ecde:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3ece0:       mov     r2, r9
    0.00 :	  3ece2:       movs    r1, #32
    0.00 :	  3ece4:       mov     r0, r4
    0.00 :	  3ece6:       cmp     r3, #0
    0.00 :	  3ece8:       bne.w   3f076 <__printf_fp_l+0x482>
    0.00 :	  3ecec:       bl      45eb8 <_IO_padn>
    0.00 :	  3ecf0:       mov     r5, r0
    0.00 :	  3ecf2:       cmp     r5, r9
    0.00 :	  3ecf4:       bne.w   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3ecf8:       ldr     r3, [r7, #96]   ; 0x60
    0.00 :	  3ecfa:       cmp     r3, #0
    0.00 :	  3ecfc:       bne.w   3f09a <__printf_fp_l+0x4a6>
    0.00 :	  3ed00:       ldrb.w  r1, [sl, #12]
    0.00 :	  3ed04:       mov     r9, r5
    0.00 :	  3ed06:       mov.w   fp, #1
    0.00 :	  3ed0a:       lsls    r2, r1, #25
    0.00 :	  3ed0c:       bpl.w   3f03c <__printf_fp_l+0x448>
    0.00 :	  3ed10:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3ed12:       cmp     r3, #0
    0.00 :	  3ed14:       beq.w   3f084 <__printf_fp_l+0x490>
    0.00 :	  3ed18:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3ed1a:       cmp     r3, #0
    0.00 :	  3ed1c:       beq.w   3f154 <__printf_fp_l+0x560>
    0.00 :	  3ed20:       ldr     r1, [r3, #16]
    0.00 :	  3ed22:       ldr     r2, [r3, #20]
    0.00 :	  3ed24:       cmp     r1, r2
    0.00 :	  3ed26:       itttt   cc
    0.00 :	  3ed28:       addcc   r2, r1, #4
    0.00 :	  3ed2a:       strcc   r2, [r3, #16]
    0.00 :	  3ed2c:       movcc   r3, #43 ; 0x2b
    0.00 :	  3ed2e:       strcc   r3, [r1, #0]
    0.00 :	  3ed30:       bcs.w   3f154 <__printf_fp_l+0x560>
    0.00 :	  3ed34:       adds    r5, #1
    0.00 :	  3ed36:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3ed38:       cmp     r3, #0
    0.00 :	  3ed3a:       beq.w   3efdc <__printf_fp_l+0x3e8>
    0.00 :	  3ed3e:       add.w   r8, r6, #12
    0.00 :	  3ed42:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3ed44:       ldr.w   r1, [r6], #4
    0.00 :	  3ed48:       cmp     r3, #0
    0.00 :	  3ed4a:       beq.w   3f064 <__printf_fp_l+0x470>
    0.00 :	  3ed4e:       ldr     r0, [r3, #16]
    0.00 :	  3ed50:       ldr     r2, [r3, #20]
    0.00 :	  3ed52:       cmp     r0, r2
    0.00 :	  3ed54:       bcs.w   3f064 <__printf_fp_l+0x470>
    0.00 :	  3ed58:       sub.w   r2, r1, #4294967295
    0.00 :	  3ed5c:       add.w   lr, r0, #4
    0.00 :	  3ed60:       clz     r2, r2
    0.00 :	  3ed64:       str.w   lr, [r3, #16]
    0.00 :	  3ed68:       str     r1, [r0, #0]
    0.00 :	  3ed6a:       lsrs    r2, r2, #5
    0.00 :	  3ed6c:       cmp     r2, #0
    0.00 :	  3ed6e:       bne.n   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3ed70:       cmp     r6, r8
    0.00 :	  3ed72:       add.w   r5, r5, #1
    0.00 :	  3ed76:       bne.n   3ed42 <__printf_fp_l+0x14e>
    0.00 :	  3ed78:       ldrb.w  r3, [sl, #12]
    0.00 :	  3ed7c:       ands.w  r3, fp, r3, lsr #5
    0.00 :	  3ed80:       beq.n   3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3ed82:       mov     r0, r4
    0.00 :	  3ed84:       mov     r2, r9
    0.00 :	  3ed86:       movs    r1, #32
    0.00 :	  3ed88:       bl      45f74 <_IO_wpadn>
    0.00 :	  3ed8c:       cmp     r0, r9
    0.00 :	  3ed8e:       bne.n   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3ed90:       add     r5, r0
    0.00 :	  3ed92:       mov     r0, r5
    0.00 :	  3ed94:       adds    r7, #156        ; 0x9c
    0.00 :	  3ed96:       mov     sp, r7
    0.00 :	  3ed98:       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    0.00 :	  3ed9c:       ldr     r5, [r7, #88]   ; 0x58
    0.00 :	  3ed9e:       ldr     r0, [r5, #16]
    0.00 :	  3eda0:       ldr     r1, [r0, #44]   ; 0x2c
    0.00 :	  3eda2:       str     r1, [r7, #80]   ; 0x50
    0.00 :	  3eda4:       ldrb    r1, [r1, #0]
    0.00 :	  3eda6:       cbnz    r1, 3edae <__printf_fp_l+0x1ba>
    0.00 :	  3eda8:       ldr     r1, [r5, #4]
    0.00 :	  3edaa:       ldr     r1, [r1, #36]   ; 0x24
    0.00 :	  3edac:       str     r1, [r7, #80]   ; 0x50
    0.00 :	  3edae:       ldr.w   r1, [r0, #208]  ; 0xd0
    0.00 :	  3edb2:       str     r1, [r7, #84]   ; 0x54
    0.00 :	  3edb4:       cbnz    r1, 3edbe <__printf_fp_l+0x1ca>
    0.00 :	  3edb6:       ldr     r1, [r7, #88]   ; 0x58
    0.00 :	  3edb8:       ldr     r1, [r1, #4]
    0.00 :	  3edba:       ldr     r1, [r1, #48]   ; 0x30
    0.00 :	  3edbc:       str     r1, [r7, #84]   ; 0x54
    0.00 :	  3edbe:       ldrb.w  r1, [sl, #12]
    0.00 :	  3edc2:       lsls    r5, r1, #24
    0.00 :	  3edc4:       bpl.w   3ec30 <__printf_fp_l+0x3c>
    0.00 :	  3edc8:       ldr.w   fp, [r0, #52]   ; 0x34
    0.00 :	  3edcc:       ldrb.w  r0, [fp]
    0.00 :	  3edd0:       subs    r0, #1
    0.00 :	  3edd2:       uxtb    r0, r0
    0.00 :	  3edd4:       cmp     r0, #253        ; 0xfd
    0.00 :	  3edd6:       bhi.w   3ec30 <__printf_fp_l+0x3c>
    0.00 :	  3edda:       ldr     r0, [r7, #92]   ; 0x5c
    0.00 :	  3eddc:       cmp     r0, #0
    0.00 :	  3edde:       beq.w   3f0fa <__printf_fp_l+0x506>
    0.00 :	  3ede2:       cmp     r2, #0
    0.00 :	  3ede4:       beq.w   3f14a <__printf_fp_l+0x556>
    0.00 :	  3ede8:       ldr     r2, [r7, #88]   ; 0x58
    0.00 :	  3edea:       ldr     r2, [r2, #16]
    0.00 :	  3edec:       ldr.w   r2, [r2, #212]  ; 0xd4
    0.00 :	  3edf0:       str     r2, [r7, #72]   ; 0x48
    0.00 :	  3edf2:       ldr     r2, [r7, #72]   ; 0x48
    0.00 :	  3edf4:       cmp     r2, #0
    0.00 :	  3edf6:       ite     ne
    0.00 :	  3edf8:       movne   r2, #0
    0.00 :	  3edfa:       moveq   fp, r2
    0.00 :	  3edfc:       str     r2, [r7, #76]   ; 0x4c
    0.00 :	  3edfe:       b.n     3ec3c <__printf_fp_l+0x48>
    0.00 :	  3ee00:       sub.w   r9, r3, #4
    0.00 :	  3ee04:       eor.w   r1, r1, #32
    0.00 :	  3ee08:       cmp.w   r9, #0
    0.00 :	  3ee0c:       ite     le
    0.00 :	  3ee0e:       movle.w fp, #0
    0.00 :	  3ee12:       movgt.w fp, #1
    0.00 :	  3ee16:       ands.w  r5, fp, r1, lsr #5
    0.00 :	  3ee1a:       bne.w   3ecde <__printf_fp_l+0xea>
    0.00 :	  3ee1e:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3ee20:       cmp     r3, #0
    0.00 :	  3ee22:       beq.w   3f026 <__printf_fp_l+0x432>
    0.00 :	  3ee26:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3ee28:       cbz     r3, 3ee3e <__printf_fp_l+0x24a>
    0.00 :	  3ee2a:       ldr     r1, [r3, #16]
    0.00 :	  3ee2c:       ldr     r2, [r3, #20]
    0.00 :	  3ee2e:       cmp     r1, r2
    0.00 :	  3ee30:       itttt   cc
    0.00 :	  3ee32:       addcc   r2, r1, #4
    0.00 :	  3ee34:       strcc   r2, [r3, #16]
    0.00 :	  3ee36:       movcc   r3, #45 ; 0x2d
    0.00 :	  3ee38:       strcc   r3, [r1, #0]
    0.00 :	  3ee3a:       bcc.w   3ed34 <__printf_fp_l+0x140>
    0.00 :	  3ee3e:       movs    r1, #45 ; 0x2d
    0.00 :	  3ee40:       mov     r0, r4
    0.00 :	  3ee42:       bl      4639c <__woverflow>
    0.00 :	  3ee46:       sub.w   r0, r0, #4294967295
    0.00 :	  3ee4a:       clz     r0, r0
    0.00 :	  3ee4e:       lsrs    r0, r0, #5
    0.00 :	  3ee50:       cmp     r0, #0
    0.00 :	  3ee52:       beq.w   3ed34 <__printf_fp_l+0x140>
    0.00 :	  3ee56:       mov.w   r5, #4294967295
    0.00 :	  3ee5a:       adds    r7, #156        ; 0x9c
    0.00 :	  3ee5c:       mov     r0, r5
    0.00 :	  3ee5e:       mov     sp, r7
    0.00 :	  3ee60:       ldmia.w sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    0.00 :	  3ee64:       add.w   r8, r7, #100    ; 0x64
    0.00 :	  3ee68:       add.w   r3, r7, #96     ; 0x60
    0.00 :	  3ee6c:       add.w   r2, r7, #124    ; 0x7c
    0.00 :	  3ee70:       movs    r1, #2
    0.00 :	  3ee72:       mov     r0, r8
    0.00 :	  3ee74:       movs    r6, #0
    0.00 :	  3ee76:       bl      538f4 <__mpn_extract_double>
    0.00 :	  3ee7a:       ldr     r1, [r7, #124]  ; 0x7c
    0.00 :	  3ee7c:       str.w   r6, [r7, #140]  ; 0x8c
    0.00 :	  3ee80:       cmp     r1, #2
    0.00 :	  3ee82:       eor.w   r3, r1, r1, asr #31
    0.00 :	  3ee86:       sub.w   r3, r3, r1, asr #31
    0.00 :	  3ee8a:       add.w   r3, r3, #31
    0.00 :	  3ee8e:       mov.w   r3, r3, asr #5
    0.00 :	  3ee92:       mov.w   r3, r3, lsl #2
    0.00 :	  3ee96:       add.w   r3, r3, #30
    0.00 :	  3ee9a:       bic.w   r3, r3, #7
    0.00 :	  3ee9e:       sub.w   sp, sp, r3
    0.00 :	  3eea2:       add.w   lr, sp, #8
    0.00 :	  3eea6:       sub.w   sp, sp, r3
    0.00 :	  3eeaa:       add     r2, sp, #8
    0.00 :	  3eeac:       sub.w   sp, sp, r3
    0.00 :	  3eeb0:       add     r3, sp, #8
    0.00 :	  3eeb2:       str.w   lr, [r7, #128]  ; 0x80
    0.00 :	  3eeb6:       str.w   r2, [r7, #144]  ; 0x90
    0.00 :	  3eeba:       str.w   r3, [r7, #136]  ; 0x88
    0.00 :	  3eebe:       mov.w   r5, r0, lsl #5
    0.00 :	  3eec2:       str.w   r0, [r7, #132]  ; 0x84
    0.00 :	  3eec6:       sub.w   r5, r5, #52     ; 0x34
    0.00 :	  3eeca:       ble.w   3f218 <__printf_fp_l+0x624>
    0.00 :	  3eece:       adds    r6, r5, r1
    0.00 :	  3eed0:       ands.w  r3, r6, #31
    0.00 :	  3eed4:       bne.w   3f158 <__printf_fp_l+0x564>
    0.00 :	  3eed8:       cmp     r0, #0
    0.00 :	  3eeda:       add.w   r2, r6, #31
    0.00 :	  3eede:       ble.w   3ff06 <__printf_fp_l+0x1312>
    0.00 :	  3eee2:       ands.w  r2, r2, r6, asr #32
    0.00 :	  3eee6:       it      cc
    0.00 :	  3eee8:       movcc   r2, r6
    0.00 :	  3eeea:       add.w   r3, r8, r0, lsl #2
    0.00 :	  3eeee:       asrs    r2, r2, #5
    0.00 :	  3eef0:       add     r0, r2
    0.00 :	  3eef2:       add.w   lr, lr, r0, lsl #2
    0.00 :	  3eef6:       ldr.w   r5, [r3, #-4]!
    0.00 :	  3eefa:       cmp     r8, r3
    0.00 :	  3eefc:       str.w   r5, [lr, #-4]!
    0.00 :	  3ef00:       bne.n   3eef6 <__printf_fp_l+0x302>
    0.00 :	  3ef02:       str.w   r0, [r7, #132]  ; 0x84
    0.00 :	  3ef06:       cmp     r2, #0
    0.00 :	  3ef08:       ble.n   3ef1c <__printf_fp_l+0x328>
    0.00 :	  3ef0a:       ldr.w   r3, [r7, #128]  ; 0x80
    0.00 :	  3ef0e:       movs    r0, #0
    0.00 :	  3ef10:       add.w   r2, r3, r2, lsl #2
    0.00 :	  3ef14:       str.w   r0, [r3], #4
    0.00 :	  3ef18:       cmp     r2, r3
    0.00 :	  3ef1a:       bne.n   3ef14 <__printf_fp_l+0x320>
    0.00 :	  3ef1c:       movw    r2, #39396      ; 0x99e4
    0.00 :	  3ef20:       movt    r2, #8
    0.00 :	  3ef24:       ldr     r5, [pc, #44]   ; (3ef54 <__printf_fp_l+0x360>)
    0.00 :	  3ef26:       movs    r3, #0
    0.00 :	  3ef28:       mov     r0, r2
    0.00 :	  3ef2a:       str.w   fp, [r7, #68]   ; 0x44
    0.00 :	  3ef2e:       str.w   sl, [r7, #60]   ; 0x3c
    0.00 :	  3ef32:       mov     r8, r3
    0.00 :	  3ef34:       sub.w   r6, r5, #144    ; 0x90
    0.00 :	  3ef38:       ldr.w   r2, [r7, #140]  ; 0x8c
    0.00 :	  3ef3c:       mov.w   r9, #8
    0.00 :	  3ef40:       str     r4, [r7, #64]   ; 0x40
    0.00 :	  3ef42:       mov     sl, r3
    0.00 :	  3ef44:       mov     fp, r0
    0.00 :	  3ef46:       b.n     3ef96 <__printf_fp_l+0x3a2>
    0.00 :	  3ef48:       .word   0xffffffff
    0.00 :	  3ef4c:       .word   0x7fefffff
    0.00 :	  3ef50:       .word   0x0005e3f2
    0.00 :	  3ef54:       .word   0x000899c4
    0.00 :	  3ef58:       ldr.w   r3, [r5, #-12]
    0.00 :	  3ef5c:       ldr.w   r1, [r5, #-16]
    0.00 :	  3ef60:       ldr.w   r0, [r7, #144]  ; 0x90
    0.00 :	  3ef64:       lsls    r2, r3, #2
    0.00 :	  3ef66:       str.w   r3, [r7, #148]  ; 0x94
    0.00 :	  3ef6a:       add.w   r1, fp, r1, lsl #2
    0.00 :	  3ef6e:       blx     10170 <__rel_iplt_end+0x10>
    0.00 :	  3ef72:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  3ef76:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  3ef7a:       cmp     r2, r3
    0.00 :	  3ef7c:       bgt.w   3f1c8 <__printf_fp_l+0x5d4>
    0.00 :	  3ef80:       beq.w   3f1ae <__printf_fp_l+0x5ba>
    0.00 :	  3ef84:       ldr.w   r2, [r7, #140]  ; 0x8c
    0.00 :	  3ef88:       subs    r5, #16
    0.00 :	  3ef8a:       add.w   r9, r9, #4294967295
    0.00 :	  3ef8e:       cmp     r5, r6
    0.00 :	  3ef90:       bls.w   3f702 <__printf_fp_l+0xb0e>
    0.00 :	  3ef94:       ldr     r1, [r7, #124]  ; 0x7c
    0.00 :	  3ef96:       ldr.w   r3, [r5, #-8]
    0.00 :	  3ef9a:       add     r3, r8
    0.00 :	  3ef9c:       subs    r3, #1
    0.00 :	  3ef9e:       cmp     r3, r1
    0.00 :	  3efa0:       bgt.n   3ef88 <__printf_fp_l+0x394>
    0.00 :	  3efa2:       cmp     r2, #0
    0.00 :	  3efa4:       beq.n   3ef58 <__printf_fp_l+0x364>
    0.00 :	  3efa6:       ldr.w   r3, [r5, #-16]
    0.00 :	  3efaa:       ldr.w   r4, [r5, #-12]
    0.00 :	  3efae:       adds    r3, #2
    0.00 :	  3efb0:       ldr.w   r1, [r7, #136]  ; 0x88
    0.00 :	  3efb4:       ldr.w   r0, [r7, #144]  ; 0x90
    0.00 :	  3efb8:       subs    r4, #2
    0.00 :	  3efba:       add.w   r3, fp, r3, lsl #2
    0.00 :	  3efbe:       str     r4, [sp, #0]
    0.00 :	  3efc0:       bl      52fe0 <__mpn_mul>
    0.00 :	  3efc4:       ldr.w   r3, [r7, #140]  ; 0x8c
    0.00 :	  3efc8:       ldr.w   r2, [r5, #-12]
    0.00 :	  3efcc:       add     r3, r2
    0.00 :	  3efce:       cmp     r0, #0
    0.00 :	  3efd0:       beq.w   3f204 <__printf_fp_l+0x610>
    0.00 :	  3efd4:       subs    r3, #2
    0.00 :	  3efd6:       str.w   r3, [r7, #148]  ; 0x94
    0.00 :	  3efda:       b.n     3ef76 <__printf_fp_l+0x382>
    0.00 :	  3efdc:       mov     r6, r8
    0.00 :	  3efde:       add.w   r8, r8, #3
    0.00 :	  3efe2:       subs    r5, r5, r6
    0.00 :	  3efe4:       ldr     r3, [r4, #20]
    0.00 :	  3efe6:       ldr     r2, [r4, #24]
    0.00 :	  3efe8:       ldrb.w  r1, [r6], #1
    0.00 :	  3efec:       cmp     r3, r2
    0.00 :	  3efee:       ittt    cc
    0.00 :	  3eff0:       addcc   r2, r3, #1
    0.00 :	  3eff2:       strcc   r2, [r4, #20]
    0.00 :	  3eff4:       strbcc  r1, [r3, #0]
    0.00 :	  3eff6:       bcs.n   3f0a2 <__printf_fp_l+0x4ae>
    0.00 :	  3eff8:       cmp     r6, r8
    0.00 :	  3effa:       add.w   r3, r6, r5
    0.00 :	  3effe:       bne.n   3efe4 <__printf_fp_l+0x3f0>
    0.00 :	  3f000:       ldrb.w  r2, [sl, #12]
    0.00 :	  3f004:       ands.w  r2, fp, r2, lsr #5
    0.00 :	  3f008:       it      eq
    0.00 :	  3f00a:       moveq   r5, r3
    0.00 :	  3f00c:       beq.w   3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3f010:       mov     r0, r4
    0.00 :	  3f012:       mov     r2, r9
    0.00 :	  3f014:       movs    r1, #32
    0.00 :	  3f016:       mov     r5, r3
    0.00 :	  3f018:       bl      45eb8 <_IO_padn>
    0.00 :	  3f01c:       cmp     r0, r9
    0.00 :	  3f01e:       bne.w   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3f022:       add     r5, r0
    0.00 :	  3f024:       b.n     3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3f026:       ldr     r3, [r4, #20]
    0.00 :	  3f028:       ldr     r2, [r4, #24]
    0.00 :	  3f02a:       cmp     r3, r2
    0.00 :	  3f02c:       it      cs
    0.00 :	  3f02e:       movcs   r1, #45 ; 0x2d
    0.00 :	  3f030:       bcs.n   3f128 <__printf_fp_l+0x534>
    0.00 :	  3f032:       adds    r2, r3, #1
    0.00 :	  3f034:       str     r2, [r4, #20]
    0.00 :	  3f036:       movs    r2, #45 ; 0x2d
    0.00 :	  3f038:       strb    r2, [r3, #0]
    0.00 :	  3f03a:       b.n     3ed34 <__printf_fp_l+0x140>
    0.00 :	  3f03c:       lsls    r3, r1, #27
    0.00 :	  3f03e:       bpl.w   3ed36 <__printf_fp_l+0x142>
    0.00 :	  3f042:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f044:       cmp     r3, #0
    0.00 :	  3f046:       beq.n   3f112 <__printf_fp_l+0x51e>
    0.00 :	  3f048:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3f04a:       cbz     r3, 3f060 <__printf_fp_l+0x46c>
    0.00 :	  3f04c:       ldr     r1, [r3, #16]
    0.00 :	  3f04e:       ldr     r2, [r3, #20]
    0.00 :	  3f050:       cmp     r1, r2
    0.00 :	  3f052:       itttt   cc
    0.00 :	  3f054:       addcc   r2, r1, #4
    0.00 :	  3f056:       strcc   r2, [r3, #16]
    0.00 :	  3f058:       movcc   r3, #32
    0.00 :	  3f05a:       strcc   r3, [r1, #0]
    0.00 :	  3f05c:       bcc.w   3ed34 <__printf_fp_l+0x140>
    0.00 :	  3f060:       movs    r1, #32
    0.00 :	  3f062:       b.n     3ee40 <__printf_fp_l+0x24c>
    0.00 :	  3f064:       mov     r0, r4
    0.00 :	  3f066:       bl      4639c <__woverflow>
    0.00 :	  3f06a:       sub.w   r2, r0, #4294967295
    0.00 :	  3f06e:       clz     r2, r2
    0.00 :	  3f072:       lsrs    r2, r2, #5
    0.00 :	  3f074:       b.n     3ed6c <__printf_fp_l+0x178>
    0.00 :	  3f076:       bl      45f74 <_IO_wpadn>
    0.00 :	  3f07a:       mov     r5, r0
    0.00 :	  3f07c:       b.n     3ecf2 <__printf_fp_l+0xfe>
    0.00 :	  3f07e:       ldr.w   fp, [r0, #44]   ; 0x2c
    0.00 :	  3f082:       b.n     3edcc <__printf_fp_l+0x1d8>
    0.00 :	  3f084:       ldr     r3, [r4, #20]
    0.00 :	  3f086:       ldr     r2, [r4, #24]
    0.00 :	  3f088:       cmp     r3, r2
    0.00 :	  3f08a:       it      cs
    0.00 :	  3f08c:       movcs   r1, #43 ; 0x2b
    0.00 :	  3f08e:       bcs.n   3f128 <__printf_fp_l+0x534>
    0.00 :	  3f090:       adds    r2, r3, #1
    0.00 :	  3f092:       str     r2, [r4, #20]
    0.00 :	  3f094:       movs    r2, #43 ; 0x2b
    0.00 :	  3f096:       strb    r2, [r3, #0]
    0.00 :	  3f098:       b.n     3ed34 <__printf_fp_l+0x140>
    0.00 :	  3f09a:       mov     r9, r5
    0.00 :	  3f09c:       mov.w   fp, #1
    0.00 :	  3f0a0:       b.n     3ee1e <__printf_fp_l+0x22a>
    0.00 :	  3f0a2:       mov     r0, r4
    0.00 :	  3f0a4:       bl      26a14 <__overflow>
    0.00 :	  3f0a8:       adds    r0, #1
    0.00 :	  3f0aa:       bne.n   3eff8 <__printf_fp_l+0x404>
    0.00 :	  3f0ac:       b.n     3ee56 <__printf_fp_l+0x262>
    0.00 :	  3f0ae:       vmov    r5, s1
    0.00 :	  3f0b2:       mrc     15, 0, r0, cr13, cr0, {3}
    0.00 :	  3f0b6:       ldr     r2, [pc, #348]  ; (3f214 <__printf_fp_l+0x620>)
    0.00 :	  3f0b8:       movw    r6, #26376      ; 0x6708
    0.00 :	  3f0bc:       ldr.w   r3, [sl, #8]
    0.00 :	  3f0c0:       movt    r6, #8
    0.00 :	  3f0c4:       movw    r8, #26348      ; 0x66ec
    0.00 :	  3f0c8:       movt    r8, #8
    0.00 :	  3f0cc:       and.w   r5, r5, #2147483648     ; 0x80000000
    0.00 :	  3f0d0:       str     r5, [r7, #96]   ; 0x60
    0.00 :	  3f0d2:       add     r2, pc
    0.00 :	  3f0d4:       ldr     r2, [r2, #0]
    0.00 :	  3f0d6:       ldr     r0, [r0, r2]
    0.00 :	  3f0d8:       movw    r2, #26408      ; 0x6728
    0.00 :	  3f0dc:       movt    r2, #8
    0.00 :	  3f0e0:       ldrh.w  r3, [r0, r3, lsl #1]
    0.00 :	  3f0e4:       and.w   r3, r3, #256    ; 0x100
    0.00 :	  3f0e8:       cmp     r3, #0
    0.00 :	  3f0ea:       movw    r3, #26356      ; 0x66f4
    0.00 :	  3f0ee:       movt    r3, #8
    0.00 :	  3f0f2:       itt     eq
    0.00 :	  3f0f4:       moveq   r6, r2
    0.00 :	  3f0f6:       moveq   r8, r3
    0.00 :	  3f0f8:       b.n     3ecac <__printf_fp_l+0xb8>
    0.00 :	  3f0fa:       cbz     r2, 3f140 <__printf_fp_l+0x54c>
    0.00 :	  3f0fc:       ldr     r2, [r7, #88]   ; 0x58
    0.00 :	  3f0fe:       ldr     r2, [r2, #16]
    0.00 :	  3f100:       ldr     r2, [r2, #48]   ; 0x30
    0.00 :	  3f102:       str     r2, [r7, #76]   ; 0x4c
    0.00 :	  3f104:       ldr     r2, [r7, #76]   ; 0x4c
    0.00 :	  3f106:       ldrb    r2, [r2, #0]
    0.00 :	  3f108:       cmp     r2, #0
    0.00 :	  3f10a:       bne.n   3f20c <__printf_fp_l+0x618>
    0.00 :	  3f10c:       mov     fp, r2
    0.00 :	  3f10e:       str     r2, [r7, #72]   ; 0x48
    0.00 :	  3f110:       b.n     3ec3c <__printf_fp_l+0x48>
    0.00 :	  3f112:       ldr     r2, [r4, #24]
    0.00 :	  3f114:       ldr     r3, [r4, #20]
    0.00 :	  3f116:       cmp     r3, r2
    0.00 :	  3f118:       itttt   cc
    0.00 :	  3f11a:       addcc   r2, r3, #1
    0.00 :	  3f11c:       strcc   r2, [r4, #20]
    0.00 :	  3f11e:       movcc   r2, #32
    0.00 :	  3f120:       strbcc  r2, [r3, #0]
    0.00 :	  3f122:       bcc.w   3ed34 <__printf_fp_l+0x140>
    0.00 :	  3f126:       movs    r1, #32
    0.00 :	  3f128:       mov     r0, r4
    0.00 :	  3f12a:       bl      26a14 <__overflow>
    0.00 :	  3f12e:       sub.w   r0, r0, #4294967295
    0.00 :	  3f132:       clz     r0, r0
    0.00 :	  3f136:       lsrs    r0, r0, #5
    0.00 :	  3f138:       cmp     r0, #0
    0.00 :	  3f13a:       beq.w   3ed34 <__printf_fp_l+0x140>
    0.00 :	  3f13e:       b.n     3ee56 <__printf_fp_l+0x262>
    0.00 :	  3f140:       ldr     r2, [r7, #88]   ; 0x58
    0.00 :	  3f142:       ldr     r2, [r2, #4]
    0.00 :	  3f144:       ldr     r2, [r2, #40]   ; 0x28
    0.00 :	  3f146:       str     r2, [r7, #76]   ; 0x4c
    0.00 :	  3f148:       b.n     3f104 <__printf_fp_l+0x510>
    0.00 :	  3f14a:       ldr     r2, [r7, #88]   ; 0x58
    0.00 :	  3f14c:       ldr     r2, [r2, #4]
    0.00 :	  3f14e:       ldr     r2, [r2, #52]   ; 0x34
    0.00 :	  3f150:       str     r2, [r7, #72]   ; 0x48
    0.00 :	  3f152:       b.n     3edf2 <__printf_fp_l+0x1fe>
    0.00 :	  3f154:       movs    r1, #43 ; 0x2b
    0.00 :	  3f156:       b.n     3ee40 <__printf_fp_l+0x24c>
    0.00 :	  3f158:       negs    r1, r6
    0.00 :	  3f15a:       mov     r2, r0
    0.00 :	  3f15c:       add.w   ip, r6, #31
    0.00 :	  3f160:       and.w   r0, r1, #31
    0.00 :	  3f164:       it      pl
    0.00 :	  3f166:       negpl   r3, r0
    0.00 :	  3f168:       bics.w  r6, r6, r6, asr #32
    0.00 :	  3f16c:       it      cs
    0.00 :	  3f16e:       movcs   r6, ip
    0.00 :	  3f170:       mov     r1, r8
    0.00 :	  3f172:       asrs    r0, r6, #5
    0.00 :	  3f174:       add.w   r0, lr, r0, lsl #2
    0.00 :	  3f178:       bl      52f28 <__mpn_lshift>
    0.00 :	  3f17c:       ldr     r1, [r7, #124]  ; 0x7c
    0.00 :	  3f17e:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3f182:       adds    r2, r5, r1
    0.00 :	  3f184:       add.w   r5, r2, #31
    0.00 :	  3f188:       bics.w  r2, r2, r2, asr #32
    0.00 :	  3f18c:       it      cs
    0.00 :	  3f18e:       movcs   r2, r5
    0.00 :	  3f190:       asrs    r2, r2, #5
    0.00 :	  3f192:       add     r3, r2
    0.00 :	  3f194:       str.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3f198:       cmp     r0, #0
    0.00 :	  3f19a:       beq.w   3ef06 <__printf_fp_l+0x312>
    0.00 :	  3f19e:       ldr.w   r5, [r7, #128]  ; 0x80
    0.00 :	  3f1a2:       adds    r6, r3, #1
    0.00 :	  3f1a4:       str.w   r6, [r7, #132]  ; 0x84
    0.00 :	  3f1a8:       str.w   r0, [r5, r3, lsl #2]
    0.00 :	  3f1ac:       b.n     3ef06 <__printf_fp_l+0x312>
    0.00 :	  3f1ae:       mov     r2, r3
    0.00 :	  3f1b0:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  3f1b4:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3f1b8:       bl      529a8 <__mpn_cmp>
    0.00 :	  3f1bc:       cmp     r0, #0
    0.00 :	  3f1be:       it      ge
    0.00 :	  3f1c0:       ldrge.w r3, [r7, #148]  ; 0x94
    0.00 :	  3f1c4:       blt.w   3ef84 <__printf_fp_l+0x390>
    0.00 :	  3f1c8:       lsls    r2, r3, #2
    0.00 :	  3f1ca:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  3f1ce:       ldr.w   r0, [r7, #136]  ; 0x88
    0.00 :	  3f1d2:       str.w   r3, [r7, #140]  ; 0x8c
    0.00 :	  3f1d6:       blx     10170 <__rel_iplt_end+0x10>
    0.00 :	  3f1da:       ldr.w   r2, [r7, #140]  ; 0x8c
    0.00 :	  3f1de:       movs    r3, #1
    0.00 :	  3f1e0:       ldr.w   r1, [r7, #136]  ; 0x88
    0.00 :	  3f1e4:       lsl.w   r3, r3, r9
    0.00 :	  3f1e8:       add.w   r0, r2, #1073741824     ; 0x40000000
    0.00 :	  3f1ec:       orr.w   sl, sl, r3
    0.00 :	  3f1f0:       subs    r0, #1
    0.00 :	  3f1f2:       ldr.w   r3, [r1, r0, lsl #2]
    0.00 :	  3f1f6:       clz     r8, r3
    0.00 :	  3f1fa:       rsb     r8, r8, r2, lsl #5
    0.00 :	  3f1fe:       sub.w   r8, r8, #65     ; 0x41
    0.00 :	  3f202:       b.n     3ef88 <__printf_fp_l+0x394>
    0.00 :	  3f204:       subs    r3, #3
    0.00 :	  3f206:       str.w   r3, [r7, #148]  ; 0x94
    0.00 :	  3f20a:       b.n     3ef76 <__printf_fp_l+0x382>
    0.00 :	  3f20c:       mvn.w   r2, #1
    0.00 :	  3f210:       str     r2, [r7, #72]   ; 0x48
    0.00 :	  3f212:       b.n     3ec3c <__printf_fp_l+0x48>
    0.00 :	  3f214:       .word   0x0005dfa6
    0.00 :	  3f218:       cmp     r1, #0
    0.00 :	  3f21a:       blt.w   3fcb0 <__printf_fp_l+0x10bc>
    0.00 :	  3f21e:       adds    r3, r5, r1
    0.00 :	  3f220:       mov     r2, r0
    0.00 :	  3f222:       mov     r1, r8
    0.00 :	  3f224:       mov     r0, lr
    0.00 :	  3f226:       bl      52f28 <__mpn_lshift>
    0.00 :	  3f22a:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3f22e:       ldr.w   r2, [r7, #128]  ; 0x80
    0.00 :	  3f232:       adds    r1, r3, #1
    0.00 :	  3f234:       str.w   r1, [r7, #132]  ; 0x84
    0.00 :	  3f238:       str.w   r0, [r2, r3, lsl #2]
    0.00 :	  3f23c:       str     r6, [r7, #124]  ; 0x7c
    0.00 :	  3f23e:       ldr     r3, [pc, #636]  ; (3f4bc <__printf_fp_l+0x8c8>)
    0.00 :	  3f240:       mrc     15, 0, r2, cr13, cr0, {3}
    0.00 :	  3f244:       str     r2, [r7, #4]
    0.00 :	  3f246:       add     r3, pc
    0.00 :	  3f248:       ldr     r3, [r3, #0]
    0.00 :	  3f24a:       ldr.w   r0, [sl, #8]
    0.00 :	  3f24e:       ldr.w   r1, [sl, #4]
    0.00 :	  3f252:       ldr     r2, [r2, r3]
    0.00 :	  3f254:       str     r1, [r7, #52]   ; 0x34
    0.00 :	  3f256:       ldrb.w  r3, [r2, r0, lsl #2]
    0.00 :	  3f25a:       cmp     r3, #101        ; 0x65
    0.00 :	  3f25c:       str     r3, [r7, #40]   ; 0x28
    0.00 :	  3f25e:       beq.w   3f8bc <__printf_fp_l+0xcc8>
    0.00 :	  3f262:       ldr     r3, [r7, #40]   ; 0x28
    0.00 :	  3f264:       cmp     r3, #102        ; 0x66
    0.00 :	  3f266:       beq.w   3fa94 <__printf_fp_l+0xea0>
    0.00 :	  3f26a:       ldr.w   r2, [sl]
    0.00 :	  3f26e:       cmp     r2, #0
    0.00 :	  3f270:       it      lt
    0.00 :	  3f272:       movlt   r2, #6
    0.00 :	  3f274:       blt.n   3f27a <__printf_fp_l+0x686>
    0.00 :	  3f276:       it      eq
    0.00 :	  3f278:       moveq   r2, #1
    0.00 :	  3f27a:       ldr     r1, [r7, #116]  ; 0x74
    0.00 :	  3f27c:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  3f27e:       cmp     r1, #0
    0.00 :	  3f280:       beq.w   3fa38 <__printf_fp_l+0xe44>
    0.00 :	  3f284:       cmp     r3, #4
    0.00 :	  3f286:       bgt.w   3fa80 <__printf_fp_l+0xe8c>
    0.00 :	  3f28a:       movs    r3, #102        ; 0x66
    0.00 :	  3f28c:       str     r3, [r7, #120]  ; 0x78
    0.00 :	  3f28e:       movs    r3, #0
    0.00 :	  3f290:       str     r3, [r7, #56]   ; 0x38
    0.00 :	  3f292:       ldr     r3, [r7, #56]   ; 0x38
    0.00 :	  3f294:       adds    r1, r2, #5
    0.00 :	  3f296:       str     r1, [r7, #64]   ; 0x40
    0.00 :	  3f298:       subs    r3, r2, r3
    0.00 :	  3f29a:       str     r3, [r7, #32]
    0.00 :	  3f29c:       mov     r6, r3
    0.00 :	  3f29e:       ldrb.w  r5, [sl, #12]
    0.00 :	  3f2a2:       str     r2, [r7, #0]
    0.00 :	  3f2a4:       ands.w  r5, r5, #8
    0.00 :	  3f2a8:       iteee   eq
    0.00 :	  3f2aa:       streq   r5, [r7, #68]   ; 0x44
    0.00 :	  3f2ac:       ldrne   r3, [r7, #32]
    0.00 :	  3f2ae:       movne   r5, #0
    0.00 :	  3f2b0:       strne   r3, [r7, #68]   ; 0x44
    0.00 :	  3f2b2:       cmp.w   fp, #0
    0.00 :	  3f2b6:       beq.w   3fbfe <__printf_fp_l+0x100a>
    0.00 :	  3f2ba:       ldrb.w  r3, [fp]
    0.00 :	  3f2be:       subs    r3, #1
    0.00 :	  3f2c0:       uxtb    r3, r3
    0.00 :	  3f2c2:       cmp     r3, #253        ; 0xfd
    0.00 :	  3f2c4:       ittt    hi
    0.00 :	  3f2c6:       movhi   r3, #0
    0.00 :	  3f2c8:       strhi   r3, [r7, #28]
    0.00 :	  3f2ca:       movhi   r0, r3
    0.00 :	  3f2cc:       bls.w   3fa56 <__printf_fp_l+0xe62>
    0.00 :	  3f2d0:       ldr     r3, [r7, #64]   ; 0x40
    0.00 :	  3f2d2:       adds    r3, #1
    0.00 :	  3f2d4:       adds    r3, r0, r3
    0.00 :	  3f2d6:       str     r3, [r7, #64]   ; 0x40
    0.00 :	  3f2d8:       ldr     r2, [r7, #64]   ; 0x40
    0.00 :	  3f2da:       movw    r3, #65532      ; 0xfffc
    0.00 :	  3f2de:       movt    r3, #16383      ; 0x3fff
    0.00 :	  3f2e2:       cmp     r2, r6
    0.00 :	  3f2e4:       ite     cs
    0.00 :	  3f2e6:       movcs   r6, #0
    0.00 :	  3f2e8:       movcc   r6, #1
    0.00 :	  3f2ea:       cmp     r2, r3
    0.00 :	  3f2ec:       it      hi
    0.00 :	  3f2ee:       orrhi.w r6, r6, #1
    0.00 :	  3f2f2:       cmp     r6, #0
    0.00 :	  3f2f4:       bne.w   3ff56 <__printf_fp_l+0x1362>
    0.00 :	  3f2f8:       ldr     r3, [r7, #64]   ; 0x40
    0.00 :	  3f2fa:       adds    r6, r3, #2
    0.00 :	  3f2fc:       lsls    r6, r6, #2
    0.00 :	  3f2fe:       cmp.w   r6, #4096       ; 0x1000
    0.00 :	  3f302:       bhi.w   3ffe2 <__printf_fp_l+0x13ee>
    0.00 :	  3f306:       adds    r6, #14
    0.00 :	  3f308:       movs    r3, #1
    0.00 :	  3f30a:       bic.w   r6, r6, #7
    0.00 :	  3f30e:       str     r3, [r7, #24]
    0.00 :	  3f310:       sub.w   sp, sp, r6
    0.00 :	  3f314:       add     r3, sp, #8
    0.00 :	  3f316:       str     r3, [r7, #44]   ; 0x2c
    0.00 :	  3f318:       ldr     r3, [r7, #116]  ; 0x74
    0.00 :	  3f31a:       ldr     r2, [r7, #44]   ; 0x2c
    0.00 :	  3f31c:       adds    r2, #8
    0.00 :	  3f31e:       str     r2, [r7, #60]   ; 0x3c
    0.00 :	  3f320:       cbz     r3, 3f32a <__printf_fp_l+0x736>
    0.00 :	  3f322:       ldr     r3, [r7, #120]  ; 0x78
    0.00 :	  3f324:       cmp     r3, #102        ; 0x66
    0.00 :	  3f326:       beq.w   3fea2 <__printf_fp_l+0x12ae>
    0.00 :	  3f32a:       ldr     r3, [r7, #56]   ; 0x38
    0.00 :	  3f32c:       cmp     r3, #0
    0.00 :	  3f32e:       ble.w   4009e <__printf_fp_l+0x14aa>
    0.00 :	  3f332:       add.w   r2, r7, #116    ; 0x74
    0.00 :	  3f336:       ldr     r5, [r7, #60]   ; 0x3c
    0.00 :	  3f338:       movs    r1, #0
    0.00 :	  3f33a:       mov     r8, r3
    0.00 :	  3f33c:       mov     r6, r1
    0.00 :	  3f33e:       mov     r9, r2
    0.00 :	  3f340:       str     r2, [r7, #48]   ; 0x30
    0.00 :	  3f342:       mov     r0, r9
    0.00 :	  3f344:       adds    r6, #1
    0.00 :	  3f346:       bl      3e968 <hack_digit>
    0.00 :	  3f34a:       cmp     r8, r6
    0.00 :	  3f34c:       str.w   r0, [r5], #4
    0.00 :	  3f350:       bne.n   3f342 <__printf_fp_l+0x74e>
    0.00 :	  3f352:       ldr     r2, [r7, #56]   ; 0x38
    0.00 :	  3f354:       ldr     r3, [r7, #60]   ; 0x3c
    0.00 :	  3f356:       str     r6, [r7, #36]   ; 0x24
    0.00 :	  3f358:       add.w   r6, r3, r2, lsl #2
    0.00 :	  3f35c:       ldrb.w  r3, [sl, #12]
    0.00 :	  3f360:       ldr     r2, [r7, #68]   ; 0x44
    0.00 :	  3f362:       ubfx    r3, r3, #3, #1
    0.00 :	  3f366:       cmp     r2, #0
    0.00 :	  3f368:       it      gt
    0.00 :	  3f36a:       orrgt.w r3, r3, #1
    0.00 :	  3f36e:       cmp     r3, #0
    0.00 :	  3f370:       beq.w   3ff1e <__printf_fp_l+0x132a>
    0.00 :	  3f374:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  3f376:       adds    r6, #4
    0.00 :	  3f378:       movs    r5, #1
    0.00 :	  3f37a:       str.w   r3, [r6, #-4]
    0.00 :	  3f37e:       ldr.w   r9, [r7, #68]   ; 0x44
    0.00 :	  3f382:       movs    r3, #0
    0.00 :	  3f384:       str.w   sl, [r7, #12]
    0.00 :	  3f388:       mov     sl, r3
    0.00 :	  3f38a:       str.w   fp, [r7, #20]
    0.00 :	  3f38e:       mov     fp, r3
    0.00 :	  3f390:       mov     r8, r9
    0.00 :	  3f392:       cmp     sl, r8
    0.00 :	  3f394:       str     r4, [r7, #16]
    0.00 :	  3f396:       mov     r2, r8
    0.00 :	  3f398:       ldr     r4, [r7, #48]   ; 0x30
    0.00 :	  3f39a:       ldr.w   r9, [r7, #32]
    0.00 :	  3f39e:       blt.n   3f3ac <__printf_fp_l+0x7b8>
    0.00 :	  3f3a0:       cmp     r9, sl
    0.00 :	  3f3a2:       ble.n   3f3f8 <__printf_fp_l+0x804>
    0.00 :	  3f3a4:       ldr.w   r0, [r7, #132]  ; 0x84
    0.00 :	  3f3a8:       cmp     r0, #1
    0.00 :	  3f3aa:       ble.n   3f3ee <__printf_fp_l+0x7fa>
    0.00 :	  3f3ac:       mov     r0, r4
    0.00 :	  3f3ae:       eor.w   r5, r5, #1
    0.00 :	  3f3b2:       bl      3e968 <hack_digit>
    0.00 :	  3f3b6:       cmp     r0, #48 ; 0x30
    0.00 :	  3f3b8:       ite     ne
    0.00 :	  3f3ba:       movne   r5, #0
    0.00 :	  3f3bc:       andeq.w r5, r5, #1
    0.00 :	  3f3c0:       cbz     r5, 3f3ea <__printf_fp_l+0x7f6>
    0.00 :	  3f3c2:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f3c4:       add.w   r9, r9, #1
    0.00 :	  3f3c8:       cmp     r3, #0
    0.00 :	  3f3ca:       it      le
    0.00 :	  3f3cc:       movle   r5, #0
    0.00 :	  3f3ce:       ble.n   3f3da <__printf_fp_l+0x7e6>
    0.00 :	  3f3d0:       add.w   fp, fp, #1
    0.00 :	  3f3d4:       movs    r5, #0
    0.00 :	  3f3d6:       add.w   r8, r3, fp
    0.00 :	  3f3da:       add.w   sl, sl, #1
    0.00 :	  3f3de:       str.w   r0, [r6], #4
    0.00 :	  3f3e2:       cmp     sl, r8
    0.00 :	  3f3e4:       mov     r2, r8
    0.00 :	  3f3e6:       bge.n   3f3a0 <__printf_fp_l+0x7ac>
    0.00 :	  3f3e8:       b.n     3f3ac <__printf_fp_l+0x7b8>
    0.00 :	  3f3ea:       movs    r5, #1
    0.00 :	  3f3ec:       b.n     3f3da <__printf_fp_l+0x7e6>
    0.00 :	  3f3ee:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3f3f2:       ldr     r0, [r0, #0]
    0.00 :	  3f3f4:       cmp     r0, #0
    0.00 :	  3f3f6:       bne.n   3f3ac <__printf_fp_l+0x7b8>
    0.00 :	  3f3f8:       ldr.w   r3, [r6, #-4]
    0.00 :	  3f3fc:       mov     r8, sl
    0.00 :	  3f3fe:       ldr     r1, [r7, #84]   ; 0x54
    0.00 :	  3f400:       str.w   fp, [r7, #8]
    0.00 :	  3f404:       cmp     r1, r3
    0.00 :	  3f406:       ldr.w   fp, [r7, #20]
    0.00 :	  3f40a:       str     r3, [r7, #20]
    0.00 :	  3f40c:       it      eq
    0.00 :	  3f40e:       ldreq.w r3, [r6, #-8]
    0.00 :	  3f412:       ldr     r0, [r7, #48]   ; 0x30
    0.00 :	  3f414:       str     r2, [r7, #32]
    0.00 :	  3f416:       it      eq
    0.00 :	  3f418:       streq   r3, [r7, #20]
    0.00 :	  3f41a:       ldr     r4, [r7, #16]
    0.00 :	  3f41c:       ldr.w   sl, [r7, #12]
    0.00 :	  3f420:       bl      3e968 <hack_digit>
    0.00 :	  3f424:       ldr     r2, [r7, #32]
    0.00 :	  3f426:       cmp     r0, #48 ; 0x30
    0.00 :	  3f428:       it      ne
    0.00 :	  3f42a:       cmpne   r0, #53 ; 0x35
    0.00 :	  3f42c:       ite     ne
    0.00 :	  3f42e:       movne.w r9, #1
    0.00 :	  3f432:       moveq.w r9, #0
    0.00 :	  3f436:       bne.n   3f478 <__printf_fp_l+0x884>
    0.00 :	  3f438:       ldr.w   r1, [r7, #132]  ; 0x84
    0.00 :	  3f43c:       cmp     r1, #1
    0.00 :	  3f43e:       beq.w   3fec4 <__printf_fp_l+0x12d0>
    0.00 :	  3f442:       ldr.w   r5, [r7, #140]  ; 0x8c
    0.00 :	  3f446:       cmp     r5, #0
    0.00 :	  3f448:       bne.w   3fa46 <__printf_fp_l+0xe52>
    0.00 :	  3f44c:       cbz     r1, 3f478 <__printf_fp_l+0x884>
    0.00 :	  3f44e:       ldr.w   r5, [r7, #128]  ; 0x80
    0.00 :	  3f452:       add.w   lr, r1, #1073741824     ; 0x40000000
    0.00 :	  3f456:       add.w   lr, lr, #4294967295
    0.00 :	  3f45a:       ldr.w   ip, [r5, lr, lsl #2]
    0.00 :	  3f45e:       add.w   r5, r5, lr, lsl #2
    0.00 :	  3f462:       cmp.w   ip, #0
    0.00 :	  3f466:       beq.n   3f474 <__printf_fp_l+0x880>
    0.00 :	  3f468:       b.n     3fa46 <__printf_fp_l+0xe52>
    0.00 :	  3f46a:       ldr.w   r3, [r5, #-4]!
    0.00 :	  3f46e:       cmp     r3, #0
    0.00 :	  3f470:       bne.w   3fa46 <__printf_fp_l+0xe52>
    0.00 :	  3f474:       subs    r1, #1
    0.00 :	  3f476:       bne.n   3f46a <__printf_fp_l+0x876>
    0.00 :	  3f478:       vmrs    r1, fpscr
    0.00 :	  3f47c:       cmp     r0, #52 ; 0x34
    0.00 :	  3f47e:       and.w   r1, r1, #12582912       ; 0xc00000
    0.00 :	  3f482:       ldr     r5, [r7, #96]   ; 0x60
    0.00 :	  3f484:       ite     ls
    0.00 :	  3f486:       movls.w lr, #0
    0.00 :	  3f48a:       movhi.w lr, #1
    0.00 :	  3f48e:       cmp.w   r1, #4194304    ; 0x400000
    0.00 :	  3f492:       beq.w   3fae6 <__printf_fp_l+0xef2>
    0.00 :	  3f496:       ble.w   3f8e0 <__printf_fp_l+0xcec>
    0.00 :	  3f49a:       cmp.w   r1, #8388608    ; 0x800000
    0.00 :	  3f49e:       beq.w   3fac4 <__printf_fp_l+0xed0>
    0.00 :	  3f4a2:       cmp.w   r1, #12582912   ; 0xc00000
    0.00 :	  3f4a6:       bne.w   3fae2 <__printf_fp_l+0xeee>
    0.00 :	  3f4aa:       cmp     r8, r2
    0.00 :	  3f4ac:       ble.n   3f4d2 <__printf_fp_l+0x8de>
    0.00 :	  3f4ae:       ldr.w   r1, [r6, #-4]
    0.00 :	  3f4b2:       cmp     r1, #48 ; 0x30
    0.00 :	  3f4b4:       it      eq
    0.00 :	  3f4b6:       subeq   r1, r6, #4
    0.00 :	  3f4b8:       beq.n   3f4c8 <__printf_fp_l+0x8d4>
    0.00 :	  3f4ba:       b.n     3f4d2 <__printf_fp_l+0x8de>
    0.00 :	  3f4bc:       .word   0x0005de02
    0.00 :	  3f4c0:       ldr.w   r3, [r1, #-4]!
    0.00 :	  3f4c4:       cmp     r3, #48 ; 0x30
    0.00 :	  3f4c6:       bne.n   3f4d2 <__printf_fp_l+0x8de>
    0.00 :	  3f4c8:       add.w   r8, r8, #4294967295
    0.00 :	  3f4cc:       mov     r6, r1
    0.00 :	  3f4ce:       cmp     r8, r2
    0.00 :	  3f4d0:       bne.n   3f4c0 <__printf_fp_l+0x8cc>
    0.00 :	  3f4d2:       cmp.w   r8, #0
    0.00 :	  3f4d6:       bne.n   3f4ec <__printf_fp_l+0x8f8>
    0.00 :	  3f4d8:       ldrb.w  r3, [sl, #12]
    0.00 :	  3f4dc:       lsls    r1, r3, #28
    0.00 :	  3f4de:       bmi.n   3f4ec <__printf_fp_l+0x8f8>
    0.00 :	  3f4e0:       ldr.w   r3, [r6, #-4]
    0.00 :	  3f4e4:       ldr     r2, [r7, #84]   ; 0x54
    0.00 :	  3f4e6:       cmp     r2, r3
    0.00 :	  3f4e8:       it      eq
    0.00 :	  3f4ea:       subeq   r6, #4
    0.00 :	  3f4ec:       cmp.w   fp, #0
    0.00 :	  3f4f0:       beq.n   3f518 <__printf_fp_l+0x924>
    0.00 :	  3f4f2:       ldr     r3, [r7, #56]   ; 0x38
    0.00 :	  3f4f4:       ldr     r2, [r7, #36]   ; 0x24
    0.00 :	  3f4f6:       cmp     r3, r2
    0.00 :	  3f4f8:       it      eq
    0.00 :	  3f4fa:       moveq   r8, r3
    0.00 :	  3f4fc:       beq.w   3f7f4 <__printf_fp_l+0xc00>
    0.00 :	  3f500:       ldrb.w  r3, [fp]
    0.00 :	  3f504:       ldr.w   r8, [r7, #36]   ; 0x24
    0.00 :	  3f508:       subs    r3, #1
    0.00 :	  3f50a:       uxtb    r3, r3
    0.00 :	  3f50c:       cmp     r3, #253        ; 0xfd
    0.00 :	  3f50e:       itt     hi
    0.00 :	  3f510:       movhi   r3, #0
    0.00 :	  3f512:       strhi   r3, [r7, #28]
    0.00 :	  3f514:       bls.w   3f7ea <__printf_fp_l+0xbf6>
    0.00 :	  3f518:       ldr     r3, [r7, #120]  ; 0x78
    0.00 :	  3f51a:       cmp     r3, #102        ; 0x66
    0.00 :	  3f51c:       beq.n   3f588 <__printf_fp_l+0x994>
    0.00 :	  3f51e:       ldr     r2, [r7, #116]  ; 0x74
    0.00 :	  3f520:       cmp     r2, #0
    0.00 :	  3f522:       bne.w   3f9e4 <__printf_fp_l+0xdf0>
    0.00 :	  3f526:       ldr.w   r9, [r7, #124]  ; 0x7c
    0.00 :	  3f52a:       mov     r5, r6
    0.00 :	  3f52c:       movs    r2, #43 ; 0x2b
    0.00 :	  3f52e:       str.w   r3, [r5], #8
    0.00 :	  3f532:       cmp.w   r9, #9
    0.00 :	  3f536:       str     r2, [r6, #4]
    0.00 :	  3f538:       ble.w   3fa4c <__printf_fp_l+0xe58>
    0.00 :	  3f53c:       mov.w   r8, #10
    0.00 :	  3f540:       mov     r3, r8
    0.00 :	  3f542:       mul.w   r8, r3, r8
    0.00 :	  3f546:       cmp     r8, r9
    0.00 :	  3f548:       ble.n   3f542 <__printf_fp_l+0x94e>
    0.00 :	  3f54a:       movw    r6, #26215      ; 0x6667
    0.00 :	  3f54e:       movt    r6, #26214      ; 0x6666
    0.00 :	  3f552:       smull   r2, r3, r8, r6
    0.00 :	  3f556:       mov.w   r8, r8, asr #31
    0.00 :	  3f55a:       mov     r0, r9
    0.00 :	  3f55c:       rsb     r8, r8, r3, asr #2
    0.00 :	  3f560:       mov     r1, r8
    0.00 :	  3f562:       bl      60610 <__divsi3>
    0.00 :	  3f566:       mov     r1, r8
    0.00 :	  3f568:       add.w   r3, r0, #48     ; 0x30
    0.00 :	  3f56c:       mov     r0, r9
    0.00 :	  3f56e:       str.w   r3, [r5], #4
    0.00 :	  3f572:       bl      608a4 <__aeabi_idivmod>
    0.00 :	  3f576:       cmp.w   r8, #10
    0.00 :	  3f57a:       mov     r9, r1
    0.00 :	  3f57c:       bgt.n   3f552 <__printf_fp_l+0x95e>
    0.00 :	  3f57e:       str     r1, [r7, #124]  ; 0x7c
    0.00 :	  3f580:       adds    r6, r5, #4
    0.00 :	  3f582:       add.w   r3, r9, #48     ; 0x30
    0.00 :	  3f586:       str     r3, [r5, #0]
    0.00 :	  3f588:       ldr     r3, [r7, #96]   ; 0x60
    0.00 :	  3f58a:       ldrb.w  r2, [sl, #12]
    0.00 :	  3f58e:       cbnz    r3, 3f596 <__printf_fp_l+0x9a2>
    0.00 :	  3f590:       tst.w   r2, #80 ; 0x50
    0.00 :	  3f594:       beq.n   3f59c <__printf_fp_l+0x9a8>
    0.00 :	  3f596:       ldr     r1, [r7, #52]   ; 0x34
    0.00 :	  3f598:       subs    r1, #1
    0.00 :	  3f59a:       str     r1, [r7, #52]   ; 0x34
    0.00 :	  3f59c:       ldr     r1, [r7, #60]   ; 0x3c
    0.00 :	  3f59e:       lsls    r2, r2, #26
    0.00 :	  3f5a0:       sub.w   r8, r6, r1
    0.00 :	  3f5a4:       ldr     r1, [r7, #52]   ; 0x34
    0.00 :	  3f5a6:       mov.w   r9, r8, asr #2
    0.00 :	  3f5aa:       sub.w   r1, r1, r9
    0.00 :	  3f5ae:       str     r1, [r7, #68]   ; 0x44
    0.00 :	  3f5b0:       mov     r0, r1
    0.00 :	  3f5b2:       bmi.n   3f5f8 <__printf_fp_l+0xa04>
    0.00 :	  3f5b4:       ldr.w   r1, [sl, #16]
    0.00 :	  3f5b8:       mov     r2, r0
    0.00 :	  3f5ba:       cmp     r1, #48 ; 0x30
    0.00 :	  3f5bc:       it      ne
    0.00 :	  3f5be:       cmpne   r0, #0
    0.00 :	  3f5c0:       ite     gt
    0.00 :	  3f5c2:       movgt   r5, #1
    0.00 :	  3f5c4:       movle   r5, #0
    0.00 :	  3f5c6:       ble.n   3f5fa <__printf_fp_l+0xa06>
    0.00 :	  3f5c8:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f5ca:       cmp     r3, #0
    0.00 :	  3f5cc:       beq.w   3ff6a <__printf_fp_l+0x1376>
    0.00 :	  3f5d0:       mov     r0, r4
    0.00 :	  3f5d2:       bl      45f74 <_IO_wpadn>
    0.00 :	  3f5d6:       mov     r5, r0
    0.00 :	  3f5d8:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f5da:       cmp     r5, r3
    0.00 :	  3f5dc:       it      eq
    0.00 :	  3f5de:       ldreq   r3, [r7, #96]   ; 0x60
    0.00 :	  3f5e0:       beq.n   3f5fa <__printf_fp_l+0xa06>
    0.00 :	  3f5e2:       ldr     r3, [r7, #24]
    0.00 :	  3f5e4:       cmp     r3, #0
    0.00 :	  3f5e6:       bne.w   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3f5ea:       ldr     r0, [r7, #44]   ; 0x2c
    0.00 :	  3f5ec:       mov.w   r5, #4294967295
    0.00 :	  3f5f0:       bl      2b678 <__cfree>
    0.00 :	  3f5f4:       b.w     3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3f5f8:       movs    r5, #0
    0.00 :	  3f5fa:       cmp     r3, #0
    0.00 :	  3f5fc:       beq.w   3f878 <__printf_fp_l+0xc84>
    0.00 :	  3f600:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f602:       cmp     r3, #0
    0.00 :	  3f604:       beq.w   3fc06 <__printf_fp_l+0x1012>
    0.00 :	  3f608:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3f60a:       cmp     r3, #0
    0.00 :	  3f60c:       beq.w   40248 <__printf_fp_l+0x1654>
    0.00 :	  3f610:       ldr     r2, [r3, #16]
    0.00 :	  3f612:       ldr     r1, [r3, #20]
    0.00 :	  3f614:       cmp     r2, r1
    0.00 :	  3f616:       itttt   cc
    0.00 :	  3f618:       addcc   r1, r2, #4
    0.00 :	  3f61a:       strcc   r1, [r3, #16]
    0.00 :	  3f61c:       movcc   r3, #45 ; 0x2d
    0.00 :	  3f61e:       strcc   r3, [r2, #0]
    0.00 :	  3f620:       bcs.w   40248 <__printf_fp_l+0x1654>
    0.00 :	  3f624:       ldrb.w  r3, [sl, #12]
    0.00 :	  3f628:       adds    r5, #1
    0.00 :	  3f62a:       lsls    r0, r3, #26
    0.00 :	  3f62c:       bmi.n   3f662 <__printf_fp_l+0xa6e>
    0.00 :	  3f62e:       ldr.w   r3, [sl, #16]
    0.00 :	  3f632:       ldr     r2, [r7, #68]   ; 0x44
    0.00 :	  3f634:       sub.w   r3, r3, #48     ; 0x30
    0.00 :	  3f638:       clz     r3, r3
    0.00 :	  3f63c:       cmp     r2, #0
    0.00 :	  3f63e:       mov.w   r3, r3, lsr #5
    0.00 :	  3f642:       it      le
    0.00 :	  3f644:       movle   r3, #0
    0.00 :	  3f646:       cbz     r3, 3f662 <__printf_fp_l+0xa6e>
    0.00 :	  3f648:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f64a:       cmp     r3, #0
    0.00 :	  3f64c:       beq.w   4028e <__printf_fp_l+0x169a>
    0.00 :	  3f650:       movs    r1, #48 ; 0x30
    0.00 :	  3f652:       mov     r0, r4
    0.00 :	  3f654:       bl      45f74 <_IO_wpadn>
    0.00 :	  3f658:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f65a:       cmp     r0, r3
    0.00 :	  3f65c:       bne.n   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  3f65e:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f660:       add     r5, r3
    0.00 :	  3f662:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f664:       cmp     r3, #0
    0.00 :	  3f666:       bne.w   3fb5a <__printf_fp_l+0xf66>
    0.00 :	  3f66a:       ldrb.w  r3, [sl, #13]
    0.00 :	  3f66e:       ldr     r0, [r7, #80]   ; 0x50
    0.00 :	  3f670:       lsls    r1, r3, #28
    0.00 :	  3f672:       itett   mi
    0.00 :	  3f674:       ldrmi   r3, [r7, #88]   ; 0x58
    0.00 :	  3f676:       movpl.w r8, #1
    0.00 :	  3f67a:       ldrmi   r3, [r3, #0]
    0.00 :	  3f67c:       ldrmi.w r8, [r3, #88]   ; 0x58
    0.00 :	  3f680:       bl      2d040 <strlen>
    0.00 :	  3f684:       ldr     r3, [r7, #76]   ; 0x4c
    0.00 :	  3f686:       mov     fp, r0
    0.00 :	  3f688:       cmp     r3, #0
    0.00 :	  3f68a:       beq.w   40284 <__printf_fp_l+0x1690>
    0.00 :	  3f68e:       mov     r0, r3
    0.00 :	  3f690:       bl      2d040 <strlen>
    0.00 :	  3f694:       ldr     r3, [r7, #28]
    0.00 :	  3f696:       mul.w   r3, r0, r3
    0.00 :	  3f69a:       str     r0, [r7, #88]   ; 0x58
    0.00 :	  3f69c:       ldr     r1, [r7, #64]   ; 0x40
    0.00 :	  3f69e:       add.w   r2, fp, #2
    0.00 :	  3f6a2:       mla     r8, r8, r1, r2
    0.00 :	  3f6a6:       add     r3, r8
    0.00 :	  3f6a8:       str     r3, [r7, #64]   ; 0x40
    0.00 :	  3f6aa:       ldr     r3, [r7, #24]
    0.00 :	  3f6ac:       cmp     r3, #0
    0.00 :	  3f6ae:       beq.w   402a0 <__printf_fp_l+0x16ac>
    0.00 :	  3f6b2:       ldr     r3, [r7, #64]   ; 0x40
    0.00 :	  3f6b4:       adds    r3, #14
    0.00 :	  3f6b6:       bic.w   r3, r3, #7
    0.00 :	  3f6ba:       sub.w   sp, sp, r3
    0.00 :	  3f6be:       add.w   r9, sp, #8
    0.00 :	  3f6c2:       ldr     r2, [r7, #60]   ; 0x3c
    0.00 :	  3f6c4:       cmp     r6, r2
    0.00 :	  3f6c6:       bls.w   4029c <__printf_fp_l+0x16a8>
    0.00 :	  3f6ca:       mov     r0, r9
    0.00 :	  3f6cc:       str.w   r9, [r7, #56]   ; 0x38
    0.00 :	  3f6d0:       mov     r8, r2
    0.00 :	  3f6d2:       ldr.w   r9, [r7, #84]   ; 0x54
    0.00 :	  3f6d6:       str     r4, [r7, #84]   ; 0x54
    0.00 :	  3f6d8:       ldr     r4, [r7, #72]   ; 0x48
    0.00 :	  3f6da:       b.n     3f6ee <__printf_fp_l+0xafa>
    0.00 :	  3f6dc:       cmp     r4, r2
    0.00 :	  3f6de:       itt     ne
    0.00 :	  3f6e0:       strbne  r2, [r0, #0]
    0.00 :	  3f6e2:       addne   r0, #1
    0.00 :	  3f6e4:       beq.w   3fad4 <__printf_fp_l+0xee0>
    0.00 :	  3f6e8:       cmp     r6, r8
    0.00 :	  3f6ea:       bls.w   3fc50 <__printf_fp_l+0x105c>
    0.00 :	  3f6ee:       ldr.w   r2, [r8], #4
    0.00 :	  3f6f2:       cmp     r9, r2
    0.00 :	  3f6f4:       bne.n   3f6dc <__printf_fp_l+0xae8>
    0.00 :	  3f6f6:       mov     r2, fp
    0.00 :	  3f6f8:       ldr     r1, [r7, #80]   ; 0x50
    0.00 :	  3f6fa:       blx     10170 <__rel_iplt_end+0x10>
    0.00 :	  3f6fe:       add     r0, fp
    0.00 :	  3f700:       b.n     3f6e8 <__printf_fp_l+0xaf4>
    0.00 :	  3f702:       cmp     r2, #0
    0.00 :	  3f704:       mov     r3, sl
    0.00 :	  3f706:       ldr.w   fp, [r7, #68]   ; 0x44
    0.00 :	  3f70a:       ldr     r4, [r7, #64]   ; 0x40
    0.00 :	  3f70c:       ldr.w   sl, [r7, #60]   ; 0x3c
    0.00 :	  3f710:       str     r3, [r7, #124]  ; 0x7c
    0.00 :	  3f712:       ble.w   3f23e <__printf_fp_l+0x64a>
    0.00 :	  3f716:       ldr.w   r3, [r7, #136]  ; 0x88
    0.00 :	  3f71a:       mov     r0, r3
    0.00 :	  3f71c:       str     r3, [r7, #68]   ; 0x44
    0.00 :	  3f71e:       ldr     r3, [r3, #0]
    0.00 :	  3f720:       cmp     r3, #0
    0.00 :	  3f722:       bne.w   402b2 <__printf_fp_l+0x16be>
    0.00 :	  3f726:       ldr.w   r9, [r7, #128]  ; 0x80
    0.00 :	  3f72a:       ldr.w   r1, [r9]
    0.00 :	  3f72e:       cmp     r1, #0
    0.00 :	  3f730:       bne.w   402d8 <__printf_fp_l+0x16e4>
    0.00 :	  3f734:       adds    r0, #4
    0.00 :	  3f736:       mov     r6, r1
    0.00 :	  3f738:       mov     ip, r9
    0.00 :	  3f73a:       mov     r5, r9
    0.00 :	  3f73c:       b.n     3f748 <__printf_fp_l+0xb54>
    0.00 :	  3f73e:       ldr.w   r3, [r5, #4]!
    0.00 :	  3f742:       cmp     r3, #0
    0.00 :	  3f744:       bne.w   3faee <__printf_fp_l+0xefa>
    0.00 :	  3f748:       ldr     r3, [r0, #0]
    0.00 :	  3f74a:       adds    r6, #1
    0.00 :	  3f74c:       mov     r1, r0
    0.00 :	  3f74e:       adds    r0, #4
    0.00 :	  3f750:       mov     lr, r6
    0.00 :	  3f752:       mov.w   r8, r6, lsl #2
    0.00 :	  3f756:       cmp     r3, #0
    0.00 :	  3f758:       beq.n   3f73e <__printf_fp_l+0xb4a>
    0.00 :	  3f75a:       add.w   r0, r2, #1073741824     ; 0x40000000
    0.00 :	  3f75e:       ldr     r5, [r7, #68]   ; 0x44
    0.00 :	  3f760:       subs    r0, #1
    0.00 :	  3f762:       ldr.w   r5, [r5, r0, lsl #2]
    0.00 :	  3f766:       clz     r5, r5
    0.00 :	  3f76a:       cmp     r5, #0
    0.00 :	  3f76c:       beq.w   3fb0a <__printf_fp_l+0xf16>
    0.00 :	  3f770:       ldr.w   r0, [r9, r8]
    0.00 :	  3f774:       rbit    r3, r3
    0.00 :	  3f778:       clz     r3, r3
    0.00 :	  3f77c:       cbz     r0, 3f78c <__printf_fp_l+0xb98>
    0.00 :	  3f77e:       rbit    r0, r0
    0.00 :	  3f782:       clz     r0, r0
    0.00 :	  3f786:       cmp     r3, r0
    0.00 :	  3f788:       it      ge
    0.00 :	  3f78a:       movge   r3, r0
    0.00 :	  3f78c:       rsb     r9, r5, #32
    0.00 :	  3f790:       cmp     r6, #0
    0.00 :	  3f792:       bne.w   3ff78 <__printf_fp_l+0x1384>
    0.00 :	  3f796:       cmp     r3, r9
    0.00 :	  3f798:       blt.w   4024e <__printf_fp_l+0x165a>
    0.00 :	  3f79c:       subs    r2, r2, r6
    0.00 :	  3f79e:       mov     r3, r9
    0.00 :	  3f7a0:       ldr     r0, [r7, #68]   ; 0x44
    0.00 :	  3f7a2:       bl      52f70 <__mpn_rshift>
    0.00 :	  3f7a6:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3f7aa:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  3f7ae:       mov     r3, r9
    0.00 :	  3f7b0:       ldr.w   r5, [r7, #140]  ; 0x8c
    0.00 :	  3f7b4:       add.w   r9, r6, #1
    0.00 :	  3f7b8:       subs    r2, r2, r6
    0.00 :	  3f7ba:       add.w   r1, r0, r8
    0.00 :	  3f7be:       sub.w   r5, r5, r9
    0.00 :	  3f7c2:       str.w   r5, [r7, #140]  ; 0x8c
    0.00 :	  3f7c6:       bl      52f70 <__mpn_rshift>
    0.00 :	  3f7ca:       ldr.w   r2, [r7, #132]  ; 0x84
  100.00 :	  3f7ce:       ldr.w   r1, [r7, #128]  ; 0x80
    0.00 :	  3f7d2:       subs    r6, r2, r6
    0.00 :	  3f7d4:       add.w   r3, r6, #1073741824     ; 0x40000000
    0.00 :	  3f7d8:       subs    r3, #1
    0.00 :	  3f7da:       ldr.w   r3, [r1, r3, lsl #2]
    0.00 :	  3f7de:       cbnz    r3, 3f7e4 <__printf_fp_l+0xbf0>
    0.00 :	  3f7e0:       sub.w   r6, r2, r9
    0.00 :	  3f7e4:       str.w   r6, [r7, #132]  ; 0x84
    0.00 :	  3f7e8:       b.n     3f23e <__printf_fp_l+0x64a>
    0.00 :	  3f7ea:       mov     r1, fp
    0.00 :	  3f7ec:       mov     r0, r8
    0.00 :	  3f7ee:       bl      3ebc4 <__guess_grouping.part.0>
    0.00 :	  3f7f2:       str     r0, [r7, #28]
    0.00 :	  3f7f4:       ldr     r3, [r7, #28]
    0.00 :	  3f7f6:       cmp     r3, #0
    0.00 :	  3f7f8:       beq.w   3f518 <__printf_fp_l+0x924>
    0.00 :	  3f7fc:       add.w   r9, r3, r8
    0.00 :	  3f800:       ldr     r3, [r7, #60]   ; 0x3c
    0.00 :	  3f802:       mov.w   r5, r8, lsl #2
    0.00 :	  3f806:       adds    r1, r3, r5
    0.00 :	  3f808:       mov.w   r9, r9, lsl #2
    0.00 :	  3f80c:       subs    r2, r6, r1
    0.00 :	  3f80e:       mov     r0, r3
    0.00 :	  3f810:       add     r0, r9
    0.00 :	  3f812:       asrs    r2, r2, #2
    0.00 :	  3f814:       bl      475fc <__wmemmove>
    0.00 :	  3f818:       ldr     r2, [r7, #60]   ; 0x3c
    0.00 :	  3f81a:       ldrb.w  ip, [fp]
    0.00 :	  3f81e:       sub.w   lr, r9, #4
    0.00 :	  3f822:       mov     r9, r4
    0.00 :	  3f824:       ldr     r4, [r7, #72]   ; 0x48
    0.00 :	  3f826:       add     lr, r2
    0.00 :	  3f828:       str     r6, [r7, #68]   ; 0x44
    0.00 :	  3f82a:       mov     r6, ip
    0.00 :	  3f82c:       mov     ip, r2
    0.00 :	  3f82e:       mov     r2, r5
    0.00 :	  3f830:       lsls    r5, r6, #2
    0.00 :	  3f832:       add     r2, ip
    0.00 :	  3f834:       negs    r5, r5
    0.00 :	  3f836:       add.w   r3, lr, #4
    0.00 :	  3f83a:       adds    r0, r5, #4
    0.00 :	  3f83c:       add     r0, lr
    0.00 :	  3f83e:       ldr.w   r1, [r2, #-4]!
    0.00 :	  3f842:       str.w   r1, [r3, #-4]!
    0.00 :	  3f846:       cmp     r0, r3
    0.00 :	  3f848:       bne.n   3f83e <__printf_fp_l+0xc4a>
    0.00 :	  3f84a:       add     r5, lr
    0.00 :	  3f84c:       sub.w   r8, r8, r6
    0.00 :	  3f850:       sub.w   lr, r0, #8
    0.00 :	  3f854:       str     r4, [r5, #0]
    0.00 :	  3f856:       ldrb.w  r6, [fp, #1]
    0.00 :	  3f85a:       cmp     r6, #255        ; 0xff
    0.00 :	  3f85c:       beq.w   3fa62 <__printf_fp_l+0xe6e>
    0.00 :	  3f860:       cbz     r6, 3f872 <__printf_fp_l+0xc7e>
    0.00 :	  3f862:       add.w   fp, fp, #1
    0.00 :	  3f866:       cmp     r6, r8
    0.00 :	  3f868:       bcs.w   3fa62 <__printf_fp_l+0xe6e>
    0.00 :	  3f86c:       mov.w   r2, r8, lsl #2
    0.00 :	  3f870:       b.n     3f830 <__printf_fp_l+0xc3c>
    0.00 :	  3f872:       ldrb.w  r6, [fp]
    0.00 :	  3f876:       b.n     3f866 <__printf_fp_l+0xc72>
    0.00 :	  3f878:       ldrb.w  r3, [sl, #12]
    0.00 :	  3f87c:       lsls    r1, r3, #25
    0.00 :	  3f87e:       bpl.w   3fc1e <__printf_fp_l+0x102a>
    0.00 :	  3f882:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3f884:       cmp     r3, #0
    0.00 :	  3f886:       beq.w   4005a <__printf_fp_l+0x1466>
    0.00 :	  3f88a:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3f88c:       cbz     r3, 3f8a2 <__printf_fp_l+0xcae>
    0.00 :	  3f88e:       ldr     r2, [r3, #16]
    0.00 :	  3f890:       ldr     r1, [r3, #20]
    0.00 :	  3f892:       cmp     r2, r1
    0.00 :	  3f894:       itttt   cc
    0.00 :	  3f896:       addcc   r1, r2, #4
    0.00 :	  3f898:       strcc   r1, [r3, #16]
    0.00 :	  3f89a:       movcc   r3, #43 ; 0x2b
    0.00 :	  3f89c:       strcc   r3, [r2, #0]
    0.00 :	  3f89e:       bcc.w   3f624 <__printf_fp_l+0xa30>
    0.00 :	  3f8a2:       movs    r1, #43 ; 0x2b
    0.00 :	  3f8a4:       mov     r0, r4
    0.00 :	  3f8a6:       bl      4639c <__woverflow>
    0.00 :	  3f8aa:       sub.w   r0, r0, #4294967295
    0.00 :	  3f8ae:       clz     r0, r0
    0.00 :	  3f8b2:       lsrs    r0, r0, #5
    0.00 :	  3f8b4:       cmp     r0, #0
    0.00 :	  3f8b6:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  3f8ba:       b.n     3f624 <__printf_fp_l+0xa30>
    0.00 :	  3f8bc:       ldr.w   r6, [sl]
    0.00 :	  3f8c0:       movs    r5, #1
    0.00 :	  3f8c2:       str     r0, [r7, #120]  ; 0x78
    0.00 :	  3f8c4:       cmp     r6, #0
    0.00 :	  3f8c6:       str     r5, [r7, #56]   ; 0x38
    0.00 :	  3f8c8:       itee    ge
    0.00 :	  3f8ca:       addge.w r3, r6, #8
    0.00 :	  3f8ce:       movlt   r6, #6
    0.00 :	  3f8d0:       movlt   r3, #14
    0.00 :	  3f8d2:       str     r6, [r7, #32]
    0.00 :	  3f8d4:       str     r3, [r7, #64]   ; 0x40
    0.00 :	  3f8d6:       mvn.w   r3, #2147483648 ; 0x80000000
    0.00 :	  3f8da:       str     r6, [r7, #68]   ; 0x44
    0.00 :	  3f8dc:       str     r3, [r7, #0]
    0.00 :	  3f8de:       b.n     3f2b2 <__printf_fp_l+0x6be>
    0.00 :	  3f8e0:       cmp     r1, #0
    0.00 :	  3f8e2:       bne.w   3fae2 <__printf_fp_l+0xeee>
    0.00 :	  3f8e6:       cmp     r0, #52 ; 0x34
    0.00 :	  3f8e8:       bls.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3f8ec:       ldr     r3, [r7, #20]
    0.00 :	  3f8ee:       and.w   r3, r3, #1
    0.00 :	  3f8f2:       orrs.w  r3, r9, r3
    0.00 :	  3f8f6:       beq.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3f8fa:       cmp.w   r8, #0
    0.00 :	  3f8fe:       it      le
    0.00 :	  3f900:       movle   r0, r6
    0.00 :	  3f902:       ble.n   3f972 <__printf_fp_l+0xd7e>
    0.00 :	  3f904:       ldr.w   r1, [r6, #-4]
    0.00 :	  3f908:       subs    r0, r6, #4
    0.00 :	  3f90a:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  3f90c:       movs    r5, #0
    0.00 :	  3f90e:       cmp     r3, r1
    0.00 :	  3f910:       beq.n   3f934 <__printf_fp_l+0xd40>
    0.00 :	  3f912:       cmp     r1, #57 ; 0x39
    0.00 :	  3f914:       bne.w   3fe76 <__printf_fp_l+0x1282>
    0.00 :	  3f918:       movs    r3, #48 ; 0x30
    0.00 :	  3f91a:       ldr.w   lr, [r7, #84]   ; 0x54
    0.00 :	  3f91e:       b.n     3f926 <__printf_fp_l+0xd32>
    0.00 :	  3f920:       cmp     r1, #57 ; 0x39
    0.00 :	  3f922:       bne.w   3fe76 <__printf_fp_l+0x1282>
    0.00 :	  3f926:       str     r3, [r0, #0]
    0.00 :	  3f928:       adds    r5, #1
    0.00 :	  3f92a:       ldr.w   r1, [r0, #-4]!
    0.00 :	  3f92e:       cmp     lr, r1
    0.00 :	  3f930:       bne.n   3f920 <__printf_fp_l+0xd2c>
    0.00 :	  3f932:       ldr     r1, [r7, #84]   ; 0x54
    0.00 :	  3f934:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f936:       ldr     r2, [r7, #8]
    0.00 :	  3f938:       subs    r3, r3, r5
    0.00 :	  3f93a:       clz     r3, r3
    0.00 :	  3f93e:       cmp     r2, #0
    0.00 :	  3f940:       mov.w   r3, r3, lsr #5
    0.00 :	  3f944:       it      le
    0.00 :	  3f946:       movle   r3, #0
    0.00 :	  3f948:       mov     r5, r3
    0.00 :	  3f94a:       cmp     r3, #0
    0.00 :	  3f94c:       beq.w   4008a <__printf_fp_l+0x1496>
    0.00 :	  3f950:       ldr     r3, [r7, #8]
    0.00 :	  3f952:       subs    r3, #1
    0.00 :	  3f954:       str     r3, [r7, #8]
    0.00 :	  3f956:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  3f958:       cmp     r3, r1
    0.00 :	  3f95a:       beq.w   4008a <__printf_fp_l+0x1496>
    0.00 :	  3f95e:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3f960:       ldr     r5, [r7, #8]
    0.00 :	  3f962:       add     r3, r5
    0.00 :	  3f964:       mov     r2, r3
    0.00 :	  3f966:       adds    r1, #1
    0.00 :	  3f968:       str     r1, [r0, #0]
    0.00 :	  3f96a:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  3f96c:       cmp     r3, r1
    0.00 :	  3f96e:       bne.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3f972:       ldr.w   r1, [r0, #-4]
    0.00 :	  3f976:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  3f978:       cmp     r3, r1
    0.00 :	  3f97a:       ldr     r3, [r7, #60]   ; 0x3c
    0.00 :	  3f97c:       it      eq
    0.00 :	  3f97e:       subeq   r0, #4
    0.00 :	  3f980:       subs    r1, r0, #4
    0.00 :	  3f982:       cmp     r1, r3
    0.00 :	  3f984:       mov     r5, r3
    0.00 :	  3f986:       bcc.n   3f9a6 <__printf_fp_l+0xdb2>
    0.00 :	  3f988:       ldr.w   r0, [r0, #-4]
    0.00 :	  3f98c:       cmp     r0, #57 ; 0x39
    0.00 :	  3f98e:       bne.w   3ff16 <__printf_fp_l+0x1322>
    0.00 :	  3f992:       movs    r5, #48 ; 0x30
    0.00 :	  3f994:       b.n     3f99e <__printf_fp_l+0xdaa>
    0.00 :	  3f996:       ldr     r0, [r1, #0]
    0.00 :	  3f998:       cmp     r0, #57 ; 0x39
    0.00 :	  3f99a:       bne.w   3ff16 <__printf_fp_l+0x1322>
    0.00 :	  3f99e:       str.w   r5, [r1], #-4
    0.00 :	  3f9a2:       cmp     r3, r1
    0.00 :	  3f9a4:       bls.n   3f996 <__printf_fp_l+0xda2>
    0.00 :	  3f9a6:       ldr     r1, [r7, #120]  ; 0x78
    0.00 :	  3f9a8:       cmp     r1, #102        ; 0x66
    0.00 :	  3f9aa:       beq.w   401f2 <__printf_fp_l+0x15fe>
    0.00 :	  3f9ae:       ldr     r1, [r7, #116]  ; 0x74
    0.00 :	  3f9b0:       movs    r5, #49 ; 0x31
    0.00 :	  3f9b2:       ldr     r0, [r7, #124]  ; 0x7c
    0.00 :	  3f9b4:       cmp     r1, #0
    0.00 :	  3f9b6:       ldr     r3, [r7, #44]   ; 0x2c
    0.00 :	  3f9b8:       ite     ne
    0.00 :	  3f9ba:       movne.w r1, #4294967295
    0.00 :	  3f9be:       moveq   r1, #1
    0.00 :	  3f9c0:       add     r1, r0
    0.00 :	  3f9c2:       str     r5, [r3, #8]
    0.00 :	  3f9c4:       str     r1, [r7, #124]  ; 0x7c
    0.00 :	  3f9c6:       cbnz    r1, 3f9ca <__printf_fp_l+0xdd6>
    0.00 :	  3f9c8:       str     r1, [r7, #116]  ; 0x74
    0.00 :	  3f9ca:       ldr     r3, [r7, #36]   ; 0x24
    0.00 :	  3f9cc:       ldr     r0, [r7, #0]
    0.00 :	  3f9ce:       add.w   r1, r3, r8
    0.00 :	  3f9d2:       cmp     r0, r1
    0.00 :	  3f9d4:       bge.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3f9d8:       subs    r1, r1, r0
    0.00 :	  3f9da:       sub.w   r8, r8, r1
    0.00 :	  3f9de:       sub.w   r6, r6, r1, lsl #2
    0.00 :	  3f9e2:       b.n     3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3f9e4:       ldr     r2, [r7, #40]   ; 0x28
    0.00 :	  3f9e6:       ldr.w   r9, [r7, #124]  ; 0x7c
    0.00 :	  3f9ea:       cmp.w   r9, #4
    0.00 :	  3f9ee:       it      eq
    0.00 :	  3f9f0:       cmpeq   r2, #103        ; 0x67
    0.00 :	  3f9f2:       ittt    ne
    0.00 :	  3f9f4:       movne   r5, r6
    0.00 :	  3f9f6:       movne   r2, #45 ; 0x2d
    0.00 :	  3f9f8:       strne.w r3, [r5], #8
    0.00 :	  3f9fc:       bne.w   3f532 <__printf_fp_l+0x93e>
    0.00 :	  3fa00:       ldr     r5, [r7, #60]   ; 0x3c
    0.00 :	  3fa02:       movw    r1, #26424      ; 0x6738
    0.00 :	  3fa06:       movs    r2, #6
    0.00 :	  3fa08:       movt    r1, #8
    0.00 :	  3fa0c:       mov     r0, r5
    0.00 :	  3fa0e:       bl      475f4 <__wmemcpy>
    0.00 :	  3fa12:       mov     r3, r5
    0.00 :	  3fa14:       ldr     r1, [r7, #84]   ; 0x54
    0.00 :	  3fa16:       adds    r3, #8
    0.00 :	  3fa18:       cmp     r6, r3
    0.00 :	  3fa1a:       it      cc
    0.00 :	  3fa1c:       addcc   r6, #20
    0.00 :	  3fa1e:       str     r1, [r5, #4]
    0.00 :	  3fa20:       bcc.w   3f588 <__printf_fp_l+0x994>
    0.00 :	  3fa24:       subs    r3, r6, r3
    0.00 :	  3fa26:       ldr     r2, [r7, #60]   ; 0x3c
    0.00 :	  3fa28:       movs    r1, #48 ; 0x30
    0.00 :	  3fa2a:       adds    r6, #16
    0.00 :	  3fa2c:       add.w   r0, r2, #24
    0.00 :	  3fa30:       asrs    r2, r3, #2
    0.00 :	  3fa32:       bl      47604 <__wmemset>
    0.00 :	  3fa36:       b.n     3f588 <__printf_fp_l+0x994>
    0.00 :	  3fa38:       cmp     r2, r3
    0.00 :	  3fa3a:       ble.n   3fa80 <__printf_fp_l+0xe8c>
    0.00 :	  3fa3c:       adds    r3, #1
    0.00 :	  3fa3e:       str     r3, [r7, #56]   ; 0x38
    0.00 :	  3fa40:       movs    r3, #102        ; 0x66
    0.00 :	  3fa42:       str     r3, [r7, #120]  ; 0x78
    0.00 :	  3fa44:       b.n     3f292 <__printf_fp_l+0x69e>
    0.00 :	  3fa46:       mov.w   r9, #1
    0.00 :	  3fa4a:       b.n     3f478 <__printf_fp_l+0x884>
    0.00 :	  3fa4c:       movs    r3, #48 ; 0x30
    0.00 :	  3fa4e:       add.w   r5, r6, #12
    0.00 :	  3fa52:       str     r3, [r6, #8]
    0.00 :	  3fa54:       b.n     3f580 <__printf_fp_l+0x98c>
    0.00 :	  3fa56:       mov     r1, fp
    0.00 :	  3fa58:       ldr     r0, [r7, #56]   ; 0x38
    0.00 :	  3fa5a:       bl      3ebc4 <__guess_grouping.part.0>
    0.00 :	  3fa5e:       str     r0, [r7, #28]
    0.00 :	  3fa60:       b.n     3f2d0 <__printf_fp_l+0x6dc>
    0.00 :	  3fa62:       ldr     r2, [r7, #60]   ; 0x3c
    0.00 :	  3fa64:       mov     r4, r9
    0.00 :	  3fa66:       ldr     r6, [r7, #68]   ; 0x44
    0.00 :	  3fa68:       add.w   r8, r2, r8, lsl #2
    0.00 :	  3fa6c:       ldr.w   r3, [r8, #-4]!
    0.00 :	  3fa70:       str.w   r3, [lr], #-4
    0.00 :	  3fa74:       cmp     r2, lr
    0.00 :	  3fa76:       bcc.n   3fa6c <__printf_fp_l+0xe78>
    0.00 :	  3fa78:       ldr     r3, [r7, #28]
    0.00 :	  3fa7a:       add.w   r6, r6, r3, lsl #2
    0.00 :	  3fa7e:       b.n     3f518 <__printf_fp_l+0x924>
    0.00 :	  3fa80:       subs    r3, r2, #1
    0.00 :	  3fa82:       subs    r0, #2
    0.00 :	  3fa84:       str     r3, [r7, #32]
    0.00 :	  3fa86:       adds    r1, r2, #7
    0.00 :	  3fa88:       mov     r6, r3
    0.00 :	  3fa8a:       str     r1, [r7, #64]   ; 0x40
    0.00 :	  3fa8c:       movs    r3, #1
    0.00 :	  3fa8e:       str     r0, [r7, #120]  ; 0x78
    0.00 :	  3fa90:       str     r3, [r7, #56]   ; 0x38
    0.00 :	  3fa92:       b.n     3f29e <__printf_fp_l+0x6aa>
    0.00 :	  3fa94:       ldr.w   r6, [sl]
    0.00 :	  3fa98:       str     r3, [r7, #120]  ; 0x78
    0.00 :	  3fa9a:       ldr     r3, [r7, #116]  ; 0x74
    0.00 :	  3fa9c:       cmp     r6, #0
    0.00 :	  3fa9e:       it      lt
    0.00 :	  3faa0:       movlt   r6, #6
    0.00 :	  3faa2:       cmp     r3, #0
    0.00 :	  3faa4:       bne.w   3ff40 <__printf_fp_l+0x134c>
    0.00 :	  3faa8:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  3faaa:       movs    r5, #1
    0.00 :	  3faac:       str     r6, [r7, #32]
    0.00 :	  3faae:       adds    r2, r3, #2
    0.00 :	  3fab0:       str     r6, [r7, #68]   ; 0x44
    0.00 :	  3fab2:       add     r3, r5
    0.00 :	  3fab4:       str     r3, [r7, #56]   ; 0x38
    0.00 :	  3fab6:       adds    r3, r2, r6
    0.00 :	  3fab8:       str     r3, [r7, #64]   ; 0x40
    0.00 :	  3faba:       mvn.w   r3, #2147483648 ; 0x80000000
    0.00 :	  3fabe:       str     r3, [r7, #0]
    0.00 :	  3fac0:       b.w     3f2b2 <__printf_fp_l+0x6be>
    0.00 :	  3fac4:       cmp     r5, #0
    0.00 :	  3fac6:       beq.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3faca:       orrs.w  r3, r9, lr
    0.00 :	  3face:       beq.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3fad2:       b.n     3f8fa <__printf_fp_l+0xd06>
    0.00 :	  3fad4:       ldr     r2, [r7, #88]   ; 0x58
    0.00 :	  3fad6:       ldr     r1, [r7, #76]   ; 0x4c
    0.00 :	  3fad8:       blx     10170 <__rel_iplt_end+0x10>
    0.00 :	  3fadc:       ldr     r3, [r7, #88]   ; 0x58
    0.00 :	  3fade:       add     r0, r3
    0.00 :	  3fae0:       b.n     3f6e8 <__printf_fp_l+0xaf4>
    0.00 :	  3fae2:       bl      22398 <abort>
    0.00 :	  3fae6:       cmp     r5, #0
    0.00 :	  3fae8:       bne.w   3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3faec:       b.n     3faca <__printf_fp_l+0xed6>
    0.00 :	  3faee:       add.w   r0, r2, #1073741824     ; 0x40000000
    0.00 :	  3faf2:       ldr     r5, [r7, #68]   ; 0x44
    0.00 :	  3faf4:       subs    r0, #1
    0.00 :	  3faf6:       ldr.w   r5, [r5, r0, lsl #2]
    0.00 :	  3fafa:       clz     r5, r5
    0.00 :	  3fafe:       cbz     r5, 3fb0a <__printf_fp_l+0xf16>
    0.00 :	  3fb00:       rbit    r3, r3
    0.00 :	  3fb04:       clz     r3, r3
    0.00 :	  3fb08:       b.n     3f78c <__printf_fp_l+0xb98>
    0.00 :	  3fb0a:       subs    r2, r2, r6
    0.00 :	  3fb0c:       cmp     r2, #0
    0.00 :	  3fb0e:       ble.n   3fb2c <__printf_fp_l+0xf38>
    0.00 :	  3fb10:       ldr     r1, [r7, #68]   ; 0x44
    0.00 :	  3fb12:       movs    r3, #0
    0.00 :	  3fb14:       add.w   r0, r1, r8
    0.00 :	  3fb18:       ldr.w   r2, [r0], #4
    0.00 :	  3fb1c:       adds    r3, #1
    0.00 :	  3fb1e:       str.w   r2, [r1], #4
    0.00 :	  3fb22:       ldr.w   r2, [r7, #140]  ; 0x8c
    0.00 :	  3fb26:       subs    r2, r2, r6
    0.00 :	  3fb28:       cmp     r2, r3
    0.00 :	  3fb2a:       bgt.n   3fb18 <__printf_fp_l+0xf24>
    0.00 :	  3fb2c:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3fb30:       str.w   r2, [r7, #140]  ; 0x8c
    0.00 :	  3fb34:       subs    r3, r3, r6
    0.00 :	  3fb36:       cmp     r3, #0
    0.00 :	  3fb38:       ble.n   3fb52 <__printf_fp_l+0xf5e>
    0.00 :	  3fb3a:       add     r8, r9
    0.00 :	  3fb3c:       movs    r2, #0
    0.00 :	  3fb3e:       ldr.w   r3, [r8], #4
    0.00 :	  3fb42:       adds    r2, #1
    0.00 :	  3fb44:       str.w   r3, [ip], #4
    0.00 :	  3fb48:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3fb4c:       subs    r3, r3, r6
    0.00 :	  3fb4e:       cmp     r3, r2
    0.00 :	  3fb50:       bgt.n   3fb3e <__printf_fp_l+0xf4a>
    0.00 :	  3fb52:       str.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3fb56:       b.w     3f23e <__printf_fp_l+0x64a>
    0.00 :	  3fb5a:       ldrb.w  r1, [sl, #13]
    0.00 :	  3fb5e:       ubfx    r1, r1, #3, #1
    0.00 :	  3fb62:       cmp     r1, #0
    0.00 :	  3fb64:       bne.w   403d4 <__printf_fp_l+0x17e0>
    0.00 :	  3fb68:       mov     fp, r1
    0.00 :	  3fb6a:       add.w   r8, r8, #3
    0.00 :	  3fb6e:       mov     r6, r9
    0.00 :	  3fb70:       cmp.w   r8, #6
    0.00 :	  3fb74:       bls.w   40006 <__printf_fp_l+0x1412>
    0.00 :	  3fb78:       mov.w   r9, #0
    0.00 :	  3fb7c:       ldr.w   r8, [r4, #152]  ; 0x98
    0.00 :	  3fb80:       movw    r1, #47420      ; 0xb93c
    0.00 :	  3fb84:       movw    r3, #48260      ; 0xbc84
    0.00 :	  3fb88:       movt    r1, #8
    0.00 :	  3fb8c:       movt    r3, #8
    0.00 :	  3fb90:       sub.w   r2, r8, r1
    0.00 :	  3fb94:       subs    r3, r3, r1
    0.00 :	  3fb96:       cmp     r3, r2
    0.00 :	  3fb98:       bls.w   402fa <__printf_fp_l+0x1706>
    0.00 :	  3fb9c:       ldr     r0, [r7, #92]   ; 0x5c
    0.00 :	  3fb9e:       ldr     r2, [r7, #60]   ; 0x3c
    0.00 :	  3fba0:       ldr.w   r3, [r8, #28]
    0.00 :	  3fba4:       cmp     r0, #0
    0.00 :	  3fba6:       it      eq
    0.00 :	  3fba8:       moveq   r2, fp
    0.00 :	  3fbaa:       mov     r0, r4
    0.00 :	  3fbac:       mov     r1, r2
    0.00 :	  3fbae:       mov     r2, r6
    0.00 :	  3fbb0:       blx     r3
    0.00 :	  3fbb2:       cmp     r0, r6
    0.00 :	  3fbb4:       it      eq
    0.00 :	  3fbb6:       addeq   r5, r5, r6
    0.00 :	  3fbb8:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  3fbbc:       ldr     r3, [r7, #24]
    0.00 :	  3fbbe:       cmp     r3, #0
    0.00 :	  3fbc0:       beq.w   40300 <__printf_fp_l+0x170c>
    0.00 :	  3fbc4:       ldr     r6, [r7, #68]   ; 0x44
    0.00 :	  3fbc6:       ldrb.w  r2, [sl, #12]
    0.00 :	  3fbca:       cmp     r6, #0
    0.00 :	  3fbcc:       mov     r3, r6
    0.00 :	  3fbce:       ite     le
    0.00 :	  3fbd0:       movle   r3, #0
    0.00 :	  3fbd2:       movgt   r3, #1
    0.00 :	  3fbd4:       ands.w  r3, r3, r2, lsr #5
    0.00 :	  3fbd8:       beq.w   3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3fbdc:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3fbde:       mov     r0, r4
    0.00 :	  3fbe0:       ldr.w   r1, [sl, #16]
    0.00 :	  3fbe4:       cmp     r3, #0
    0.00 :	  3fbe6:       beq.w   40210 <__printf_fp_l+0x161c>
    0.00 :	  3fbea:       mov     r2, r6
    0.00 :	  3fbec:       bl      45f74 <_IO_wpadn>
    0.00 :	  3fbf0:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3fbf2:       cmp     r0, r3
    0.00 :	  3fbf4:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  3fbf8:       add     r5, r0
    0.00 :	  3fbfa:       b.w     3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3fbfe:       str.w   fp, [r7, #28]
    0.00 :	  3fc02:       b.w     3f2d8 <__printf_fp_l+0x6e4>
    0.00 :	  3fc06:       ldr     r3, [r4, #20]
    0.00 :	  3fc08:       ldr     r2, [r4, #24]
    0.00 :	  3fc0a:       cmp     r3, r2
    0.00 :	  3fc0c:       it      cs
    0.00 :	  3fc0e:       movcs   r1, #45 ; 0x2d
    0.00 :	  3fc10:       bcs.w   40070 <__printf_fp_l+0x147c>
    0.00 :	  3fc14:       adds    r2, r3, #1
    0.00 :	  3fc16:       str     r2, [r4, #20]
    0.00 :	  3fc18:       movs    r2, #45 ; 0x2d
    0.00 :	  3fc1a:       strb    r2, [r3, #0]
    0.00 :	  3fc1c:       b.n     3f624 <__printf_fp_l+0xa30>
    0.00 :	  3fc1e:       lsls    r2, r3, #27
    0.00 :	  3fc20:       bpl.w   3f62a <__printf_fp_l+0xa36>
    0.00 :	  3fc24:       ldr     r3, [r7, #92]   ; 0x5c
    0.00 :	  3fc26:       cmp     r3, #0
    0.00 :	  3fc28:       beq.w   401c2 <__printf_fp_l+0x15ce>
    0.00 :	  3fc2c:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  3fc2e:       cmp     r3, #0
    0.00 :	  3fc30:       beq.w   40374 <__printf_fp_l+0x1780>
    0.00 :	  3fc34:       ldr     r2, [r3, #16]
    0.00 :	  3fc36:       ldr     r1, [r3, #20]
    0.00 :	  3fc38:       cmp     r2, r1
    0.00 :	  3fc3a:       itttt   cc
    0.00 :	  3fc3c:       addcc   r1, r2, #4
    0.00 :	  3fc3e:       strcc   r1, [r3, #16]
    0.00 :	  3fc40:       movcc   r3, #32
    0.00 :	  3fc42:       strcc   r3, [r2, #0]
    0.00 :	  3fc44:       bcs.w   40374 <__printf_fp_l+0x1780>
    0.00 :	  3fc48:       ldrb.w  r3, [sl, #12]
    0.00 :	  3fc4c:       adds    r5, #1
    0.00 :	  3fc4e:       b.n     3f62a <__printf_fp_l+0xa36>
    0.00 :	  3fc50:       ldr.w   r9, [r7, #56]   ; 0x38
    0.00 :	  3fc54:       ldr     r4, [r7, #84]   ; 0x54
    0.00 :	  3fc56:       ldrb.w  r3, [sl, #13]
    0.00 :	  3fc5a:       lsls    r3, r3, #28
    0.00 :	  3fc5c:       it      pl
    0.00 :	  3fc5e:       movpl   fp, r9
    0.00 :	  3fc60:       bmi.w   40218 <__printf_fp_l+0x1624>
    0.00 :	  3fc64:       sub.w   r6, r0, fp
    0.00 :	  3fc68:       cmp     r6, #20
    0.00 :	  3fc6a:       bgt.n   3fb7c <__printf_fp_l+0xf88>
    0.00 :	  3fc6c:       mov     r8, fp
    0.00 :	  3fc6e:       sub.w   fp, r5, fp
    0.00 :	  3fc72:       cbnz    r6, 3fc7e <__printf_fp_l+0x108a>
    0.00 :	  3fc74:       b.n     3fbbc <__printf_fp_l+0xfc8>
    0.00 :	  3fc76:       subs    r6, #1
    0.00 :	  3fc78:       add.w   r5, r8, fp
    0.00 :	  3fc7c:       beq.n   3fbbc <__printf_fp_l+0xfc8>
    0.00 :	  3fc7e:       ldr     r3, [r4, #20]
    0.00 :	  3fc80:       ldr     r2, [r4, #24]
    0.00 :	  3fc82:       ldrb.w  r1, [r8], #1
    0.00 :	  3fc86:       cmp     r3, r2
    0.00 :	  3fc88:       ittt    cc
    0.00 :	  3fc8a:       addcc   r2, r3, #1
    0.00 :	  3fc8c:       strcc   r2, [r4, #20]
    0.00 :	  3fc8e:       strbcc  r1, [r3, #0]
    0.00 :	  3fc90:       bcc.n   3fc76 <__printf_fp_l+0x1082>
    0.00 :	  3fc92:       mov     r0, r4
    0.00 :	  3fc94:       bl      26a14 <__overflow>
    0.00 :	  3fc98:       adds    r2, r0, #1
    0.00 :	  3fc9a:       bne.n   3fc76 <__printf_fp_l+0x1082>
    0.00 :	  3fc9c:       ldr     r3, [r7, #24]
    0.00 :	  3fc9e:       mov     r5, r0
    0.00 :	  3fca0:       cmp     r3, #0
    0.00 :	  3fca2:       bne.w   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3fca6:       ldr     r0, [r7, #44]   ; 0x2c
    0.00 :	  3fca8:       bl      2b678 <__cfree>
    0.00 :	  3fcac:       b.w     3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3fcb0:       mov     r3, r5
    0.00 :	  3fcb2:       mov     r2, r0
    0.00 :	  3fcb4:       mov     r1, r8
    0.00 :	  3fcb6:       mov     r0, lr
    0.00 :	  3fcb8:       bl      52f28 <__mpn_lshift>
    0.00 :	  3fcbc:       ldr     r1, [r7, #124]  ; 0x7c
    0.00 :	  3fcbe:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3fcc2:       movw    r8, #39220      ; 0x9934
    0.00 :	  3fcc6:       rsb     lr, r1, #0
    0.00 :	  3fcca:       ldr.w   r2, [r7, #128]  ; 0x80
    0.00 :	  3fcce:       movs    r1, #8
    0.00 :	  3fcd0:       movw    r5, #39396      ; 0x99e4
    0.00 :	  3fcd4:       movt    r8, #8
    0.00 :	  3fcd8:       movt    r5, #8
    0.00 :	  3fcdc:       str     r5, [r7, #68]   ; 0x44
    0.00 :	  3fcde:       adds    r5, r3, #1
    0.00 :	  3fce0:       str.w   r5, [r7, #132]  ; 0x84
    0.00 :	  3fce4:       mov     r5, r1
    0.00 :	  3fce6:       str.w   sl, [r7, #56]   ; 0x38
    0.00 :	  3fcea:       mov     r9, r5
    0.00 :	  3fcec:       mov     sl, r6
    0.00 :	  3fcee:       movs    r1, #1
    0.00 :	  3fcf0:       str.w   fp, [r7, #64]   ; 0x40
    0.00 :	  3fcf4:       str     r4, [r7, #60]   ; 0x3c
    0.00 :	  3fcf6:       str.w   r0, [r2, r3, lsl #2]
    0.00 :	  3fcfa:       str.w   lr, [r7, #124]  ; 0x7c
    0.00 :	  3fcfe:       str     r1, [r7, #116]  ; 0x74
    0.00 :	  3fd00:       ldr.w   r3, [r8, #140]  ; 0x8c
    0.00 :	  3fd04:       cmp     r3, lr
    0.00 :	  3fd06:       bgt.n   3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  3fd08:       ldr.w   r4, [r8, #132]  ; 0x84
    0.00 :	  3fd0c:       ldr.w   r5, [r7, #132]  ; 0x84
    0.00 :	  3fd10:       subs    r4, #2
    0.00 :	  3fd12:       cmp     r5, r4
    0.00 :	  3fd14:       bge.n   3fe16 <__printf_fp_l+0x1222>
    0.00 :	  3fd16:       ldr.w   r1, [r8, #128]  ; 0x80
    0.00 :	  3fd1a:       mov     r2, r4
    0.00 :	  3fd1c:       ldr     r4, [r7, #68]   ; 0x44
    0.00 :	  3fd1e:       adds    r1, #2
    0.00 :	  3fd20:       ldr.w   r3, [r7, #128]  ; 0x80
    0.00 :	  3fd24:       ldr.w   r0, [r7, #144]  ; 0x90
    0.00 :	  3fd28:       str     r5, [sp, #0]
    0.00 :	  3fd2a:       add.w   r1, r4, r1, lsl #2
    0.00 :	  3fd2e:       bl      52fe0 <__mpn_mul>
    0.00 :	  3fd32:       ldr.w   r4, [r7, #132]  ; 0x84
    0.00 :	  3fd36:       ldr.w   r2, [r8, #132]  ; 0x84
    0.00 :	  3fd3a:       add     r2, r4
    0.00 :	  3fd3c:       cmp     r0, #0
    0.00 :	  3fd3e:       beq.n   3fe0e <__printf_fp_l+0x121a>
    0.00 :	  3fd40:       subs    r2, #2
    0.00 :	  3fd42:       str.w   r2, [r7, #148]  ; 0x94
    0.00 :	  3fd46:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  3fd4a:       mvn.w   r5, #3221225472 ; 0xc0000000
    0.00 :	  3fd4e:       adds    r0, r2, r5
    0.00 :	  3fd50:       subs    r4, r2, r4
    0.00 :	  3fd52:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  3fd54:       ldr.w   r6, [r1, r0, lsl #2]
    0.00 :	  3fd58:       add.w   r0, r1, r0, lsl #2
    0.00 :	  3fd5c:       add.w   ip, r3, #3
    0.00 :	  3fd60:       clz     r6, r6
    0.00 :	  3fd64:       mov     lr, r3
    0.00 :	  3fd66:       rsb     r4, r6, r4, lsl #5
    0.00 :	  3fd6a:       adds    r4, #31
    0.00 :	  3fd6c:       cmp     r4, ip
    0.00 :	  3fd6e:       beq.n   3fe34 <__printf_fp_l+0x1240>
    0.00 :	  3fd70:       adds    r0, r3, #2
    0.00 :	  3fd72:       cmp     r4, r0
    0.00 :	  3fd74:       bgt.n   3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  3fd76:       ldr     r5, [r1, #0]
    0.00 :	  3fd78:       sub.w   lr, r3, r4
    0.00 :	  3fd7c:       movs    r0, #1
    0.00 :	  3fd7e:       cmp.w   lr, #0
    0.00 :	  3fd82:       lsl.w   r3, r0, r9
    0.00 :	  3fd86:       str.w   lr, [r7, #124]  ; 0x7c
    0.00 :	  3fd8a:       orr.w   sl, sl, r3
    0.00 :	  3fd8e:       it      lt
    0.00 :	  3fd90:       sublt.w r6, r6, lr
    0.00 :	  3fd94:       cmp     r5, #0
    0.00 :	  3fd96:       bne.w   4017c <__printf_fp_l+0x1588>
    0.00 :	  3fd9a:       adds    r3, r1, #4
    0.00 :	  3fd9c:       b.n     3fda0 <__printf_fp_l+0x11ac>
    0.00 :	  3fd9e:       mov     r5, r4
    0.00 :	  3fda0:       mov     fp, r3
    0.00 :	  3fda2:       ldr.w   r0, [r3], #4
    0.00 :	  3fda6:       adds    r4, r5, #1
    0.00 :	  3fda8:       mov     ip, r4
    0.00 :	  3fdaa:       cmp     r0, #0
    0.00 :	  3fdac:       beq.n   3fd9e <__printf_fp_l+0x11aa>
    0.00 :	  3fdae:       cmp     r6, #31
    0.00 :	  3fdb0:       beq.w   3feda <__printf_fp_l+0x12e6>
    0.00 :	  3fdb4:       rbit    r0, r0
    0.00 :	  3fdb8:       rsb     r3, r6, #31
    0.00 :	  3fdbc:       clz     r0, r0
    0.00 :	  3fdc0:       cmp     r0, r3
    0.00 :	  3fdc2:       bge.w   40160 <__printf_fp_l+0x156c>
    0.00 :	  3fdc6:       subs    r2, r2, r5
    0.00 :	  3fdc8:       add.w   r1, r1, r5, lsl #2
    0.00 :	  3fdcc:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3fdd0:       bl      52f70 <__mpn_rshift>
    0.00 :	  3fdd4:       ldr.w   lr, [r7, #124]  ; 0x7c
    0.00 :	  3fdd8:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  3fddc:       subs    r3, r3, r5
    0.00 :	  3fdde:       str.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3fde2:       ldr     r2, [pc, #716]  ; (400b0 <__printf_fp_l+0x14bc>)
    0.00 :	  3fde4:       add.w   r3, r8, #128    ; 0x80
    0.00 :	  3fde8:       add.w   r9, r9, #4294967295
    0.00 :	  3fdec:       cmp     r3, r2
    0.00 :	  3fdee:       beq.w   400b8 <__printf_fp_l+0x14c4>
    0.00 :	  3fdf2:       cmp.w   lr, #0
    0.00 :	  3fdf6:       sub.w   r8, r8, #16
    0.00 :	  3fdfa:       bgt.n   3fd00 <__printf_fp_l+0x110c>
    0.00 :	  3fdfc:       mov     r5, sl
    0.00 :	  3fdfe:       ldr.w   fp, [r7, #64]   ; 0x40
    0.00 :	  3fe02:       ldr     r4, [r7, #60]   ; 0x3c
    0.00 :	  3fe04:       ldr.w   sl, [r7, #56]   ; 0x38
    0.00 :	  3fe08:       str     r5, [r7, #124]  ; 0x7c
    0.00 :	  3fe0a:       b.w     3f23e <__printf_fp_l+0x64a>
    0.00 :	  3fe0e:       subs    r2, #3
    0.00 :	  3fe10:       str.w   r2, [r7, #148]  ; 0x94
    0.00 :	  3fe14:       b.n     3fd46 <__printf_fp_l+0x1152>
    0.00 :	  3fe16:       ldr.w   r3, [r8, #128]  ; 0x80
    0.00 :	  3fe1a:       mov     r2, r5
    0.00 :	  3fe1c:       str     r4, [sp, #0]
    0.00 :	  3fe1e:       adds    r3, #2
    0.00 :	  3fe20:       ldr     r4, [r7, #68]   ; 0x44
    0.00 :	  3fe22:       ldr.w   r1, [r7, #128]  ; 0x80
    0.00 :	  3fe26:       ldr.w   r0, [r7, #144]  ; 0x90
    0.00 :	  3fe2a:       add.w   r3, r4, r3, lsl #2
    0.00 :	  3fe2e:       bl      52fe0 <__mpn_mul>
    0.00 :	  3fe32:       b.n     3fd32 <__printf_fp_l+0x113e>
    0.00 :	  3fe34:       cmp     r6, #28
    0.00 :	  3fe36:       bgt.w   40130 <__printf_fp_l+0x153c>
    0.00 :	  3fe3a:       add.w   lr, r3, #2
    0.00 :	  3fe3e:       rsb     fp, r6, #28
    0.00 :	  3fe42:       cmp     r4, lr
    0.00 :	  3fe44:       mov.w   ip, #10
    0.00 :	  3fe48:       mov.w   r5, #0
    0.00 :	  3fe4c:       str     r5, [r7, #108]  ; 0x6c
    0.00 :	  3fe4e:       lsl.w   r5, ip, fp
    0.00 :	  3fe52:       str     r5, [r7, #112]  ; 0x70
    0.00 :	  3fe54:       ble.n   3fd76 <__printf_fp_l+0x1182>
    0.00 :	  3fe56:       ldr     r0, [r0, #0]
    0.00 :	  3fe58:       cmp     r0, r5
    0.00 :	  3fe5a:       bcc.n   3fd76 <__printf_fp_l+0x1182>
    0.00 :	  3fe5c:       beq.n   3fe62 <__printf_fp_l+0x126e>
    0.00 :	  3fe5e:       mov     lr, r3
    0.00 :	  3fe60:       b.n     3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  3fe62:       add.w   r5, r2, #1073741824     ; 0x40000000
    0.00 :	  3fe66:       ldr     r0, [r7, #108]  ; 0x6c
    0.00 :	  3fe68:       subs    r5, #2
    0.00 :	  3fe6a:       ldr.w   r5, [r1, r5, lsl #2]
    0.00 :	  3fe6e:       cmp     r5, r0
    0.00 :	  3fe70:       bcc.n   3fd76 <__printf_fp_l+0x1182>
    0.00 :	  3fe72:       mov     lr, r3
    0.00 :	  3fe74:       b.n     3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  3fe76:       ldr     r3, [r7, #8]
    0.00 :	  3fe78:       mov     lr, r3
    0.00 :	  3fe7a:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3fe7c:       cmp.w   lr, #0
    0.00 :	  3fe80:       ite     le
    0.00 :	  3fe82:       movle.w lr, #0
    0.00 :	  3fe86:       movgt.w lr, #1
    0.00 :	  3fe8a:       cmp     r3, r5
    0.00 :	  3fe8c:       it      ne
    0.00 :	  3fe8e:       movne.w lr, #0
    0.00 :	  3fe92:       mov     r3, lr
    0.00 :	  3fe94:       cmp     r3, #0
    0.00 :	  3fe96:       beq.w   3f966 <__printf_fp_l+0xd72>
    0.00 :	  3fe9a:       ldr     r3, [r7, #8]
    0.00 :	  3fe9c:       subs    r3, #1
    0.00 :	  3fe9e:       str     r3, [r7, #8]
    0.00 :	  3fea0:       b.n     3f95e <__printf_fp_l+0xd6a>
    0.00 :	  3fea2:       ldr     r0, [r7, #44]   ; 0x2c
    0.00 :	  3fea4:       movs    r2, #48 ; 0x30
    0.00 :	  3fea6:       ldr     r6, [r7, #84]   ; 0x54
    0.00 :	  3fea8:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  3feaa:       str     r2, [r0, #8]
    0.00 :	  3feac:       subs    r3, #1
    0.00 :	  3feae:       str     r6, [r0, #12]
    0.00 :	  3feb0:       str     r3, [r7, #124]  ; 0x7c
    0.00 :	  3feb2:       add.w   r6, r0, #16
    0.00 :	  3feb6:       movs    r3, #0
    0.00 :	  3feb8:       str     r3, [r7, #36]   ; 0x24
    0.00 :	  3feba:       add.w   r3, r7, #116    ; 0x74
    0.00 :	  3febe:       str     r3, [r7, #48]   ; 0x30
    0.00 :	  3fec0:       b.w     3f37e <__printf_fp_l+0x78a>
    0.00 :	  3fec4:       ldr.w   r5, [r7, #128]  ; 0x80
    0.00 :	  3fec8:       ldr     r5, [r5, #0]
    0.00 :	  3feca:       cmp     r5, #0
    0.00 :	  3fecc:       it      ne
    0.00 :	  3fece:       movne   r9, r1
    0.00 :	  3fed0:       b.w     3f478 <__printf_fp_l+0x884>
    0.00 :	  3fed4:       mov.w   ip, #0
    0.00 :	  3fed8:       mov     r4, ip
    0.00 :	  3feda:       subs    r2, r2, r4
    0.00 :	  3fedc:       cmp     r2, #0
    0.00 :	  3fede:       ble.n   3ff00 <__printf_fp_l+0x130c>
    0.00 :	  3fee0:       ldr.w   r3, [r7, #128]  ; 0x80
    0.00 :	  3fee4:       add.w   ip, r1, ip, lsl #2
    0.00 :	  3fee8:       movs    r1, #0
    0.00 :	  3feea:       subs    r3, #4
    0.00 :	  3feec:       ldr.w   r2, [ip], #4
    0.00 :	  3fef0:       adds    r1, #1
    0.00 :	  3fef2:       str.w   r2, [r3, #4]!
    0.00 :	  3fef6:       ldr.w   r2, [r7, #148]  ; 0x94
    0.00 :	  3fefa:       subs    r2, r2, r4
    0.00 :	  3fefc:       cmp     r2, r1
    0.00 :	  3fefe:       bgt.n   3feec <__printf_fp_l+0x12f8>
    0.00 :	  3ff00:       str.w   r2, [r7, #132]  ; 0x84
    0.00 :	  3ff04:       b.n     3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  3ff06:       ands.w  r2, r2, r6, asr #32
    0.00 :	  3ff0a:       it      cc
    0.00 :	  3ff0c:       movcc   r2, r6
    0.00 :	  3ff0e:       asrs    r2, r2, #5
    0.00 :	  3ff10:       add     r0, r2
    0.00 :	  3ff12:       b.w     3ef02 <__printf_fp_l+0x30e>
    0.00 :	  3ff16:       adds    r0, #1
    0.00 :	  3ff18:       str     r0, [r1, #0]
    0.00 :	  3ff1a:       b.w     3f4aa <__printf_fp_l+0x8b6>
    0.00 :	  3ff1e:       ldr     r3, [r7, #32]
    0.00 :	  3ff20:       cmp     r3, #0
    0.00 :	  3ff22:       ble.n   3ff3a <__printf_fp_l+0x1346>
    0.00 :	  3ff24:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  3ff28:       cmp     r3, #1
    0.00 :	  3ff2a:       bgt.w   3f374 <__printf_fp_l+0x780>
    0.00 :	  3ff2e:       ldr.w   r3, [r7, #128]  ; 0x80
    0.00 :	  3ff32:       ldr     r3, [r3, #0]
    0.00 :	  3ff34:       cmp     r3, #0
    0.00 :	  3ff36:       bne.w   3f374 <__printf_fp_l+0x780>
    0.00 :	  3ff3a:       movs    r5, #1
    0.00 :	  3ff3c:       b.w     3f37e <__printf_fp_l+0x78a>
    0.00 :	  3ff40:       adds    r3, r6, #2
    0.00 :	  3ff42:       movs    r5, #1
    0.00 :	  3ff44:       str     r3, [r7, #64]   ; 0x40
    0.00 :	  3ff46:       mvn.w   r3, #2147483648 ; 0x80000000
    0.00 :	  3ff4a:       str     r6, [r7, #32]
    0.00 :	  3ff4c:       str     r6, [r7, #68]   ; 0x44
    0.00 :	  3ff4e:       str     r5, [r7, #56]   ; 0x38
    0.00 :	  3ff50:       str     r3, [r7, #0]
    0.00 :	  3ff52:       b.w     3f2b2 <__printf_fp_l+0x6be>
    0.00 :	  3ff56:       ldr     r3, [pc, #348]  ; (400b4 <__printf_fp_l+0x14c0>)
    0.00 :	  3ff58:       movs    r2, #34 ; 0x22
    0.00 :	  3ff5a:       ldr     r1, [r7, #4]
    0.00 :	  3ff5c:       mov.w   r5, #4294967295
    0.00 :	  3ff60:       add     r3, pc
    0.00 :	  3ff62:       ldr     r3, [r3, #0]
    0.00 :	  3ff64:       str     r2, [r1, r3]
    0.00 :	  3ff66:       b.w     3ed92 <__printf_fp_l+0x19e>
    0.00 :	  3ff6a:       ldr     r2, [r7, #68]   ; 0x44
    0.00 :	  3ff6c:       mov     r0, r4
    0.00 :	  3ff6e:       bl      45eb8 <_IO_padn>
    0.00 :	  3ff72:       mov     r5, r0
    0.00 :	  3ff74:       b.w     3f5d8 <__printf_fp_l+0x9e4>
    0.00 :	  3ff78:       cmp     r3, r9
    0.00 :	  3ff7a:       bge.w   3f79c <__printf_fp_l+0xba8>
    0.00 :	  3ff7e:       add.w   lr, lr, #1073741824     ; 0x40000000
    0.00 :	  3ff82:       ldr     r1, [r7, #68]   ; 0x44
    0.00 :	  3ff84:       add.w   lr, lr, #4294967295
    0.00 :	  3ff88:       subs    r3, r6, #1
    0.00 :	  3ff8a:       subs    r2, r2, r3
    0.00 :	  3ff8c:       mov.w   r8, lr, lsl #2
    0.00 :	  3ff90:       mov     r5, r3
    0.00 :	  3ff92:       mov     r3, r1
    0.00 :	  3ff94:       add     r3, r8
    0.00 :	  3ff96:       mov     r0, r1
    0.00 :	  3ff98:       mov     r1, r3
    0.00 :	  3ff9a:       mov     r3, r9
    0.00 :	  3ff9c:       bl      52f70 <__mpn_rshift>
    0.00 :	  3ffa0:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  3ffa4:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3ffa8:       mov     r3, r9
    0.00 :	  3ffaa:       subs    r2, r2, r5
    0.00 :	  3ffac:       str     r5, [r7, #68]   ; 0x44
    0.00 :	  3ffae:       ldr.w   r5, [r7, #140]  ; 0x8c
    0.00 :	  3ffb2:       add.w   r1, r0, r8
    0.00 :	  3ffb6:       sub.w   lr, r5, r6
    0.00 :	  3ffba:       str.w   lr, [r7, #140]  ; 0x8c
    0.00 :	  3ffbe:       bl      52f70 <__mpn_rshift>
    0.00 :	  3ffc2:       ldr.w   r1, [r7, #132]  ; 0x84
    0.00 :	  3ffc6:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  3ffc8:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  3ffcc:       subs    r3, r1, r3
    0.00 :	  3ffce:       add.w   r2, r3, #1073741824     ; 0x40000000
    0.00 :	  3ffd2:       subs    r2, #1
    0.00 :	  3ffd4:       ldr.w   r2, [r0, r2, lsl #2]
    0.00 :	  3ffd8:       cmp     r2, #0
    0.00 :	  3ffda:       bne.w   3fb52 <__printf_fp_l+0xf5e>
    0.00 :	  3ffde:       subs    r3, r1, r6
    0.00 :	  3ffe0:       b.n     3fb52 <__printf_fp_l+0xf5e>
    0.00 :	  3ffe2:       mov     r0, r6
    0.00 :	  3ffe4:       bl      31534 <__libc_alloca_cutoff>
    0.00 :	  3ffe8:       mov     r8, r0
    0.00 :	  3ffea:       cmp     r0, #0
    0.00 :	  3ffec:       bne.w   3f306 <__printf_fp_l+0x712>
    0.00 :	  3fff0:       mov     r0, r6
    0.00 :	  3fff2:       bl      2b254 <__libc_malloc>
    0.00 :	  3fff6:       str     r0, [r7, #44]   ; 0x2c
    0.00 :	  3fff8:       cmp     r0, #0
    0.00 :	  3fffa:       beq.w   3ee56 <__printf_fp_l+0x262>
    0.00 :	  3fffe:       str.w   r8, [r7, #24]
    0.00 :	  40002:       b.w     3f318 <__printf_fp_l+0x724>
    0.00 :	  40006:       cmp.w   r9, #0
    0.00 :	  4000a:       beq.w   3fbbc <__printf_fp_l+0xfc8>
    0.00 :	  4000e:       ldr.w   r8, [r7, #60]   ; 0x3c
    0.00 :	  40012:       ldr     r3, [r4, #92]   ; 0x5c
    0.00 :	  40014:       ldr.w   r1, [r8], #4
    0.00 :	  40018:       cbz     r3, 40048 <__printf_fp_l+0x1454>
    0.00 :	  4001a:       ldr     r2, [r3, #16]
    0.00 :	  4001c:       ldr     r0, [r3, #20]
    0.00 :	  4001e:       cmp     r2, r0
    0.00 :	  40020:       bcs.n   40048 <__printf_fp_l+0x1454>
    0.00 :	  40022:       sub.w   r0, r1, #4294967295
    0.00 :	  40026:       add.w   lr, r2, #4
    0.00 :	  4002a:       clz     r0, r0
    0.00 :	  4002e:       str.w   lr, [r3, #16]
    0.00 :	  40032:       str     r1, [r2, #0]
    0.00 :	  40034:       lsrs    r0, r0, #5
    0.00 :	  40036:       cmp     r0, #0
    0.00 :	  40038:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  4003c:       subs    r6, #1
    0.00 :	  4003e:       add.w   r5, r5, #1
    0.00 :	  40042:       bne.n   40012 <__printf_fp_l+0x141e>
    0.00 :	  40044:       mov     r9, r6
    0.00 :	  40046:       b.n     3fbbc <__printf_fp_l+0xfc8>
    0.00 :	  40048:       mov     r0, r4
    0.00 :	  4004a:       bl      4639c <__woverflow>
    0.00 :	  4004e:       sub.w   r0, r0, #4294967295
    0.00 :	  40052:       clz     r0, r0
    0.00 :	  40056:       lsrs    r0, r0, #5
    0.00 :	  40058:       b.n     40036 <__printf_fp_l+0x1442>
    0.00 :	  4005a:       ldr     r2, [r4, #24]
    0.00 :	  4005c:       ldr     r3, [r4, #20]
    0.00 :	  4005e:       cmp     r3, r2
    0.00 :	  40060:       itttt   cc
    0.00 :	  40062:       addcc   r2, r3, #1
    0.00 :	  40064:       strcc   r2, [r4, #20]
    0.00 :	  40066:       movcc   r2, #43 ; 0x2b
    0.00 :	  40068:       strbcc  r2, [r3, #0]
    0.00 :	  4006a:       bcc.w   3f624 <__printf_fp_l+0xa30>
    0.00 :	  4006e:       movs    r1, #43 ; 0x2b
    0.00 :	  40070:       mov     r0, r4
    0.00 :	  40072:       bl      26a14 <__overflow>
    0.00 :	  40076:       sub.w   r0, r0, #4294967295
    0.00 :	  4007a:       clz     r0, r0
    0.00 :	  4007e:       lsrs    r0, r0, #5
    0.00 :	  40080:       cmp     r0, #0
    0.00 :	  40082:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  40086:       b.w     3f624 <__printf_fp_l+0xa30>
    0.00 :	  4008a:       ldr     r3, [r7, #40]   ; 0x28
    0.00 :	  4008c:       cmp     r3, #103        ; 0x67
    0.00 :	  4008e:       beq.w   40390 <__printf_fp_l+0x179c>
    0.00 :	  40092:       ldr     r1, [r7, #8]
    0.00 :	  40094:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  40096:       add     r3, r1
    0.00 :	  40098:       ldr     r1, [r0, #0]
    0.00 :	  4009a:       mov     r2, r3
    0.00 :	  4009c:       b.n     3f96a <__printf_fp_l+0xd76>
    0.00 :	  4009e:       add.w   r3, r7, #116    ; 0x74
    0.00 :	  400a2:       ldr     r6, [r7, #60]   ; 0x3c
    0.00 :	  400a4:       str     r3, [r7, #48]   ; 0x30
    0.00 :	  400a6:       movs    r3, #0
    0.00 :	  400a8:       str     r3, [r7, #36]   ; 0x24
    0.00 :	  400aa:       b.w     3f35c <__printf_fp_l+0x768>
    0.00 :	  400ae:       nop
    0.00 :	  400b0:       .word   0x00089944
    0.00 :	  400b4:       .word   0x0005d0fc
    0.00 :	  400b8:       cmp.w   lr, #0
    0.00 :	  400bc:       mov     r5, sl
    0.00 :	  400be:       ldr.w   fp, [r7, #64]   ; 0x40
    0.00 :	  400c2:       ldr     r4, [r7, #60]   ; 0x3c
    0.00 :	  400c4:       ldr.w   sl, [r7, #56]   ; 0x38
    0.00 :	  400c8:       ble.w   3fe08 <__printf_fp_l+0x1214>
    0.00 :	  400cc:       movs    r3, #10
    0.00 :	  400ce:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  400d2:       ldr.w   r1, [r7, #128]  ; 0x80
    0.00 :	  400d6:       ldr.w   r0, [r7, #144]  ; 0x90
    0.00 :	  400da:       bl      5320c <__mpn_mul_1>
    0.00 :	  400de:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  400e2:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  400e6:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  400e8:       str.w   r2, [r7, #148]  ; 0x94
    0.00 :	  400ec:       ldr     r0, [r1, #0]
    0.00 :	  400ee:       cmp     r3, #4
    0.00 :	  400f0:       rbit    r0, r0
    0.00 :	  400f4:       it      ge
    0.00 :	  400f6:       movge   r3, #4
    0.00 :	  400f8:       clz     r0, r0
    0.00 :	  400fc:       cmp     r0, r3
    0.00 :	  400fe:       bge.n   401b8 <__printf_fp_l+0x15c4>
    0.00 :	  40100:       rsb     r3, r3, #32
    0.00 :	  40104:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  40108:       bl      52f28 <__mpn_lshift>
    0.00 :	  4010c:       cbz     r0, 40120 <__printf_fp_l+0x152c>
    0.00 :	  4010e:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  40112:       ldr.w   r2, [r7, #128]  ; 0x80
    0.00 :	  40116:       adds    r1, r3, #1
    0.00 :	  40118:       str.w   r1, [r7, #148]  ; 0x94
    0.00 :	  4011c:       str.w   r0, [r2, r3, lsl #2]
    0.00 :	  40120:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  40124:       orr.w   r2, r5, #1
    0.00 :	  40128:       mov     r5, r2
    0.00 :	  4012a:       str.w   r3, [r7, #132]  ; 0x84
    0.00 :	  4012e:       b.n     3fe08 <__printf_fp_l+0x1214>
    0.00 :	  40130:       movs    r1, #0
    0.00 :	  40132:       str     r1, [r7, #112]  ; 0x70
    0.00 :	  40134:       add.w   r1, r7, #108    ; 0x6c
    0.00 :	  40138:       rsb     r3, r6, #32
    0.00 :	  4013c:       movs    r2, #2
    0.00 :	  4013e:       mov.w   lr, #2684354560 ; 0xa0000000
    0.00 :	  40142:       mov     r0, r1
    0.00 :	  40144:       str.w   lr, [r7, #108]  ; 0x6c
    0.00 :	  40148:       bl      52f28 <__mpn_lshift>
    0.00 :	  4014c:       ldr     r3, [r7, #124]  ; 0x7c
    0.00 :	  4014e:       adds    r2, r3, #2
    0.00 :	  40150:       cmp     r4, r2
    0.00 :	  40152:       mov     lr, r3
    0.00 :	  40154:       bgt.n   4022e <__printf_fp_l+0x163a>
    0.00 :	  40156:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  4015a:       ldr.w   r2, [r7, #148]  ; 0x94
    0.00 :	  4015e:       b.n     3fd76 <__printf_fp_l+0x1182>
    0.00 :	  40160:       mov     r1, fp
    0.00 :	  40162:       subs    r2, r2, r4
    0.00 :	  40164:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  40168:       bl      52f70 <__mpn_rshift>
    0.00 :	  4016c:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  40170:       ldr.w   lr, [r7, #124]  ; 0x7c
    0.00 :	  40174:       subs    r3, r3, r4
    0.00 :	  40176:       str.w   r3, [r7, #132]  ; 0x84
    0.00 :	  4017a:       b.n     3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  4017c:       cmp     r6, #31
    0.00 :	  4017e:       beq.w   3fed4 <__printf_fp_l+0x12e0>
    0.00 :	  40182:       rbit    r5, r5
    0.00 :	  40186:       rsb     r3, r6, #31
    0.00 :	  4018a:       clz     r0, r5
    0.00 :	  4018e:       cmp     r0, r3
    0.00 :	  40190:       it      ge
    0.00 :	  40192:       movge   r4, #0
    0.00 :	  40194:       bge.n   40162 <__printf_fp_l+0x156e>
    0.00 :	  40196:       adds    r3, r6, #1
    0.00 :	  40198:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  4019c:       bl      52f28 <__mpn_lshift>
    0.00 :	  401a0:       ldr.w   r3, [r7, #148]  ; 0x94
    0.00 :	  401a4:       ldr.w   r2, [r7, #128]  ; 0x80
    0.00 :	  401a8:       adds    r1, r3, #1
    0.00 :	  401aa:       ldr.w   lr, [r7, #124]  ; 0x7c
    0.00 :	  401ae:       str.w   r1, [r7, #132]  ; 0x84
    0.00 :	  401b2:       str.w   r0, [r2, r3, lsl #2]
    0.00 :	  401b6:       b.n     3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  401b8:       ldr.w   r0, [r7, #128]  ; 0x80
    0.00 :	  401bc:       bl      52f70 <__mpn_rshift>
    0.00 :	  401c0:       b.n     40120 <__printf_fp_l+0x152c>
    0.00 :	  401c2:       ldr     r2, [r4, #24]
    0.00 :	  401c4:       ldr     r3, [r4, #20]
    0.00 :	  401c6:       cmp     r3, r2
    0.00 :	  401c8:       itttt   cc
    0.00 :	  401ca:       addcc   r2, r3, #1
    0.00 :	  401cc:       strcc   r2, [r4, #20]
    0.00 :	  401ce:       movcc   r2, #32
    0.00 :	  401d0:       strbcc  r2, [r3, #0]
    0.00 :	  401d2:       bcc.w   3fc48 <__printf_fp_l+0x1054>
    0.00 :	  401d6:       movs    r1, #32
    0.00 :	  401d8:       mov     r0, r4
    0.00 :	  401da:       bl      26a14 <__overflow>
    0.00 :	  401de:       add.w   lr, r0, #1
    0.00 :	  401e2:       rsbs    r0, lr, #0
    0.00 :	  401e6:       adc.w   r0, r0, lr
    0.00 :	  401ea:       cmp     r0, #0
    0.00 :	  401ec:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  401f0:       b.n     3fc48 <__printf_fp_l+0x1054>
    0.00 :	  401f2:       ldr     r3, [r7, #36]   ; 0x24
    0.00 :	  401f4:       ldr     r1, [r7, #0]
    0.00 :	  401f6:       cmp     r3, r1
    0.00 :	  401f8:       beq.w   4030e <__printf_fp_l+0x171a>
    0.00 :	  401fc:       ldr     r3, [r7, #36]   ; 0x24
    0.00 :	  401fe:       adds    r3, #1
    0.00 :	  40200:       str     r3, [r7, #36]   ; 0x24
    0.00 :	  40202:       ldr     r3, [r7, #44]   ; 0x2c
    0.00 :	  40204:       adds    r1, r3, #4
    0.00 :	  40206:       str     r1, [r7, #60]   ; 0x3c
    0.00 :	  40208:       movs    r1, #49 ; 0x31
    0.00 :	  4020a:       str     r1, [r3, #4]
    0.00 :	  4020c:       b.w     3f9ca <__printf_fp_l+0xdd6>
    0.00 :	  40210:       ldr     r2, [r7, #68]   ; 0x44
    0.00 :	  40212:       bl      45eb8 <_IO_padn>
    0.00 :	  40216:       b.n     3fbf0 <__printf_fp_l+0xffc>
    0.00 :	  40218:       ldr     r3, [r7, #64]   ; 0x40
    0.00 :	  4021a:       mov     r1, r0
    0.00 :	  4021c:       mov     r0, r9
    0.00 :	  4021e:       add     r3, r9
    0.00 :	  40220:       mov     r2, r3
    0.00 :	  40222:       mov     r8, r3
    0.00 :	  40224:       bl      3ea44 <_i18n_number_rewrite>
    0.00 :	  40228:       mov     fp, r0
    0.00 :	  4022a:       mov     r0, r8
    0.00 :	  4022c:       b.n     3fc64 <__printf_fp_l+0x1070>
    0.00 :	  4022e:       adds    r2, r3, #3
    0.00 :	  40230:       cmp     r4, r2
    0.00 :	  40232:       bne.w   3fde2 <__printf_fp_l+0x11ee>
    0.00 :	  40236:       ldr.w   r2, [r7, #148]  ; 0x94
    0.00 :	  4023a:       ldr.w   r1, [r7, #144]  ; 0x90
    0.00 :	  4023e:       adds    r0, r2, r5
    0.00 :	  40240:       ldr     r5, [r7, #112]  ; 0x70
    0.00 :	  40242:       add.w   r0, r1, r0, lsl #2
    0.00 :	  40246:       b.n     3fe56 <__printf_fp_l+0x1262>
    0.00 :	  40248:       movs    r1, #45 ; 0x2d
    0.00 :	  4024a:       b.w     3f8a4 <__printf_fp_l+0xcb0>
    0.00 :	  4024e:       ldr     r1, [r7, #68]   ; 0x44
    0.00 :	  40250:       mov     r3, r5
    0.00 :	  40252:       mov     r0, r1
    0.00 :	  40254:       bl      52f28 <__mpn_lshift>
    0.00 :	  40258:       ldr.w   r1, [r7, #128]  ; 0x80
    0.00 :	  4025c:       mov     r3, r5
    0.00 :	  4025e:       ldr.w   r2, [r7, #132]  ; 0x84
    0.00 :	  40262:       mov     r0, r1
    0.00 :	  40264:       bl      52f28 <__mpn_lshift>
    0.00 :	  40268:       cmp     r0, #0
    0.00 :	  4026a:       beq.w   3f23e <__printf_fp_l+0x64a>
    0.00 :	  4026e:       ldr.w   r3, [r7, #132]  ; 0x84
    0.00 :	  40272:       ldr.w   r2, [r7, #128]  ; 0x80
    0.00 :	  40276:       adds    r1, r3, #1
    0.00 :	  40278:       str.w   r1, [r7, #132]  ; 0x84
    0.00 :	  4027c:       str.w   r0, [r2, r3, lsl #2]
    0.00 :	  40280:       b.w     3f23e <__printf_fp_l+0x64a>
    0.00 :	  40284:       ldr     r2, [r7, #76]   ; 0x4c
    0.00 :	  40286:       mov     r3, r2
    0.00 :	  40288:       str     r2, [r7, #88]   ; 0x58
    0.00 :	  4028a:       b.w     3f69c <__printf_fp_l+0xaa8>
    0.00 :	  4028e:       ldr     r2, [r7, #68]   ; 0x44
    0.00 :	  40290:       movs    r1, #48 ; 0x30
    0.00 :	  40292:       mov     r0, r4
    0.00 :	  40294:       bl      45eb8 <_IO_padn>
    0.00 :	  40298:       b.w     3f658 <__printf_fp_l+0xa64>
    0.00 :	  4029c:       mov     r0, r9
    0.00 :	  4029e:       b.n     3fc56 <__printf_fp_l+0x1062>
    0.00 :	  402a0:       ldr     r0, [r7, #64]   ; 0x40
    0.00 :	  402a2:       bl      2b254 <__libc_malloc>
    0.00 :	  402a6:       mov     r9, r0
    0.00 :	  402a8:       cmp     r0, #0
    0.00 :	  402aa:       bne.w   3f6c2 <__printf_fp_l+0xace>
    0.00 :	  402ae:       b.w     3f5ea <__printf_fp_l+0x9f6>
    0.00 :	  402b2:       add.w   r1, r2, #1073741824     ; 0x40000000
    0.00 :	  402b6:       ldr     r0, [r7, #68]   ; 0x44
    0.00 :	  402b8:       subs    r1, #1
    0.00 :	  402ba:       ldr.w   r5, [r0, r1, lsl #2]
    0.00 :	  402be:       clz     r5, r5
    0.00 :	  402c2:       cmp     r5, #0
    0.00 :	  402c4:       beq.w   3f23e <__printf_fp_l+0x64a>
    0.00 :	  402c8:       movs    r6, #0
    0.00 :	  402ca:       ldr.w   r9, [r7, #128]  ; 0x80
    0.00 :	  402ce:       mov     lr, r6
    0.00 :	  402d0:       mov     r8, r6
    0.00 :	  402d2:       ldr     r1, [r7, #68]   ; 0x44
    0.00 :	  402d4:       b.w     3f770 <__printf_fp_l+0xb7c>
    0.00 :	  402d8:       add.w   r0, r2, #1073741824     ; 0x40000000
    0.00 :	  402dc:       ldr     r5, [r7, #68]   ; 0x44
    0.00 :	  402de:       subs    r0, #1
    0.00 :	  402e0:       ldr.w   r5, [r5, r0, lsl #2]
    0.00 :	  402e4:       clz     r5, r5
    0.00 :	  402e8:       cmp     r5, #0
    0.00 :	  402ea:       beq.w   3f23e <__printf_fp_l+0x64a>
    0.00 :	  402ee:       mov     r6, r3
    0.00 :	  402f0:       mov     r3, r1
    0.00 :	  402f2:       mov     lr, r6
    0.00 :	  402f4:       mov     r8, r6
    0.00 :	  402f6:       ldr     r1, [r7, #68]   ; 0x44
    0.00 :	  402f8:       b.n     3fb00 <__printf_fp_l+0xf0c>
    0.00 :	  402fa:       bl      24980 <_IO_vtable_check>
    0.00 :	  402fe:       b.n     3fb9c <__printf_fp_l+0xfa8>
    0.00 :	  40300:       mov     r0, r9
    0.00 :	  40302:       bl      2b678 <__cfree>
    0.00 :	  40306:       ldr     r0, [r7, #44]   ; 0x2c
    0.00 :	  40308:       bl      2b678 <__cfree>
    0.00 :	  4030c:       b.n     3fbc4 <__printf_fp_l+0xfd0>
    0.00 :	  4030e:       ldr     r5, [r7, #44]   ; 0x2c
    0.00 :	  40310:       movs    r0, #49 ; 0x31
    0.00 :	  40312:       ldrb.w  r1, [sl, #12]
    0.00 :	  40316:       ldr     r3, [r7, #84]   ; 0x54
    0.00 :	  40318:       str     r0, [r5, #0]
    0.00 :	  4031a:       lsls    r0, r1, #28
    0.00 :	  4031c:       str     r3, [r5, #4]
    0.00 :	  4031e:       mov     r3, r5
    0.00 :	  40320:       bmi.n   4032e <__printf_fp_l+0x173a>
    0.00 :	  40322:       cmp.w   r8, #0
    0.00 :	  40326:       ite     le
    0.00 :	  40328:       movle   r3, #0
    0.00 :	  4032a:       movgt   r3, #1
    0.00 :	  4032c:       cbz     r3, 4033e <__printf_fp_l+0x174a>
    0.00 :	  4032e:       ldr     r3, [r7, #36]   ; 0x24
    0.00 :	  40330:       movs    r0, #48 ; 0x30
    0.00 :	  40332:       ldr     r5, [r7, #44]   ; 0x2c
    0.00 :	  40334:       adds    r1, r3, #2
    0.00 :	  40336:       add.w   r3, r8, #1
    0.00 :	  4033a:       str.w   r0, [r5, r1, lsl #2]
    0.00 :	  4033e:       ldr     r0, [r7, #36]   ; 0x24
    0.00 :	  40340:       ldr     r1, [r7, #124]  ; 0x7c
    0.00 :	  40342:       add     r0, r3
    0.00 :	  40344:       ldr     r3, [r7, #4]
    0.00 :	  40346:       adds    r1, #1
    0.00 :	  40348:       str     r1, [r7, #124]  ; 0x7c
    0.00 :	  4034a:       mov     r8, r0
    0.00 :	  4034c:       ldr     r0, [pc, #148]  ; (403e4 <__printf_fp_l+0x17f0>)
    0.00 :	  4034e:       ldr.w   r1, [sl, #8]
    0.00 :	  40352:       add     r0, pc
    0.00 :	  40354:       ldr     r0, [r0, #0]
    0.00 :	  40356:       ldr     r0, [r3, r0]
    0.00 :	  40358:       ldr     r3, [r7, #44]   ; 0x2c
    0.00 :	  4035a:       ldrh.w  r1, [r0, r1, lsl #1]
    0.00 :	  4035e:       str     r3, [r7, #60]   ; 0x3c
    0.00 :	  40360:       movs    r3, #1
    0.00 :	  40362:       tst.w   r1, #256        ; 0x100
    0.00 :	  40366:       str     r3, [r7, #36]   ; 0x24
    0.00 :	  40368:       ite     eq
    0.00 :	  4036a:       moveq   r1, #101        ; 0x65
    0.00 :	  4036c:       movne   r1, #69 ; 0x45
    0.00 :	  4036e:       str     r1, [r7, #120]  ; 0x78
    0.00 :	  40370:       b.w     3f9ca <__printf_fp_l+0xdd6>
    0.00 :	  40374:       movs    r1, #32
    0.00 :	  40376:       mov     r0, r4
    0.00 :	  40378:       bl      4639c <__woverflow>
    0.00 :	  4037c:       add.w   ip, r0, #1
    0.00 :	  40380:       rsbs    r0, ip, #0
    0.00 :	  40384:       adc.w   r0, r0, ip
    0.00 :	  40388:       cmp     r0, #0
    0.00 :	  4038a:       bne.w   3f5e2 <__printf_fp_l+0x9ee>
    0.00 :	  4038e:       b.n     3fc48 <__printf_fp_l+0x1054>
    0.00 :	  40390:       ldr     r2, [r7, #120]  ; 0x78
    0.00 :	  40392:       cmp     r2, #102        ; 0x66
    0.00 :	  40394:       bne.w   40092 <__printf_fp_l+0x149e>
    0.00 :	  40398:       ldrb.w  r2, [sl, #12]
    0.00 :	  4039c:       lsls    r3, r2, #28
    0.00 :	  4039e:       bpl.w   40092 <__printf_fp_l+0x149e>
    0.00 :	  403a2:       ldr     r3, [r7, #44]   ; 0x2c
    0.00 :	  403a4:       add.w   r2, r3, #12
    0.00 :	  403a8:       cmp     r2, r0
    0.00 :	  403aa:       bne.w   40092 <__printf_fp_l+0x149e>
    0.00 :	  403ae:       ldr     r1, [r7, #44]   ; 0x2c
    0.00 :	  403b0:       ldr     r2, [r1, #8]
    0.00 :	  403b2:       cmp     r2, #48 ; 0x30
    0.00 :	  403b4:       beq.n   403c4 <__printf_fp_l+0x17d0>
    0.00 :	  403b6:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  403b8:       ldr     r5, [r7, #8]
    0.00 :	  403ba:       ldr     r1, [r1, #12]
    0.00 :	  403bc:       add     r3, r5
    0.00 :	  403be:       mov     r2, r3
    0.00 :	  403c0:       b.w     3f96a <__printf_fp_l+0xd76>
    0.00 :	  403c4:       ldr     r3, [r7, #8]
    0.00 :	  403c6:       subs    r2, r3, #1
    0.00 :	  403c8:       ldr     r3, [r7, #44]   ; 0x2c
    0.00 :	  403ca:       ldr     r1, [r3, #12]
    0.00 :	  403cc:       ldr     r3, [r7, #68]   ; 0x44
    0.00 :	  403ce:       add     r2, r3
    0.00 :	  403d0:       b.w     3f96a <__printf_fp_l+0xd76>
    0.00 :	  403d4:       movs    r2, #0
    0.00 :	  403d6:       mov     r1, r2
    0.00 :	  403d8:       mov     r0, r2
    0.00 :	  403da:       bl      3ea44 <_i18n_number_rewrite>
    0.00 :	  403de:       mov     fp, r0
    0.00 :	  403e0:       b.w     3fb6a <__printf_fp_l+0xf76>
    0.00 :	  403e4:       .word   0x0005cd26
 Percent |	Source code & Disassembly of sg for cycles:ppp (1 samples)
--------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	00017178 <sloww1>:
         :	sloww1():
  100.00 :	  17178:       push    {r4, r5, lr}
    0.00 :	  1717a:       mov     r4, r0
    0.00 :	  1717c:       vpush   {d8-d11}
    0.00 :	  17180:       mov     r5, r1
    0.00 :	  17182:       vmov.f64        d11, d0
    0.00 :	  17186:       vldr    d0, [pc, #192]  ; 17248 <sloww1+0xd0>
    0.00 :	  1718a:       sub     sp, #28
    0.00 :	  1718c:       mov     r1, sp
    0.00 :	  1718e:       vmov.f64        d8, d2
    0.00 :	  17192:       vldr    d2, [pc, #188]  ; 17250 <sloww1+0xd8>
    0.00 :	  17196:       vadd.f64        d7, d11, d0
    0.00 :	  1719a:       vsub.f64        d0, d7, d0
    0.00 :	  1719e:       vmov    r0, s14
    0.00 :	  171a2:       vabs.f64        d10, d8
    0.00 :	  171a6:       vsub.f64        d0, d11, d0
    0.00 :	  171aa:       vmul.f64        d2, d10, d2
    0.00 :	  171ae:       bl      17068 <do_sin_slow.isra.3>
    0.00 :	  171b2:       vldr    d7, [sp]
    0.00 :	  171b6:       vadd.f64        d7, d0, d7
    0.00 :	  171ba:       vcmp.f64        d0, d7
    0.00 :	  171be:       vmrs    APSR_nzcv, fpscr
    0.00 :	  171c2:       bne.n   171d0 <sloww1+0x58>
    0.00 :	  171c4:       cmp     r4, #0
    0.00 :	  171c6:       ble.n   1722c <sloww1+0xb4>
    0.00 :	  171c8:       add     sp, #28
    0.00 :	  171ca:       vpop    {d8-d11}
    0.00 :	  171ce:       pop     {r4, r5, pc}
    0.00 :	  171d0:       vmov.f64        d0, d11
    0.00 :	  171d4:       add     r0, sp, #8
    0.00 :	  171d6:       bl      1b458 <__dubsin>
    0.00 :	  171da:       vldr    d7, [pc, #124]  ; 17258 <sloww1+0xe0>
    0.00 :	  171de:       vldr    d6, [sp, #16]
    0.00 :	  171e2:       vmul.f64        d10, d10, d7
    0.00 :	  171e6:       vldr    d5, [pc, #120]  ; 17260 <sloww1+0xe8>
    0.00 :	  171ea:       vldr    d0, [sp, #8]
    0.00 :	  171ee:       vcmpe.f64       d6, #0.0
    0.00 :	  171f2:       vmrs    APSR_nzcv, fpscr
    0.00 :	  171f6:       ite     gt
    0.00 :	  171f8:       vmlagt.f64      d10, d6, d5
    0.00 :	  171fc:       vnmlsle.f64     d10, d6, d5
    0.00 :	  17200:       vstr    d10, [sp]
    0.00 :	  17204:       vadd.f64        d10, d0, d10
    0.00 :	  17208:       vcmp.f64        d0, d10
    0.00 :	  1720c:       vmrs    APSR_nzcv, fpscr
    0.00 :	  17210:       beq.n   171c4 <sloww1+0x4c>
    0.00 :	  17212:       cmp     r5, #1
    0.00 :	  17214:       beq.n   17238 <sloww1+0xc0>
    0.00 :	  17216:       vmov.f64        d0, d8
    0.00 :	  1721a:       movs    r0, #1
    0.00 :	  1721c:       vldr    d1, [pc, #72]   ; 17268 <sloww1+0xf0>
    0.00 :	  17220:       bl      1dcd8 <__mpsin>
    0.00 :	  17224:       add     sp, #28
    0.00 :	  17226:       vpop    {d8-d11}
    0.00 :	  1722a:       pop     {r4, r5, pc}
    0.00 :	  1722c:       vneg.f64        d0, d0
    0.00 :	  17230:       add     sp, #28
    0.00 :	  17232:       vpop    {d8-d11}
    0.00 :	  17236:       pop     {r4, r5, pc}
    0.00 :	  17238:       mov     r0, r5
    0.00 :	  1723a:       vmov.f64        d0, d8
    0.00 :	  1723e:       vldr    d1, [pc, #40]   ; 17268 <sloww1+0xf0>
    0.00 :	  17242:       bl      1ddc4 <__mpcos>
    0.00 :	  17246:       b.n     171c8 <sloww1+0x50>
    0.00 :	  17248:       .word   0x00000000
    0.00 :	  1724c:       .word   0x42c80000
    0.00 :	  17250:       .word   0x64ba3a77
    0.00 :	  17254:       .word   0x39cf700f
    0.00 :	  17258:       .word   0xcb9cefaf
    0.00 :	  1725c:       .word   0x39b64f86
    0.00 :	  17260:       .word   0x015798ee
    0.00 :	  17264:       .word   0x3ff00000
         :	        ...
